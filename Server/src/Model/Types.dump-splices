/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arGs v_arGt
             -> case fromPersistValue v_arGt of
                  Left e_arGu -> Left e_arGu
                  Right s'_arGv
                    -> case (reads $ (unpack s'_arGv)) of
                         ((x_arGw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arGw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arGs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arGv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atqJ v_atqK
             -> case fromPersistValue v_atqK of
                  Left e_atqL -> Left e_atqL
                  Right s'_atqM
                    -> case (reads $ (unpack s'_atqM)) of
                         ((x_atqN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atqN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atqJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atqM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atzi v_atzj
             -> case fromPersistValue v_atzj of
                  Left e_atzk -> Left e_atzk
                  Right s'_atzl
                    -> case (reads $ (unpack s'_atzl)) of
                         ((x_atzm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atzm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atzi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atzl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aU6I v_aU6J
             -> case fromPersistValue v_aU6J of
                  Left e_aU6K -> Left e_aU6K
                  Right s'_aU6L
                    -> case (reads $ (unpack s'_aU6L)) of
                         ((x_aU6M, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aU6M
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aU6I)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aU6L)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aUed v_aUee
             -> case fromPersistValue v_aUee of
                  Left e_aUef -> Left e_aUef
                  Right s'_aUeg
                    -> case (reads $ (unpack s'_aUeg)) of
                         ((x_aUeh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aUeh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aUed)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aUeg)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aUmp v_aUmq
             -> case fromPersistValue v_aUmq of
                  Left e_aUmr -> Left e_aUmr
                  Right s'_aUms
                    -> case (reads $ (unpack s'_aUms)) of
                         ((x_aUmt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aUmt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aUmp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aUms)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aUHJ v_aUHK
             -> case fromPersistValue v_aUHK of
                  Left e_aUHL -> Left e_aUHL
                  Right s'_aUHM
                    -> case (reads $ (unpack s'_aUHM)) of
                         ((x_aUHN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aUHN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aUHJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aUHM)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aUPe v_aUPf
             -> case fromPersistValue v_aUPf of
                  Left e_aUPg -> Left e_aUPg
                  Right s'_aUPh
                    -> case (reads $ (unpack s'_aUPh)) of
                         ((x_aUPi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aUPi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aUPe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aUPh)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aUXq v_aUXr
             -> case fromPersistValue v_aUXr of
                  Left e_aUXs -> Left e_aUXs
                  Right s'_aUXt
                    -> case (reads $ (unpack s'_aUXt)) of
                         ((x_aUXu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aUXu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aUXq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aUXt)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a14in v_a14io
             -> case fromPersistValue v_a14io of
                  Left e_a14ip -> Left e_a14ip
                  Right s'_a14iq
                    -> case (reads $ (unpack s'_a14iq)) of
                         ((x_a14ir, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a14ir
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a14in)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a14iq)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a14pS v_a14pT
             -> case fromPersistValue v_a14pT of
                  Left e_a14pU -> Left e_a14pU
                  Right s'_a14pV
                    -> case (reads $ (unpack s'_a14pV)) of
                         ((x_a14pW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a14pW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a14pS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a14pV)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a14y4 v_a14y5
             -> case fromPersistValue v_a14y5 of
                  Left e_a14y6 -> Left e_a14y6
                  Right s'_a14y7
                    -> case (reads $ (unpack s'_a14y7)) of
                         ((x_a14y8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a14y8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a14y4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a14y7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1lEE v_a1lEF
             -> case fromPersistValue v_a1lEF of
                  Left e_a1lEG -> Left e_a1lEG
                  Right s'_a1lEH
                    -> case (reads $ (unpack s'_a1lEH)) of
                         ((x_a1lEI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1lEI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1lEE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1lEH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1lM9 v_a1lMa
             -> case fromPersistValue v_a1lMa of
                  Left e_a1lMb -> Left e_a1lMb
                  Right s'_a1lMc
                    -> case (reads $ (unpack s'_a1lMc)) of
                         ((x_a1lMd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1lMd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1lM9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1lMc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1lUl v_a1lUm
             -> case fromPersistValue v_a1lUm of
                  Left e_a1lUn -> Left e_a1lUn
                  Right s'_a1lUo
                    -> case (reads $ (unpack s'_a1lUo)) of
                         ((x_a1lUp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1lUp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1lUl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1lUo)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1xqc v_a1xqd
             -> case fromPersistValue v_a1xqd of
                  Left e_a1xqe -> Left e_a1xqe
                  Right s'_a1xqf
                    -> case (reads $ (unpack s'_a1xqf)) of
                         ((x_a1xqg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1xqg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1xqc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1xqf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1xxH v_a1xxI
             -> case fromPersistValue v_a1xxI of
                  Left e_a1xxJ -> Left e_a1xxJ
                  Right s'_a1xxK
                    -> case (reads $ (unpack s'_a1xxK)) of
                         ((x_a1xxL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1xxL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1xxH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1xxK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1xFT v_a1xFU
             -> case fromPersistValue v_a1xFU of
                  Left e_a1xFV -> Left e_a1xFV
                  Right s'_a1xFW
                    -> case (reads $ (unpack s'_a1xFW)) of
                         ((x_a1xFX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1xFX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1xFT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1xFW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1y0B v_a1y0C
             -> case fromPersistValue v_a1y0C of
                  Left e_a1y0D -> Left e_a1y0D
                  Right s'_a1y0E
                    -> case (reads $ (unpack s'_a1y0E)) of
                         ((x_a1y0F, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1y0F
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1y0B)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1y0E)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1y86 v_a1y87
             -> case fromPersistValue v_a1y87 of
                  Left e_a1y88 -> Left e_a1y88
                  Right s'_a1y89
                    -> case (reads $ (unpack s'_a1y89)) of
                         ((x_a1y8a, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1y8a
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1y86)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1y89)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1ygi v_a1ygj
             -> case fromPersistValue v_a1ygj of
                  Left e_a1ygk -> Left e_a1ygk
                  Right s'_a1ygl
                    -> case (reads $ (unpack s'_a1ygl)) of
                         ((x_a1ygm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1ygm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1ygi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1ygl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1JLF v_a1JLG
             -> case fromPersistValue v_a1JLG of
                  Left e_a1JLH -> Left e_a1JLH
                  Right s'_a1JLI
                    -> case (reads $ (unpack s'_a1JLI)) of
                         ((x_a1JLJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1JLJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1JLF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1JLI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1JTa v_a1JTb
             -> case fromPersistValue v_a1JTb of
                  Left e_a1JTc -> Left e_a1JTc
                  Right s'_a1JTd
                    -> case (reads $ (unpack s'_a1JTd)) of
                         ((x_a1JTe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1JTe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1JTa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1JTd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1K1m v_a1K1n
             -> case fromPersistValue v_a1K1n of
                  Left e_a1K1o -> Left e_a1K1o
                  Right s'_a1K1p
                    -> case (reads $ (unpack s'_a1K1p)) of
                         ((x_a1K1q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1K1q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1K1m)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1K1p)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1L6s v_a1L6t
             -> case fromPersistValue v_a1L6t of
                  Left e_a1L6u -> Left e_a1L6u
                  Right s'_a1L6v
                    -> case (reads $ (unpack s'_a1L6v)) of
                         ((x_a1L6w, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1L6w
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1L6s)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1L6v)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1LdX v_a1LdY
             -> case fromPersistValue v_a1LdY of
                  Left e_a1LdZ -> Left e_a1LdZ
                  Right s'_a1Le0
                    -> case (reads $ (unpack s'_a1Le0)) of
                         ((x_a1Le1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1Le1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1LdX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1Le0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1Lm9 v_a1Lma
             -> case fromPersistValue v_a1Lma of
                  Left e_a1Lmb -> Left e_a1Lmb
                  Right s'_a1Lmc
                    -> case (reads $ (unpack s'_a1Lmc)) of
                         ((x_a1Lmd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1Lmd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1Lm9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1Lmc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1RWK v_a1RWL
             -> case fromPersistValue v_a1RWL of
                  Left e_a1RWM -> Left e_a1RWM
                  Right s'_a1RWN
                    -> case (reads $ (unpack s'_a1RWN)) of
                         ((x_a1RWO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1RWO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1RWK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1RWN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1S4f v_a1S4g
             -> case fromPersistValue v_a1S4g of
                  Left e_a1S4h -> Left e_a1S4h
                  Right s'_a1S4i
                    -> case (reads $ (unpack s'_a1S4i)) of
                         ((x_a1S4j, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1S4j
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1S4f)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1S4i)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1Scr v_a1Scs
             -> case fromPersistValue v_a1Scs of
                  Left e_a1Sct -> Left e_a1Sct
                  Right s'_a1Scu
                    -> case (reads $ (unpack s'_a1Scu)) of
                         ((x_a1Scv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1Scv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1Scr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1Scu)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a21xo v_a21xp
             -> case fromPersistValue v_a21xp of
                  Left e_a21xq -> Left e_a21xq
                  Right s'_a21xr
                    -> case (reads $ (unpack s'_a21xr)) of
                         ((x_a21xs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a21xs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a21xo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a21xr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a21ET v_a21EU
             -> case fromPersistValue v_a21EU of
                  Left e_a21EV -> Left e_a21EV
                  Right s'_a21EW
                    -> case (reads $ (unpack s'_a21EW)) of
                         ((x_a21EX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a21EX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a21ET)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a21EW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a21N5 v_a21N6
             -> case fromPersistValue v_a21N6 of
                  Left e_a21N7 -> Left e_a21N7
                  Right s'_a21N8
                    -> case (reads $ (unpack s'_a21N8)) of
                         ((x_a21N9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a21N9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a21N5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a21N8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a227c v_a227d
             -> case fromPersistValue v_a227d of
                  Left e_a227e -> Left e_a227e
                  Right s'_a227f
                    -> case (reads $ (unpack s'_a227f)) of
                         ((x_a227g, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a227g
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a227c)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a227f)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a22eH v_a22eI
             -> case fromPersistValue v_a22eI of
                  Left e_a22eJ -> Left e_a22eJ
                  Right s'_a22eK
                    -> case (reads $ (unpack s'_a22eK)) of
                         ((x_a22eL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a22eL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a22eH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a22eK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a22mT v_a22mU
             -> case fromPersistValue v_a22mU of
                  Left e_a22mV -> Left e_a22mV
                  Right s'_a22mW
                    -> case (reads $ (unpack s'_a22mW)) of
                         ((x_a22mX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a22mX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a22mT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a22mW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2bHQ v_a2bHR
             -> case fromPersistValue v_a2bHR of
                  Left e_a2bHS -> Left e_a2bHS
                  Right s'_a2bHT
                    -> case (reads $ (unpack s'_a2bHT)) of
                         ((x_a2bHU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2bHU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2bHQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2bHT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2bPl v_a2bPm
             -> case fromPersistValue v_a2bPm of
                  Left e_a2bPn -> Left e_a2bPn
                  Right s'_a2bPo
                    -> case (reads $ (unpack s'_a2bPo)) of
                         ((x_a2bPp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2bPp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2bPl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2bPo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2bXx v_a2bXy
             -> case fromPersistValue v_a2bXy of
                  Left e_a2bXz -> Left e_a2bXz
                  Right s'_a2bXA
                    -> case (reads $ (unpack s'_a2bXA)) of
                         ((x_a2bXB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2bXB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2bXx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2bXA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2chE v_a2chF
             -> case fromPersistValue v_a2chF of
                  Left e_a2chG -> Left e_a2chG
                  Right s'_a2chH
                    -> case (reads $ (unpack s'_a2chH)) of
                         ((x_a2chI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2chI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2chE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2chH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2cp9 v_a2cpa
             -> case fromPersistValue v_a2cpa of
                  Left e_a2cpb -> Left e_a2cpb
                  Right s'_a2cpc
                    -> case (reads $ (unpack s'_a2cpc)) of
                         ((x_a2cpd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2cpd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2cp9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2cpc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2cxl v_a2cxm
             -> case fromPersistValue v_a2cxm of
                  Left e_a2cxn -> Left e_a2cxn
                  Right s'_a2cxo
                    -> case (reads $ (unpack s'_a2cxo)) of
                         ((x_a2cxp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2cxp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2cxl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2cxo)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2dpo v_a2dpp
             -> case fromPersistValue v_a2dpp of
                  Left e_a2dpq -> Left e_a2dpq
                  Right s'_a2dpr
                    -> case (reads $ (unpack s'_a2dpr)) of
                         ((x_a2dps, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2dps
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2dpo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2dpr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2dwT v_a2dwU
             -> case fromPersistValue v_a2dwU of
                  Left e_a2dwV -> Left e_a2dwV
                  Right s'_a2dwW
                    -> case (reads $ (unpack s'_a2dwW)) of
                         ((x_a2dwX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2dwX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2dwT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2dwW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2dF5 v_a2dF6
             -> case fromPersistValue v_a2dF6 of
                  Left e_a2dF7 -> Left e_a2dF7
                  Right s'_a2dF8
                    -> case (reads $ (unpack s'_a2dF8)) of
                         ((x_a2dF9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2dF9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2dF5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2dF8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2ex8 v_a2ex9
             -> case fromPersistValue v_a2ex9 of
                  Left e_a2exa -> Left e_a2exa
                  Right s'_a2exb
                    -> case (reads $ (unpack s'_a2exb)) of
                         ((x_a2exc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2exc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2ex8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2exb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2eED v_a2eEE
             -> case fromPersistValue v_a2eEE of
                  Left e_a2eEF -> Left e_a2eEF
                  Right s'_a2eEG
                    -> case (reads $ (unpack s'_a2eEG)) of
                         ((x_a2eEH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2eEH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2eED)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2eEG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2eMP v_a2eMQ
             -> case fromPersistValue v_a2eMQ of
                  Left e_a2eMR -> Left e_a2eMR
                  Right s'_a2eMS
                    -> case (reads $ (unpack s'_a2eMS)) of
                         ((x_a2eMT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2eMT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2eMP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2eMS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2fhK v_a2fhL
             -> case fromPersistValue v_a2fhL of
                  Left e_a2fhM -> Left e_a2fhM
                  Right s'_a2fhN
                    -> case (reads $ (unpack s'_a2fhN)) of
                         ((x_a2fhO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2fhO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2fhK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2fhN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2fpf v_a2fpg
             -> case fromPersistValue v_a2fpg of
                  Left e_a2fph -> Left e_a2fph
                  Right s'_a2fpi
                    -> case (reads $ (unpack s'_a2fpi)) of
                         ((x_a2fpj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2fpj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2fpf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2fpi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2fxr v_a2fxs
             -> case fromPersistValue v_a2fxs of
                  Left e_a2fxt -> Left e_a2fxt
                  Right s'_a2fxu
                    -> case (reads $ (unpack s'_a2fxu)) of
                         ((x_a2fxv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2fxv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2fxr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2fxu)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2g2m v_a2g2n
             -> case fromPersistValue v_a2g2n of
                  Left e_a2g2o -> Left e_a2g2o
                  Right s'_a2g2p
                    -> case (reads $ (unpack s'_a2g2p)) of
                         ((x_a2g2q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2g2q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2g2m)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2g2p)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2g9R v_a2g9S
             -> case fromPersistValue v_a2g9S of
                  Left e_a2g9T -> Left e_a2g9T
                  Right s'_a2g9U
                    -> case (reads $ (unpack s'_a2g9U)) of
                         ((x_a2g9V, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2g9V
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2g9R)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2g9U)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2gi3 v_a2gi4
             -> case fromPersistValue v_a2gi4 of
                  Left e_a2gi5 -> Left e_a2gi5
                  Right s'_a2gi6
                    -> case (reads $ (unpack s'_a2gi6)) of
                         ((x_a2gi7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2gi7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2gi3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2gi6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2gMY v_a2gMZ
             -> case fromPersistValue v_a2gMZ of
                  Left e_a2gN0 -> Left e_a2gN0
                  Right s'_a2gN1
                    -> case (reads $ (unpack s'_a2gN1)) of
                         ((x_a2gN2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2gN2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2gMY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2gN1)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2gUt v_a2gUu
             -> case fromPersistValue v_a2gUu of
                  Left e_a2gUv -> Left e_a2gUv
                  Right s'_a2gUw
                    -> case (reads $ (unpack s'_a2gUw)) of
                         ((x_a2gUx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2gUx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2gUt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2gUw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2h2F v_a2h2G
             -> case fromPersistValue v_a2h2G of
                  Left e_a2h2H -> Left e_a2h2H
                  Right s'_a2h2I
                    -> case (reads $ (unpack s'_a2h2I)) of
                         ((x_a2h2J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2h2J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2h2F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2h2I)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2hyF v_a2hyG
             -> case fromPersistValue v_a2hyG of
                  Left e_a2hyH -> Left e_a2hyH
                  Right s'_a2hyI
                    -> case (reads $ (unpack s'_a2hyI)) of
                         ((x_a2hyJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2hyJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2hyF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2hyI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2hGa v_a2hGb
             -> case fromPersistValue v_a2hGb of
                  Left e_a2hGc -> Left e_a2hGc
                  Right s'_a2hGd
                    -> case (reads $ (unpack s'_a2hGd)) of
                         ((x_a2hGe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2hGe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2hGa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2hGd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2hOm v_a2hOn
             -> case fromPersistValue v_a2hOn of
                  Left e_a2hOo -> Left e_a2hOo
                  Right s'_a2hOp
                    -> case (reads $ (unpack s'_a2hOp)) of
                         ((x_a2hOq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2hOq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2hOm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2hOp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2iGv v_a2iGw
             -> case fromPersistValue v_a2iGw of
                  Left e_a2iGx -> Left e_a2iGx
                  Right s'_a2iGy
                    -> case (reads $ (unpack s'_a2iGy)) of
                         ((x_a2iGz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2iGz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2iGv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2iGy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2iO0 v_a2iO1
             -> case fromPersistValue v_a2iO1 of
                  Left e_a2iO2 -> Left e_a2iO2
                  Right s'_a2iO3
                    -> case (reads $ (unpack s'_a2iO3)) of
                         ((x_a2iO4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2iO4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2iO0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2iO3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2iWc v_a2iWd
             -> case fromPersistValue v_a2iWd of
                  Left e_a2iWe -> Left e_a2iWe
                  Right s'_a2iWf
                    -> case (reads $ (unpack s'_a2iWf)) of
                         ((x_a2iWg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2iWg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2iWc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2iWf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2ml7 v_a2ml8
             -> case fromPersistValue v_a2ml8 of
                  Left e_a2ml9 -> Left e_a2ml9
                  Right s'_a2mla
                    -> case (reads $ (unpack s'_a2mla)) of
                         ((x_a2mlb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2mlb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2ml7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2mla)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2msC v_a2msD
             -> case fromPersistValue v_a2msD of
                  Left e_a2msE -> Left e_a2msE
                  Right s'_a2msF
                    -> case (reads $ (unpack s'_a2msF)) of
                         ((x_a2msG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2msG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2msC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2msF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2mAO v_a2mAP
             -> case fromPersistValue v_a2mAP of
                  Left e_a2mAQ -> Left e_a2mAQ
                  Right s'_a2mAR
                    -> case (reads $ (unpack s'_a2mAR)) of
                         ((x_a2mAS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2mAS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2mAO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2mAR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2pZJ v_a2pZK
             -> case fromPersistValue v_a2pZK of
                  Left e_a2pZL -> Left e_a2pZL
                  Right s'_a2pZM
                    -> case (reads $ (unpack s'_a2pZM)) of
                         ((x_a2pZN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2pZN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2pZJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2pZM)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2q7e v_a2q7f
             -> case fromPersistValue v_a2q7f of
                  Left e_a2q7g -> Left e_a2q7g
                  Right s'_a2q7h
                    -> case (reads $ (unpack s'_a2q7h)) of
                         ((x_a2q7i, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2q7i
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2q7e)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2q7h)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2qfq v_a2qfr
             -> case fromPersistValue v_a2qfr of
                  Left e_a2qfs -> Left e_a2qfs
                  Right s'_a2qft
                    -> case (reads $ (unpack s'_a2qft)) of
                         ((x_a2qfu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2qfu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2qfq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2qft)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2tEl v_a2tEm
             -> case fromPersistValue v_a2tEm of
                  Left e_a2tEn -> Left e_a2tEn
                  Right s'_a2tEo
                    -> case (reads $ (unpack s'_a2tEo)) of
                         ((x_a2tEp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2tEp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2tEl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2tEo)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2tLQ v_a2tLR
             -> case fromPersistValue v_a2tLR of
                  Left e_a2tLS -> Left e_a2tLS
                  Right s'_a2tLT
                    -> case (reads $ (unpack s'_a2tLT)) of
                         ((x_a2tLU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2tLU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2tLQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2tLT)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2tU2 v_a2tU3
             -> case fromPersistValue v_a2tU3 of
                  Left e_a2tU4 -> Left e_a2tU4
                  Right s'_a2tU5
                    -> case (reads $ (unpack s'_a2tU5)) of
                         ((x_a2tU6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2tU6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2tU2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2tU5)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2D6d v_a2D6e
             -> case fromPersistValue v_a2D6e of
                  Left e_a2D6f -> Left e_a2D6f
                  Right s'_a2D6g
                    -> case (reads $ (unpack s'_a2D6g)) of
                         ((x_a2D6h, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2D6h
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2D6d)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2D6g)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2DdI v_a2DdJ
             -> case fromPersistValue v_a2DdJ of
                  Left e_a2DdK -> Left e_a2DdK
                  Right s'_a2DdL
                    -> case (reads $ (unpack s'_a2DdL)) of
                         ((x_a2DdM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2DdM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2DdI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2DdL)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2DlU v_a2DlV
             -> case fromPersistValue v_a2DlV of
                  Left e_a2DlW -> Left e_a2DlW
                  Right s'_a2DlX
                    -> case (reads $ (unpack s'_a2DlX)) of
                         ((x_a2DlY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2DlY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2DlU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2DlX)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2DG1 v_a2DG2
             -> case fromPersistValue v_a2DG2 of
                  Left e_a2DG3 -> Left e_a2DG3
                  Right s'_a2DG4
                    -> case (reads $ (unpack s'_a2DG4)) of
                         ((x_a2DG5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2DG5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2DG1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2DG4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2DNw v_a2DNx
             -> case fromPersistValue v_a2DNx of
                  Left e_a2DNy -> Left e_a2DNy
                  Right s'_a2DNz
                    -> case (reads $ (unpack s'_a2DNz)) of
                         ((x_a2DNA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2DNA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2DNw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2DNz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2DVI v_a2DVJ
             -> case fromPersistValue v_a2DVJ of
                  Left e_a2DVK -> Left e_a2DVK
                  Right s'_a2DVL
                    -> case (reads $ (unpack s'_a2DVL)) of
                         ((x_a2DVM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2DVM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2DVI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2DVL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2Kpa v_a2Kpb
             -> case fromPersistValue v_a2Kpb of
                  Left e_a2Kpc -> Left e_a2Kpc
                  Right s'_a2Kpd
                    -> case (reads $ (unpack s'_a2Kpd)) of
                         ((x_a2Kpe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2Kpe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2Kpa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2Kpd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2KwF v_a2KwG
             -> case fromPersistValue v_a2KwG of
                  Left e_a2KwH -> Left e_a2KwH
                  Right s'_a2KwI
                    -> case (reads $ (unpack s'_a2KwI)) of
                         ((x_a2KwJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2KwJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2KwF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2KwI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2KER v_a2KES
             -> case fromPersistValue v_a2KES of
                  Left e_a2KET -> Left e_a2KET
                  Right s'_a2KEU
                    -> case (reads $ (unpack s'_a2KEU)) of
                         ((x_a2KEV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2KEV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2KER)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2KEU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2RpL v_a2RpM
             -> case fromPersistValue v_a2RpM of
                  Left e_a2RpN -> Left e_a2RpN
                  Right s'_a2RpO
                    -> case (reads $ (unpack s'_a2RpO)) of
                         ((x_a2RpP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2RpP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2RpL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2RpO)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2Rxg v_a2Rxh
             -> case fromPersistValue v_a2Rxh of
                  Left e_a2Rxi -> Left e_a2Rxi
                  Right s'_a2Rxj
                    -> case (reads $ (unpack s'_a2Rxj)) of
                         ((x_a2Rxk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2Rxk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2Rxg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2Rxj)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2RFs v_a2RFt
             -> case fromPersistValue v_a2RFt of
                  Left e_a2RFu -> Left e_a2RFu
                  Right s'_a2RFv
                    -> case (reads $ (unpack s'_a2RFv)) of
                         ((x_a2RFw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2RFw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2RFs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2RFv)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a30Rp v_a30Rq
             -> case fromPersistValue v_a30Rq of
                  Left e_a30Rr -> Left e_a30Rr
                  Right s'_a30Rs
                    -> case (reads $ (unpack s'_a30Rs)) of
                         ((x_a30Rt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a30Rt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a30Rp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a30Rs)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a30YU v_a30YV
             -> case fromPersistValue v_a30YV of
                  Left e_a30YW -> Left e_a30YW
                  Right s'_a30YX
                    -> case (reads $ (unpack s'_a30YX)) of
                         ((x_a30YY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a30YY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a30YU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a30YX)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3176 v_a3177
             -> case fromPersistValue v_a3177 of
                  Left e_a3178 -> Left e_a3178
                  Right s'_a3179
                    -> case (reads $ (unpack s'_a3179)) of
                         ((x_a317a, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a317a
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3176)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3179)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a31rd v_a31re
             -> case fromPersistValue v_a31re of
                  Left e_a31rf -> Left e_a31rf
                  Right s'_a31rg
                    -> case (reads $ (unpack s'_a31rg)) of
                         ((x_a31rh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a31rh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a31rd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a31rg)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a31yI v_a31yJ
             -> case fromPersistValue v_a31yJ of
                  Left e_a31yK -> Left e_a31yK
                  Right s'_a31yL
                    -> case (reads $ (unpack s'_a31yL)) of
                         ((x_a31yM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a31yM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a31yI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a31yL)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a31GU v_a31GV
             -> case fromPersistValue v_a31GV of
                  Left e_a31GW -> Left e_a31GW
                  Right s'_a31GX
                    -> case (reads $ (unpack s'_a31GX)) of
                         ((x_a31GY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a31GY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a31GU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a31GX)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a355P v_a355Q
             -> case fromPersistValue v_a355Q of
                  Left e_a355R -> Left e_a355R
                  Right s'_a355S
                    -> case (reads $ (unpack s'_a355S)) of
                         ((x_a355T, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a355T
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a355P)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a355S)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a35dk v_a35dl
             -> case fromPersistValue v_a35dl of
                  Left e_a35dm -> Left e_a35dm
                  Right s'_a35dn
                    -> case (reads $ (unpack s'_a35dn)) of
                         ((x_a35do, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a35do
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a35dk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a35dn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a35lw v_a35lx
             -> case fromPersistValue v_a35lx of
                  Left e_a35ly -> Left e_a35ly
                  Right s'_a35lz
                    -> case (reads $ (unpack s'_a35lz)) of
                         ((x_a35lA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a35lA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a35lw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a35lz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3eGt v_a3eGu
             -> case fromPersistValue v_a3eGu of
                  Left e_a3eGv -> Left e_a3eGv
                  Right s'_a3eGw
                    -> case (reads $ (unpack s'_a3eGw)) of
                         ((x_a3eGx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3eGx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3eGt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3eGw)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3eNY v_a3eNZ
             -> case fromPersistValue v_a3eNZ of
                  Left e_a3eO0 -> Left e_a3eO0
                  Right s'_a3eO1
                    -> case (reads $ (unpack s'_a3eO1)) of
                         ((x_a3eO2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3eO2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3eNY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3eO1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3eWa v_a3eWb
             -> case fromPersistValue v_a3eWb of
                  Left e_a3eWc -> Left e_a3eWc
                  Right s'_a3eWd
                    -> case (reads $ (unpack s'_a3eWd)) of
                         ((x_a3eWe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3eWe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3eWa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3eWd)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3fgh v_a3fgi
             -> case fromPersistValue v_a3fgi of
                  Left e_a3fgj -> Left e_a3fgj
                  Right s'_a3fgk
                    -> case (reads $ (unpack s'_a3fgk)) of
                         ((x_a3fgl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3fgl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3fgh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3fgk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3fnM v_a3fnN
             -> case fromPersistValue v_a3fnN of
                  Left e_a3fnO -> Left e_a3fnO
                  Right s'_a3fnP
                    -> case (reads $ (unpack s'_a3fnP)) of
                         ((x_a3fnQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3fnQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3fnM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3fnP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3fvY v_a3fvZ
             -> case fromPersistValue v_a3fvZ of
                  Left e_a3fw0 -> Left e_a3fw0
                  Right s'_a3fw1
                    -> case (reads $ (unpack s'_a3fw1)) of
                         ((x_a3fw2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3fw2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3fvY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3fw1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3oQV v_a3oQW
             -> case fromPersistValue v_a3oQW of
                  Left e_a3oQX -> Left e_a3oQX
                  Right s'_a3oQY
                    -> case (reads $ (unpack s'_a3oQY)) of
                         ((x_a3oQZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3oQZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3oQV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3oQY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3oYq v_a3oYr
             -> case fromPersistValue v_a3oYr of
                  Left e_a3oYs -> Left e_a3oYs
                  Right s'_a3oYt
                    -> case (reads $ (unpack s'_a3oYt)) of
                         ((x_a3oYu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3oYu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3oYq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3oYt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3p6C v_a3p6D
             -> case fromPersistValue v_a3p6D of
                  Left e_a3p6E -> Left e_a3p6E
                  Right s'_a3p6F
                    -> case (reads $ (unpack s'_a3p6F)) of
                         ((x_a3p6G, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3p6G
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3p6C)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3p6F)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3pqJ v_a3pqK
             -> case fromPersistValue v_a3pqK of
                  Left e_a3pqL -> Left e_a3pqL
                  Right s'_a3pqM
                    -> case (reads $ (unpack s'_a3pqM)) of
                         ((x_a3pqN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3pqN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3pqJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3pqM)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3pye v_a3pyf
             -> case fromPersistValue v_a3pyf of
                  Left e_a3pyg -> Left e_a3pyg
                  Right s'_a3pyh
                    -> case (reads $ (unpack s'_a3pyh)) of
                         ((x_a3pyi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3pyi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3pye)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3pyh)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3pGq v_a3pGr
             -> case fromPersistValue v_a3pGr of
                  Left e_a3pGs -> Left e_a3pGs
                  Right s'_a3pGt
                    -> case (reads $ (unpack s'_a3pGt)) of
                         ((x_a3pGu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3pGu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3pGq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3pGt)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Bz2 v_a3Bz3
             -> case fromPersistValue v_a3Bz3 of
                  Left e_a3Bz4 -> Left e_a3Bz4
                  Right s'_a3Bz5
                    -> case (reads $ (unpack s'_a3Bz5)) of
                         ((x_a3Bz6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Bz6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Bz2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Bz5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3BGx v_a3BGy
             -> case fromPersistValue v_a3BGy of
                  Left e_a3BGz -> Left e_a3BGz
                  Right s'_a3BGA
                    -> case (reads $ (unpack s'_a3BGA)) of
                         ((x_a3BGB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3BGB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3BGx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3BGA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3BOJ v_a3BOK
             -> case fromPersistValue v_a3BOK of
                  Left e_a3BOL -> Left e_a3BOL
                  Right s'_a3BOM
                    -> case (reads $ (unpack s'_a3BOM)) of
                         ((x_a3BON, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3BON
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3BOJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3BOM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Ca4 v_a3Ca5
             -> case fromPersistValue v_a3Ca5 of
                  Left e_a3Ca6 -> Left e_a3Ca6
                  Right s'_a3Ca7
                    -> case (reads $ (unpack s'_a3Ca7)) of
                         ((x_a3Ca8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Ca8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Ca4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Ca7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Chz v_a3ChA
             -> case fromPersistValue v_a3ChA of
                  Left e_a3ChB -> Left e_a3ChB
                  Right s'_a3ChC
                    -> case (reads $ (unpack s'_a3ChC)) of
                         ((x_a3ChD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3ChD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Chz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3ChC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3CpL v_a3CpM
             -> case fromPersistValue v_a3CpM of
                  Left e_a3CpN -> Left e_a3CpN
                  Right s'_a3CpO
                    -> case (reads $ (unpack s'_a3CpO)) of
                         ((x_a3CpP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3CpP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3CpL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3CpO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Oin v_a3Oio
             -> case fromPersistValue v_a3Oio of
                  Left e_a3Oip -> Left e_a3Oip
                  Right s'_a3Oiq
                    -> case (reads $ (unpack s'_a3Oiq)) of
                         ((x_a3Oir, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Oir
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Oin)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Oiq)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3OpS v_a3OpT
             -> case fromPersistValue v_a3OpT of
                  Left e_a3OpU -> Left e_a3OpU
                  Right s'_a3OpV
                    -> case (reads $ (unpack s'_a3OpV)) of
                         ((x_a3OpW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3OpW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3OpS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3OpV)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Oy4 v_a3Oy5
             -> case fromPersistValue v_a3Oy5 of
                  Left e_a3Oy6 -> Left e_a3Oy6
                  Right s'_a3Oy7
                    -> case (reads $ (unpack s'_a3Oy7)) of
                         ((x_a3Oy8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Oy8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Oy4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Oy7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3OV9 v_a3OVa
             -> case fromPersistValue v_a3OVa of
                  Left e_a3OVb -> Left e_a3OVb
                  Right s'_a3OVc
                    -> case (reads $ (unpack s'_a3OVc)) of
                         ((x_a3OVd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3OVd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3OV9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3OVc)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3P2E v_a3P2F
             -> case fromPersistValue v_a3P2F of
                  Left e_a3P2G -> Left e_a3P2G
                  Right s'_a3P2H
                    -> case (reads $ (unpack s'_a3P2H)) of
                         ((x_a3P2I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3P2I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3P2E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3P2H)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3PaQ v_a3PaR
             -> case fromPersistValue v_a3PaR of
                  Left e_a3PaS -> Left e_a3PaS
                  Right s'_a3PaT
                    -> case (reads $ (unpack s'_a3PaT)) of
                         ((x_a3PaU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3PaU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3PaQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3PaT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a413s v_a413t
             -> case fromPersistValue v_a413t of
                  Left e_a413u -> Left e_a413u
                  Right s'_a413v
                    -> case (reads $ (unpack s'_a413v)) of
                         ((x_a413w, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a413w
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a413s)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a413v)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a41aX v_a41aY
             -> case fromPersistValue v_a41aY of
                  Left e_a41aZ -> Left e_a41aZ
                  Right s'_a41b0
                    -> case (reads $ (unpack s'_a41b0)) of
                         ((x_a41b1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a41b1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a41aX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a41b0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a41j9 v_a41ja
             -> case fromPersistValue v_a41ja of
                  Left e_a41jb -> Left e_a41jb
                  Right s'_a41jc
                    -> case (reads $ (unpack s'_a41jc)) of
                         ((x_a41jd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a41jd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a41j9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a41jc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a41Eu v_a41Ev
             -> case fromPersistValue v_a41Ev of
                  Left e_a41Ew -> Left e_a41Ew
                  Right s'_a41Ex
                    -> case (reads $ (unpack s'_a41Ex)) of
                         ((x_a41Ey, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a41Ey
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a41Eu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a41Ex)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a41LZ v_a41M0
             -> case fromPersistValue v_a41M0 of
                  Left e_a41M1 -> Left e_a41M1
                  Right s'_a41M2
                    -> case (reads $ (unpack s'_a41M2)) of
                         ((x_a41M3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a41M3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a41LZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a41M2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a41Ub v_a41Uc
             -> case fromPersistValue v_a41Uc of
                  Left e_a41Ud -> Left e_a41Ud
                  Right s'_a41Ue
                    -> case (reads $ (unpack s'_a41Ue)) of
                         ((x_a41Uf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a41Uf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a41Ub)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a41Ue)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4dMN v_a4dMO
             -> case fromPersistValue v_a4dMO of
                  Left e_a4dMP -> Left e_a4dMP
                  Right s'_a4dMQ
                    -> case (reads $ (unpack s'_a4dMQ)) of
                         ((x_a4dMR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4dMR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4dMN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4dMQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4dUi v_a4dUj
             -> case fromPersistValue v_a4dUj of
                  Left e_a4dUk -> Left e_a4dUk
                  Right s'_a4dUl
                    -> case (reads $ (unpack s'_a4dUl)) of
                         ((x_a4dUm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4dUm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4dUi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4dUl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4e2u v_a4e2v
             -> case fromPersistValue v_a4e2v of
                  Left e_a4e2w -> Left e_a4e2w
                  Right s'_a4e2x
                    -> case (reads $ (unpack s'_a4e2x)) of
                         ((x_a4e2y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4e2y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4e2u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4e2x)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4enP v_a4enQ
             -> case fromPersistValue v_a4enQ of
                  Left e_a4enR -> Left e_a4enR
                  Right s'_a4enS
                    -> case (reads $ (unpack s'_a4enS)) of
                         ((x_a4enT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4enT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4enP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4enS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4evk v_a4evl
             -> case fromPersistValue v_a4evl of
                  Left e_a4evm -> Left e_a4evm
                  Right s'_a4evn
                    -> case (reads $ (unpack s'_a4evn)) of
                         ((x_a4evo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4evo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4evk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4evn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4eDw v_a4eDx
             -> case fromPersistValue v_a4eDx of
                  Left e_a4eDy -> Left e_a4eDy
                  Right s'_a4eDz
                    -> case (reads $ (unpack s'_a4eDz)) of
                         ((x_a4eDA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4eDA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4eDw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4eDz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4qw8 v_a4qw9
             -> case fromPersistValue v_a4qw9 of
                  Left e_a4qwa -> Left e_a4qwa
                  Right s'_a4qwb
                    -> case (reads $ (unpack s'_a4qwb)) of
                         ((x_a4qwc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4qwc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4qw8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4qwb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4qDD v_a4qDE
             -> case fromPersistValue v_a4qDE of
                  Left e_a4qDF -> Left e_a4qDF
                  Right s'_a4qDG
                    -> case (reads $ (unpack s'_a4qDG)) of
                         ((x_a4qDH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4qDH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4qDD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4qDG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4qLP v_a4qLQ
             -> case fromPersistValue v_a4qLQ of
                  Left e_a4qLR -> Left e_a4qLR
                  Right s'_a4qLS
                    -> case (reads $ (unpack s'_a4qLS)) of
                         ((x_a4qLT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4qLT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4qLP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4qLS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4r7a v_a4r7b
             -> case fromPersistValue v_a4r7b of
                  Left e_a4r7c -> Left e_a4r7c
                  Right s'_a4r7d
                    -> case (reads $ (unpack s'_a4r7d)) of
                         ((x_a4r7e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4r7e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4r7a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4r7d)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4reF v_a4reG
             -> case fromPersistValue v_a4reG of
                  Left e_a4reH -> Left e_a4reH
                  Right s'_a4reI
                    -> case (reads $ (unpack s'_a4reI)) of
                         ((x_a4reJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4reJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4reF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4reI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4rmR v_a4rmS
             -> case fromPersistValue v_a4rmS of
                  Left e_a4rmT -> Left e_a4rmT
                  Right s'_a4rmU
                    -> case (reads $ (unpack s'_a4rmU)) of
                         ((x_a4rmV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4rmV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4rmR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4rmU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Dft v_a4Dfu
             -> case fromPersistValue v_a4Dfu of
                  Left e_a4Dfv -> Left e_a4Dfv
                  Right s'_a4Dfw
                    -> case (reads $ (unpack s'_a4Dfw)) of
                         ((x_a4Dfx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Dfx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Dft)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Dfw)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4DmY v_a4DmZ
             -> case fromPersistValue v_a4DmZ of
                  Left e_a4Dn0 -> Left e_a4Dn0
                  Right s'_a4Dn1
                    -> case (reads $ (unpack s'_a4Dn1)) of
                         ((x_a4Dn2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Dn2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4DmY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Dn1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Dva v_a4Dvb
             -> case fromPersistValue v_a4Dvb of
                  Left e_a4Dvc -> Left e_a4Dvc
                  Right s'_a4Dvd
                    -> case (reads $ (unpack s'_a4Dvd)) of
                         ((x_a4Dve, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Dve
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Dva)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Dvd)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4DQv v_a4DQw
             -> case fromPersistValue v_a4DQw of
                  Left e_a4DQx -> Left e_a4DQx
                  Right s'_a4DQy
                    -> case (reads $ (unpack s'_a4DQy)) of
                         ((x_a4DQz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4DQz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4DQv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4DQy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4DY0 v_a4DY1
             -> case fromPersistValue v_a4DY1 of
                  Left e_a4DY2 -> Left e_a4DY2
                  Right s'_a4DY3
                    -> case (reads $ (unpack s'_a4DY3)) of
                         ((x_a4DY4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4DY4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4DY0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4DY3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4E6c v_a4E6d
             -> case fromPersistValue v_a4E6d of
                  Left e_a4E6e -> Left e_a4E6e
                  Right s'_a4E6f
                    -> case (reads $ (unpack s'_a4E6f)) of
                         ((x_a4E6g, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4E6g
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4E6c)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4E6f)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4PYO v_a4PYP
             -> case fromPersistValue v_a4PYP of
                  Left e_a4PYQ -> Left e_a4PYQ
                  Right s'_a4PYR
                    -> case (reads $ (unpack s'_a4PYR)) of
                         ((x_a4PYS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4PYS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4PYO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4PYR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Q6j v_a4Q6k
             -> case fromPersistValue v_a4Q6k of
                  Left e_a4Q6l -> Left e_a4Q6l
                  Right s'_a4Q6m
                    -> case (reads $ (unpack s'_a4Q6m)) of
                         ((x_a4Q6n, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Q6n
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Q6j)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Q6m)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Qev v_a4Qew
             -> case fromPersistValue v_a4Qew of
                  Left e_a4Qex -> Left e_a4Qex
                  Right s'_a4Qey
                    -> case (reads $ (unpack s'_a4Qey)) of
                         ((x_a4Qez, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Qez
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Qev)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Qey)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4QzQ v_a4QzR
             -> case fromPersistValue v_a4QzR of
                  Left e_a4QzS -> Left e_a4QzS
                  Right s'_a4QzT
                    -> case (reads $ (unpack s'_a4QzT)) of
                         ((x_a4QzU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4QzU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4QzQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4QzT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4QHl v_a4QHm
             -> case fromPersistValue v_a4QHm of
                  Left e_a4QHn -> Left e_a4QHn
                  Right s'_a4QHo
                    -> case (reads $ (unpack s'_a4QHo)) of
                         ((x_a4QHp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4QHp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4QHl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4QHo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4QPx v_a4QPy
             -> case fromPersistValue v_a4QPy of
                  Left e_a4QPz -> Left e_a4QPz
                  Right s'_a4QPA
                    -> case (reads $ (unpack s'_a4QPA)) of
                         ((x_a4QPB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4QPB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4QPx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4QPA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a52I9 v_a52Ia
             -> case fromPersistValue v_a52Ia of
                  Left e_a52Ib -> Left e_a52Ib
                  Right s'_a52Ic
                    -> case (reads $ (unpack s'_a52Ic)) of
                         ((x_a52Id, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a52Id
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a52I9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a52Ic)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a52PE v_a52PF
             -> case fromPersistValue v_a52PF of
                  Left e_a52PG -> Left e_a52PG
                  Right s'_a52PH
                    -> case (reads $ (unpack s'_a52PH)) of
                         ((x_a52PI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a52PI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a52PE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a52PH)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a52XQ v_a52XR
             -> case fromPersistValue v_a52XR of
                  Left e_a52XS -> Left e_a52XS
                  Right s'_a52XT
                    -> case (reads $ (unpack s'_a52XT)) of
                         ((x_a52XU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a52XU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a52XQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a52XT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a53jb v_a53jc
             -> case fromPersistValue v_a53jc of
                  Left e_a53jd -> Left e_a53jd
                  Right s'_a53je
                    -> case (reads $ (unpack s'_a53je)) of
                         ((x_a53jf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a53jf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a53jb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a53je)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a53qG v_a53qH
             -> case fromPersistValue v_a53qH of
                  Left e_a53qI -> Left e_a53qI
                  Right s'_a53qJ
                    -> case (reads $ (unpack s'_a53qJ)) of
                         ((x_a53qK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a53qK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a53qG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a53qJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a53yS v_a53yT
             -> case fromPersistValue v_a53yT of
                  Left e_a53yU -> Left e_a53yU
                  Right s'_a53yV
                    -> case (reads $ (unpack s'_a53yV)) of
                         ((x_a53yW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a53yW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a53yS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a53yV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5f7C v_a5f7D
             -> case fromPersistValue v_a5f7D of
                  Left e_a5f7E -> Left e_a5f7E
                  Right s'_a5f7F
                    -> case (reads $ (unpack s'_a5f7F)) of
                         ((x_a5f7G, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5f7G
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5f7C)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5f7F)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5ff7 v_a5ff8
             -> case fromPersistValue v_a5ff8 of
                  Left e_a5ff9 -> Left e_a5ff9
                  Right s'_a5ffa
                    -> case (reads $ (unpack s'_a5ffa)) of
                         ((x_a5ffb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5ffb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5ff7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5ffa)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5fnj v_a5fnk
             -> case fromPersistValue v_a5fnk of
                  Left e_a5fnl -> Left e_a5fnl
                  Right s'_a5fnm
                    -> case (reads $ (unpack s'_a5fnm)) of
                         ((x_a5fnn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5fnn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5fnj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5fnm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5glX v_a5glY
             -> case fromPersistValue v_a5glY of
                  Left e_a5glZ -> Left e_a5glZ
                  Right s'_a5gm0
                    -> case (reads $ (unpack s'_a5gm0)) of
                         ((x_a5gm1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5gm1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5glX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5gm0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5gts v_a5gtt
             -> case fromPersistValue v_a5gtt of
                  Left e_a5gtu -> Left e_a5gtu
                  Right s'_a5gtv
                    -> case (reads $ (unpack s'_a5gtv)) of
                         ((x_a5gtw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5gtw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5gts)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5gtv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5gBE v_a5gBF
             -> case fromPersistValue v_a5gBF of
                  Left e_a5gBG -> Left e_a5gBG
                  Right s'_a5gBH
                    -> case (reads $ (unpack s'_a5gBH)) of
                         ((x_a5gBI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5gBI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5gBE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5gBH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5sb3 v_a5sb4
             -> case fromPersistValue v_a5sb4 of
                  Left e_a5sb5 -> Left e_a5sb5
                  Right s'_a5sb6
                    -> case (reads $ (unpack s'_a5sb6)) of
                         ((x_a5sb7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5sb7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5sb3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5sb6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5siy v_a5siz
             -> case fromPersistValue v_a5siz of
                  Left e_a5siA -> Left e_a5siA
                  Right s'_a5siB
                    -> case (reads $ (unpack s'_a5siB)) of
                         ((x_a5siC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5siC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5siy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5siB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5sqK v_a5sqL
             -> case fromPersistValue v_a5sqL of
                  Left e_a5sqM -> Left e_a5sqM
                  Right s'_a5sqN
                    -> case (reads $ (unpack s'_a5sqN)) of
                         ((x_a5sqO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5sqO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5sqK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5sqN)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5sLt v_a5sLu
             -> case fromPersistValue v_a5sLu of
                  Left e_a5sLv -> Left e_a5sLv
                  Right s'_a5sLw
                    -> case (reads $ (unpack s'_a5sLw)) of
                         ((x_a5sLx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5sLx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5sLt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5sLw)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5sSY v_a5sSZ
             -> case fromPersistValue v_a5sSZ of
                  Left e_a5sT0 -> Left e_a5sT0
                  Right s'_a5sT1
                    -> case (reads $ (unpack s'_a5sT1)) of
                         ((x_a5sT2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5sT2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5sSY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5sT1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5t1a v_a5t1b
             -> case fromPersistValue v_a5t1b of
                  Left e_a5t1c -> Left e_a5t1c
                  Right s'_a5t1d
                    -> case (reads $ (unpack s'_a5t1d)) of
                         ((x_a5t1e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5t1e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5t1a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5t1d)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5ETM v_a5ETN
             -> case fromPersistValue v_a5ETN of
                  Left e_a5ETO -> Left e_a5ETO
                  Right s'_a5ETP
                    -> case (reads $ (unpack s'_a5ETP)) of
                         ((x_a5ETQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5ETQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5ETM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5ETP)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5F1h v_a5F1i
             -> case fromPersistValue v_a5F1i of
                  Left e_a5F1j -> Left e_a5F1j
                  Right s'_a5F1k
                    -> case (reads $ (unpack s'_a5F1k)) of
                         ((x_a5F1l, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5F1l
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5F1h)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5F1k)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5F9t v_a5F9u
             -> case fromPersistValue v_a5F9u of
                  Left e_a5F9v -> Left e_a5F9v
                  Right s'_a5F9w
                    -> case (reads $ (unpack s'_a5F9w)) of
                         ((x_a5F9x, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5F9x
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5F9t)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5F9w)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5Fyz v_a5FyA
             -> case fromPersistValue v_a5FyA of
                  Left e_a5FyB -> Left e_a5FyB
                  Right s'_a5FyC
                    -> case (reads $ (unpack s'_a5FyC)) of
                         ((x_a5FyD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5FyD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5Fyz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5FyC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5FG4 v_a5FG5
             -> case fromPersistValue v_a5FG5 of
                  Left e_a5FG6 -> Left e_a5FG6
                  Right s'_a5FG7
                    -> case (reads $ (unpack s'_a5FG7)) of
                         ((x_a5FG8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5FG8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5FG4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5FG7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5FOg v_a5FOh
             -> case fromPersistValue v_a5FOh of
                  Left e_a5FOi -> Left e_a5FOi
                  Right s'_a5FOj
                    -> case (reads $ (unpack s'_a5FOj)) of
                         ((x_a5FOk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5FOk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5FOg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5FOj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5P9d v_a5P9e
             -> case fromPersistValue v_a5P9e of
                  Left e_a5P9f -> Left e_a5P9f
                  Right s'_a5P9g
                    -> case (reads $ (unpack s'_a5P9g)) of
                         ((x_a5P9h, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5P9h
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5P9d)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5P9g)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5PgI v_a5PgJ
             -> case fromPersistValue v_a5PgJ of
                  Left e_a5PgK -> Left e_a5PgK
                  Right s'_a5PgL
                    -> case (reads $ (unpack s'_a5PgL)) of
                         ((x_a5PgM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5PgM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5PgI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5PgL)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5PoU v_a5PoV
             -> case fromPersistValue v_a5PoV of
                  Left e_a5PoW -> Left e_a5PoW
                  Right s'_a5PoX
                    -> case (reads $ (unpack s'_a5PoX)) of
                         ((x_a5PoY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5PoY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5PoU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5PoX)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5PJ1 v_a5PJ2
             -> case fromPersistValue v_a5PJ2 of
                  Left e_a5PJ3 -> Left e_a5PJ3
                  Right s'_a5PJ4
                    -> case (reads $ (unpack s'_a5PJ4)) of
                         ((x_a5PJ5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5PJ5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5PJ1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5PJ4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5PQw v_a5PQx
             -> case fromPersistValue v_a5PQx of
                  Left e_a5PQy -> Left e_a5PQy
                  Right s'_a5PQz
                    -> case (reads $ (unpack s'_a5PQz)) of
                         ((x_a5PQA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5PQA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5PQw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5PQz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5PYI v_a5PYJ
             -> case fromPersistValue v_a5PYJ of
                  Left e_a5PYK -> Left e_a5PYK
                  Right s'_a5PYL
                    -> case (reads $ (unpack s'_a5PYL)) of
                         ((x_a5PYM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5PYM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5PYI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5PYL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a61u8 v_a61u9
             -> case fromPersistValue v_a61u9 of
                  Left e_a61ua -> Left e_a61ua
                  Right s'_a61ub
                    -> case (reads $ (unpack s'_a61ub)) of
                         ((x_a61uc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a61uc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a61u8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a61ub)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a61BD v_a61BE
             -> case fromPersistValue v_a61BE of
                  Left e_a61BF -> Left e_a61BF
                  Right s'_a61BG
                    -> case (reads $ (unpack s'_a61BG)) of
                         ((x_a61BH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a61BH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a61BD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a61BG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a61JP v_a61JQ
             -> case fromPersistValue v_a61JQ of
                  Left e_a61JR -> Left e_a61JR
                  Right s'_a61JS
                    -> case (reads $ (unpack s'_a61JS)) of
                         ((x_a61JT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a61JT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a61JP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a61JS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a624y v_a624z
             -> case fromPersistValue v_a624z of
                  Left e_a624A -> Left e_a624A
                  Right s'_a624B
                    -> case (reads $ (unpack s'_a624B)) of
                         ((x_a624C, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a624C
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a624y)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a624B)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a62c3 v_a62c4
             -> case fromPersistValue v_a62c4 of
                  Left e_a62c5 -> Left e_a62c5
                  Right s'_a62c6
                    -> case (reads $ (unpack s'_a62c6)) of
                         ((x_a62c7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a62c7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a62c3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a62c6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a62kf v_a62kg
             -> case fromPersistValue v_a62kg of
                  Left e_a62kh -> Left e_a62kh
                  Right s'_a62ki
                    -> case (reads $ (unpack s'_a62ki)) of
                         ((x_a62kj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a62kj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a62kf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a62ki)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a69uI v_a69uJ
             -> case fromPersistValue v_a69uJ of
                  Left e_a69uK -> Left e_a69uK
                  Right s'_a69uL
                    -> case (reads $ (unpack s'_a69uL)) of
                         ((x_a69uM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a69uM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a69uI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a69uL)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a69Cd v_a69Ce
             -> case fromPersistValue v_a69Ce of
                  Left e_a69Cf -> Left e_a69Cf
                  Right s'_a69Cg
                    -> case (reads $ (unpack s'_a69Cg)) of
                         ((x_a69Ch, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a69Ch
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a69Cd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a69Cg)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a69Kp v_a69Kq
             -> case fromPersistValue v_a69Kq of
                  Left e_a69Kr -> Left e_a69Kr
                  Right s'_a69Ks
                    -> case (reads $ (unpack s'_a69Ks)) of
                         ((x_a69Kt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a69Kt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a69Kp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a69Ks)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6lCS v_a6lCT
             -> case fromPersistValue v_a6lCT of
                  Left e_a6lCU -> Left e_a6lCU
                  Right s'_a6lCV
                    -> case (reads $ (unpack s'_a6lCV)) of
                         ((x_a6lCW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6lCW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6lCS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6lCV)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6lKn v_a6lKo
             -> case fromPersistValue v_a6lKo of
                  Left e_a6lKp -> Left e_a6lKp
                  Right s'_a6lKq
                    -> case (reads $ (unpack s'_a6lKq)) of
                         ((x_a6lKr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6lKr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6lKn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6lKq)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6lSz v_a6lSA
             -> case fromPersistValue v_a6lSA of
                  Left e_a6lSB -> Left e_a6lSB
                  Right s'_a6lSC
                    -> case (reads $ (unpack s'_a6lSC)) of
                         ((x_a6lSD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6lSD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6lSz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6lSC)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6mJW v_a6mJX
             -> case fromPersistValue v_a6mJX of
                  Left e_a6mJY -> Left e_a6mJY
                  Right s'_a6mJZ
                    -> case (reads $ (unpack s'_a6mJZ)) of
                         ((x_a6mK0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6mK0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6mJW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6mJZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6mRr v_a6mRs
             -> case fromPersistValue v_a6mRs of
                  Left e_a6mRt -> Left e_a6mRt
                  Right s'_a6mRu
                    -> case (reads $ (unpack s'_a6mRu)) of
                         ((x_a6mRv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6mRv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6mRr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6mRu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6mZD v_a6mZE
             -> case fromPersistValue v_a6mZE of
                  Left e_a6mZF -> Left e_a6mZF
                  Right s'_a6mZG
                    -> case (reads $ (unpack s'_a6mZG)) of
                         ((x_a6mZH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6mZH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6mZD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6mZG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6u49 v_a6u4a
             -> case fromPersistValue v_a6u4a of
                  Left e_a6u4b -> Left e_a6u4b
                  Right s'_a6u4c
                    -> case (reads $ (unpack s'_a6u4c)) of
                         ((x_a6u4d, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6u4d
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6u49)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6u4c)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6ubE v_a6ubF
             -> case fromPersistValue v_a6ubF of
                  Left e_a6ubG -> Left e_a6ubG
                  Right s'_a6ubH
                    -> case (reads $ (unpack s'_a6ubH)) of
                         ((x_a6ubI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6ubI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6ubE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6ubH)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6ujQ v_a6ujR
             -> case fromPersistValue v_a6ujR of
                  Left e_a6ujS -> Left e_a6ujS
                  Right s'_a6ujT
                    -> case (reads $ (unpack s'_a6ujT)) of
                         ((x_a6ujU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6ujU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6ujQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6ujT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Bum v_a6Bun
             -> case fromPersistValue v_a6Bun of
                  Left e_a6Buo -> Left e_a6Buo
                  Right s'_a6Bup
                    -> case (reads $ (unpack s'_a6Bup)) of
                         ((x_a6Buq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6Buq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Bum)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6Bup)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6BBR v_a6BBS
             -> case fromPersistValue v_a6BBS of
                  Left e_a6BBT -> Left e_a6BBT
                  Right s'_a6BBU
                    -> case (reads $ (unpack s'_a6BBU)) of
                         ((x_a6BBV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6BBV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6BBR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6BBU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6BK3 v_a6BK4
             -> case fromPersistValue v_a6BK4 of
                  Left e_a6BK5 -> Left e_a6BK5
                  Right s'_a6BK6
                    -> case (reads $ (unpack s'_a6BK6)) of
                         ((x_a6BK7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6BK7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6BK3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6BK6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6IUz v_a6IUA
             -> case fromPersistValue v_a6IUA of
                  Left e_a6IUB -> Left e_a6IUB
                  Right s'_a6IUC
                    -> case (reads $ (unpack s'_a6IUC)) of
                         ((x_a6IUD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6IUD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6IUz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6IUC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6J24 v_a6J25
             -> case fromPersistValue v_a6J25 of
                  Left e_a6J26 -> Left e_a6J26
                  Right s'_a6J27
                    -> case (reads $ (unpack s'_a6J27)) of
                         ((x_a6J28, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6J28
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6J24)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6J27)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Jag v_a6Jah
             -> case fromPersistValue v_a6Jah of
                  Left e_a6Jai -> Left e_a6Jai
                  Right s'_a6Jaj
                    -> case (reads $ (unpack s'_a6Jaj)) of
                         ((x_a6Jak, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6Jak
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Jag)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6Jaj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6QkM v_a6QkN
             -> case fromPersistValue v_a6QkN of
                  Left e_a6QkO -> Left e_a6QkO
                  Right s'_a6QkP
                    -> case (reads $ (unpack s'_a6QkP)) of
                         ((x_a6QkQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6QkQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6QkM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6QkP)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Qsh v_a6Qsi
             -> case fromPersistValue v_a6Qsi of
                  Left e_a6Qsj -> Left e_a6Qsj
                  Right s'_a6Qsk
                    -> case (reads $ (unpack s'_a6Qsk)) of
                         ((x_a6Qsl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6Qsl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Qsh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6Qsk)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6QAt v_a6QAu
             -> case fromPersistValue v_a6QAu of
                  Left e_a6QAv -> Left e_a6QAv
                  Right s'_a6QAw
                    -> case (reads $ (unpack s'_a6QAw)) of
                         ((x_a6QAx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6QAx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6QAt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6QAw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6XEu v_a6XEv
             -> case fromPersistValue v_a6XEv of
                  Left e_a6XEw -> Left e_a6XEw
                  Right s'_a6XEx
                    -> case (reads $ (unpack s'_a6XEx)) of
                         ((x_a6XEy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6XEy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6XEu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6XEx)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6XLZ v_a6XM0
             -> case fromPersistValue v_a6XM0 of
                  Left e_a6XM1 -> Left e_a6XM1
                  Right s'_a6XM2
                    -> case (reads $ (unpack s'_a6XM2)) of
                         ((x_a6XM3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6XM3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6XLZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6XM2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6XUb v_a6XUc
             -> case fromPersistValue v_a6XUc of
                  Left e_a6XUd -> Left e_a6XUd
                  Right s'_a6XUe
                    -> case (reads $ (unpack s'_a6XUe)) of
                         ((x_a6XUf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6XUf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6XUb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6XUe)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a754J v_a754K
             -> case fromPersistValue v_a754K of
                  Left e_a754L -> Left e_a754L
                  Right s'_a754M
                    -> case (reads $ (unpack s'_a754M)) of
                         ((x_a754N, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a754N
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a754J)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a754M)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a75ce v_a75cf
             -> case fromPersistValue v_a75cf of
                  Left e_a75cg -> Left e_a75cg
                  Right s'_a75ch
                    -> case (reads $ (unpack s'_a75ch)) of
                         ((x_a75ci, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a75ci
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a75ce)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a75ch)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a75kq v_a75kr
             -> case fromPersistValue v_a75kr of
                  Left e_a75ks -> Left e_a75ks
                  Right s'_a75kt
                    -> case (reads $ (unpack s'_a75kt)) of
                         ((x_a75ku, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a75ku
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a75kq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a75kt)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7hcW v_a7hcX
             -> case fromPersistValue v_a7hcX of
                  Left e_a7hcY -> Left e_a7hcY
                  Right s'_a7hcZ
                    -> case (reads $ (unpack s'_a7hcZ)) of
                         ((x_a7hd0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7hd0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7hcW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7hcZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7hkr v_a7hks
             -> case fromPersistValue v_a7hks of
                  Left e_a7hkt -> Left e_a7hkt
                  Right s'_a7hku
                    -> case (reads $ (unpack s'_a7hku)) of
                         ((x_a7hkv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7hkv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7hkr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7hku)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7hsD v_a7hsE
             -> case fromPersistValue v_a7hsE of
                  Left e_a7hsF -> Left e_a7hsF
                  Right s'_a7hsG
                    -> case (reads $ (unpack s'_a7hsG)) of
                         ((x_a7hsH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7hsH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7hsD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7hsG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7hOk v_a7hOl
             -> case fromPersistValue v_a7hOl of
                  Left e_a7hOm -> Left e_a7hOm
                  Right s'_a7hOn
                    -> case (reads $ (unpack s'_a7hOn)) of
                         ((x_a7hOo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7hOo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7hOk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7hOn)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7hVP v_a7hVQ
             -> case fromPersistValue v_a7hVQ of
                  Left e_a7hVR -> Left e_a7hVR
                  Right s'_a7hVS
                    -> case (reads $ (unpack s'_a7hVS)) of
                         ((x_a7hVT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7hVT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7hVP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7hVS)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7i41 v_a7i42
             -> case fromPersistValue v_a7i42 of
                  Left e_a7i43 -> Left e_a7i43
                  Right s'_a7i44
                    -> case (reads $ (unpack s'_a7i44)) of
                         ((x_a7i45, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7i45
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7i41)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7i44)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7tWA v_a7tWB
             -> case fromPersistValue v_a7tWB of
                  Left e_a7tWC -> Left e_a7tWC
                  Right s'_a7tWD
                    -> case (reads $ (unpack s'_a7tWD)) of
                         ((x_a7tWE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7tWE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7tWA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7tWD)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7u45 v_a7u46
             -> case fromPersistValue v_a7u46 of
                  Left e_a7u47 -> Left e_a7u47
                  Right s'_a7u48
                    -> case (reads $ (unpack s'_a7u48)) of
                         ((x_a7u49, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7u49
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7u45)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7u48)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7uch v_a7uci
             -> case fromPersistValue v_a7uci of
                  Left e_a7ucj -> Left e_a7ucj
                  Right s'_a7uck
                    -> case (reads $ (unpack s'_a7uck)) of
                         ((x_a7ucl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7ucl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7uch)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7uck)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7uxC v_a7uxD
             -> case fromPersistValue v_a7uxD of
                  Left e_a7uxE -> Left e_a7uxE
                  Right s'_a7uxF
                    -> case (reads $ (unpack s'_a7uxF)) of
                         ((x_a7uxG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7uxG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7uxC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7uxF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7uF7 v_a7uF8
             -> case fromPersistValue v_a7uF8 of
                  Left e_a7uF9 -> Left e_a7uF9
                  Right s'_a7uFa
                    -> case (reads $ (unpack s'_a7uFa)) of
                         ((x_a7uFb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7uFb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7uF7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7uFa)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7uNj v_a7uNk
             -> case fromPersistValue v_a7uNk of
                  Left e_a7uNl -> Left e_a7uNl
                  Right s'_a7uNm
                    -> case (reads $ (unpack s'_a7uNm)) of
                         ((x_a7uNn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7uNn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7uNj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7uNm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7BRl v_a7BRm
             -> case fromPersistValue v_a7BRm of
                  Left e_a7BRn -> Left e_a7BRn
                  Right s'_a7BRo
                    -> case (reads $ (unpack s'_a7BRo)) of
                         ((x_a7BRp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7BRp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7BRl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7BRo)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7BYQ v_a7BYR
             -> case fromPersistValue v_a7BYR of
                  Left e_a7BYS -> Left e_a7BYS
                  Right s'_a7BYT
                    -> case (reads $ (unpack s'_a7BYT)) of
                         ((x_a7BYU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7BYU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7BYQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7BYT)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7C72 v_a7C73
             -> case fromPersistValue v_a7C73 of
                  Left e_a7C74 -> Left e_a7C74
                  Right s'_a7C75
                    -> case (reads $ (unpack s'_a7C75)) of
                         ((x_a7C76, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7C76
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7C72)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7C75)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7JhA v_a7JhB
             -> case fromPersistValue v_a7JhB of
                  Left e_a7JhC -> Left e_a7JhC
                  Right s'_a7JhD
                    -> case (reads $ (unpack s'_a7JhD)) of
                         ((x_a7JhE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7JhE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7JhA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7JhD)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Jp5 v_a7Jp6
             -> case fromPersistValue v_a7Jp6 of
                  Left e_a7Jp7 -> Left e_a7Jp7
                  Right s'_a7Jp8
                    -> case (reads $ (unpack s'_a7Jp8)) of
                         ((x_a7Jp9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Jp9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Jp5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Jp8)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Jxh v_a7Jxi
             -> case fromPersistValue v_a7Jxi of
                  Left e_a7Jxj -> Left e_a7Jxj
                  Right s'_a7Jxk
                    -> case (reads $ (unpack s'_a7Jxk)) of
                         ((x_a7Jxl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Jxl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Jxh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Jxk)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7VpO v_a7VpP
             -> case fromPersistValue v_a7VpP of
                  Left e_a7VpQ -> Left e_a7VpQ
                  Right s'_a7VpR
                    -> case (reads $ (unpack s'_a7VpR)) of
                         ((x_a7VpS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7VpS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7VpO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7VpR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Vxj v_a7Vxk
             -> case fromPersistValue v_a7Vxk of
                  Left e_a7Vxl -> Left e_a7Vxl
                  Right s'_a7Vxm
                    -> case (reads $ (unpack s'_a7Vxm)) of
                         ((x_a7Vxn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Vxn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Vxj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Vxm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7VFv v_a7VFw
             -> case fromPersistValue v_a7VFw of
                  Left e_a7VFx -> Left e_a7VFx
                  Right s'_a7VFy
                    -> case (reads $ (unpack s'_a7VFy)) of
                         ((x_a7VFz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7VFz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7VFv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7VFy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7W0Q v_a7W0R
             -> case fromPersistValue v_a7W0R of
                  Left e_a7W0S -> Left e_a7W0S
                  Right s'_a7W0T
                    -> case (reads $ (unpack s'_a7W0T)) of
                         ((x_a7W0U, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7W0U
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7W0Q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7W0T)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7W8l v_a7W8m
             -> case fromPersistValue v_a7W8m of
                  Left e_a7W8n -> Left e_a7W8n
                  Right s'_a7W8o
                    -> case (reads $ (unpack s'_a7W8o)) of
                         ((x_a7W8p, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7W8p
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7W8l)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7W8o)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Wgx v_a7Wgy
             -> case fromPersistValue v_a7Wgy of
                  Left e_a7Wgz -> Left e_a7Wgz
                  Right s'_a7WgA
                    -> case (reads $ (unpack s'_a7WgA)) of
                         ((x_a7WgB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7WgB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Wgx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7WgA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8894 v_a8895
             -> case fromPersistValue v_a8895 of
                  Left e_a8896 -> Left e_a8896
                  Right s'_a8897
                    -> case (reads $ (unpack s'_a8897)) of
                         ((x_a8898, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8898
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8894)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8897)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a88gz v_a88gA
             -> case fromPersistValue v_a88gA of
                  Left e_a88gB -> Left e_a88gB
                  Right s'_a88gC
                    -> case (reads $ (unpack s'_a88gC)) of
                         ((x_a88gD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a88gD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a88gz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a88gC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a88oL v_a88oM
             -> case fromPersistValue v_a88oM of
                  Left e_a88oN -> Left e_a88oN
                  Right s'_a88oO
                    -> case (reads $ (unpack s'_a88oO)) of
                         ((x_a88oP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a88oP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a88oL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a88oO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a88K6 v_a88K7
             -> case fromPersistValue v_a88K7 of
                  Left e_a88K8 -> Left e_a88K8
                  Right s'_a88K9
                    -> case (reads $ (unpack s'_a88K9)) of
                         ((x_a88Ka, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a88Ka
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a88K6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a88K9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a88RB v_a88RC
             -> case fromPersistValue v_a88RC of
                  Left e_a88RD -> Left e_a88RD
                  Right s'_a88RE
                    -> case (reads $ (unpack s'_a88RE)) of
                         ((x_a88RF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a88RF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a88RB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a88RE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a88ZN v_a88ZO
             -> case fromPersistValue v_a88ZO of
                  Left e_a88ZP -> Left e_a88ZP
                  Right s'_a88ZQ
                    -> case (reads $ (unpack s'_a88ZQ)) of
                         ((x_a88ZR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a88ZR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a88ZN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a88ZQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8kSk v_a8kSl
             -> case fromPersistValue v_a8kSl of
                  Left e_a8kSm -> Left e_a8kSm
                  Right s'_a8kSn
                    -> case (reads $ (unpack s'_a8kSn)) of
                         ((x_a8kSo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8kSo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8kSk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8kSn)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8kZP v_a8kZQ
             -> case fromPersistValue v_a8kZQ of
                  Left e_a8kZR -> Left e_a8kZR
                  Right s'_a8kZS
                    -> case (reads $ (unpack s'_a8kZS)) of
                         ((x_a8kZT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8kZT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8kZP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8kZS)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8l81 v_a8l82
             -> case fromPersistValue v_a8l82 of
                  Left e_a8l83 -> Left e_a8l83
                  Right s'_a8l84
                    -> case (reads $ (unpack s'_a8l84)) of
                         ((x_a8l85, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8l85
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8l81)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8l84)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8ltm v_a8ltn
             -> case fromPersistValue v_a8ltn of
                  Left e_a8lto -> Left e_a8lto
                  Right s'_a8ltp
                    -> case (reads $ (unpack s'_a8ltp)) of
                         ((x_a8ltq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8ltq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8ltm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8ltp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8lAR v_a8lAS
             -> case fromPersistValue v_a8lAS of
                  Left e_a8lAT -> Left e_a8lAT
                  Right s'_a8lAU
                    -> case (reads $ (unpack s'_a8lAU)) of
                         ((x_a8lAV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8lAV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8lAR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8lAU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8lJ3 v_a8lJ4
             -> case fromPersistValue v_a8lJ4 of
                  Left e_a8lJ5 -> Left e_a8lJ5
                  Right s'_a8lJ6
                    -> case (reads $ (unpack s'_a8lJ6)) of
                         ((x_a8lJ7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8lJ7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8lJ3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8lJ6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8xBA v_a8xBB
             -> case fromPersistValue v_a8xBB of
                  Left e_a8xBC -> Left e_a8xBC
                  Right s'_a8xBD
                    -> case (reads $ (unpack s'_a8xBD)) of
                         ((x_a8xBE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8xBE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8xBA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8xBD)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8xJ5 v_a8xJ6
             -> case fromPersistValue v_a8xJ6 of
                  Left e_a8xJ7 -> Left e_a8xJ7
                  Right s'_a8xJ8
                    -> case (reads $ (unpack s'_a8xJ8)) of
                         ((x_a8xJ9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8xJ9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8xJ5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8xJ8)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8xRh v_a8xRi
             -> case fromPersistValue v_a8xRi of
                  Left e_a8xRj -> Left e_a8xRj
                  Right s'_a8xRk
                    -> case (reads $ (unpack s'_a8xRk)) of
                         ((x_a8xRl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8xRl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8xRh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8xRk)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8ycC v_a8ycD
             -> case fromPersistValue v_a8ycD of
                  Left e_a8ycE -> Left e_a8ycE
                  Right s'_a8ycF
                    -> case (reads $ (unpack s'_a8ycF)) of
                         ((x_a8ycG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8ycG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8ycC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8ycF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8yk7 v_a8yk8
             -> case fromPersistValue v_a8yk8 of
                  Left e_a8yk9 -> Left e_a8yk9
                  Right s'_a8yka
                    -> case (reads $ (unpack s'_a8yka)) of
                         ((x_a8ykb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8ykb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8yk7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8yka)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8ysj v_a8ysk
             -> case fromPersistValue v_a8ysk of
                  Left e_a8ysl -> Left e_a8ysl
                  Right s'_a8ysm
                    -> case (reads $ (unpack s'_a8ysm)) of
                         ((x_a8ysn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8ysn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8ysj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8ysm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8KkQ v_a8KkR
             -> case fromPersistValue v_a8KkR of
                  Left e_a8KkS -> Left e_a8KkS
                  Right s'_a8KkT
                    -> case (reads $ (unpack s'_a8KkT)) of
                         ((x_a8KkU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8KkU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8KkQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8KkT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8Ksl v_a8Ksm
             -> case fromPersistValue v_a8Ksm of
                  Left e_a8Ksn -> Left e_a8Ksn
                  Right s'_a8Kso
                    -> case (reads $ (unpack s'_a8Kso)) of
                         ((x_a8Ksp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8Ksp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8Ksl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8Kso)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8KAx v_a8KAy
             -> case fromPersistValue v_a8KAy of
                  Left e_a8KAz -> Left e_a8KAz
                  Right s'_a8KAA
                    -> case (reads $ (unpack s'_a8KAA)) of
                         ((x_a8KAB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8KAB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8KAx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8KAA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8KVS v_a8KVT
             -> case fromPersistValue v_a8KVT of
                  Left e_a8KVU -> Left e_a8KVU
                  Right s'_a8KVV
                    -> case (reads $ (unpack s'_a8KVV)) of
                         ((x_a8KVW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8KVW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8KVS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8KVV)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8L3n v_a8L3o
             -> case fromPersistValue v_a8L3o of
                  Left e_a8L3p -> Left e_a8L3p
                  Right s'_a8L3q
                    -> case (reads $ (unpack s'_a8L3q)) of
                         ((x_a8L3r, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8L3r
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8L3n)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8L3q)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8Lbz v_a8LbA
             -> case fromPersistValue v_a8LbA of
                  Left e_a8LbB -> Left e_a8LbB
                  Right s'_a8LbC
                    -> case (reads $ (unpack s'_a8LbC)) of
                         ((x_a8LbD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8LbD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8Lbz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8LbC)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8X46 v_a8X47
             -> case fromPersistValue v_a8X47 of
                  Left e_a8X48 -> Left e_a8X48
                  Right s'_a8X49
                    -> case (reads $ (unpack s'_a8X49)) of
                         ((x_a8X4a, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8X4a
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8X46)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8X49)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8XbB v_a8XbC
             -> case fromPersistValue v_a8XbC of
                  Left e_a8XbD -> Left e_a8XbD
                  Right s'_a8XbE
                    -> case (reads $ (unpack s'_a8XbE)) of
                         ((x_a8XbF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8XbF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8XbB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8XbE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8XjN v_a8XjO
             -> case fromPersistValue v_a8XjO of
                  Left e_a8XjP -> Left e_a8XjP
                  Right s'_a8XjQ
                    -> case (reads $ (unpack s'_a8XjQ)) of
                         ((x_a8XjR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8XjR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8XjN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8XjQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8XF8 v_a8XF9
             -> case fromPersistValue v_a8XF9 of
                  Left e_a8XFa -> Left e_a8XFa
                  Right s'_a8XFb
                    -> case (reads $ (unpack s'_a8XFb)) of
                         ((x_a8XFc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8XFc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8XF8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8XFb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8XMD v_a8XME
             -> case fromPersistValue v_a8XME of
                  Left e_a8XMF -> Left e_a8XMF
                  Right s'_a8XMG
                    -> case (reads $ (unpack s'_a8XMG)) of
                         ((x_a8XMH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8XMH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8XMD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8XMG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8XUP v_a8XUQ
             -> case fromPersistValue v_a8XUQ of
                  Left e_a8XUR -> Left e_a8XUR
                  Right s'_a8XUS
                    -> case (reads $ (unpack s'_a8XUS)) of
                         ((x_a8XUT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8XUT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8XUP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8XUS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a99Nm v_a99Nn
             -> case fromPersistValue v_a99Nn of
                  Left e_a99No -> Left e_a99No
                  Right s'_a99Np
                    -> case (reads $ (unpack s'_a99Np)) of
                         ((x_a99Nq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a99Nq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a99Nm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a99Np)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a99UR v_a99US
             -> case fromPersistValue v_a99US of
                  Left e_a99UT -> Left e_a99UT
                  Right s'_a99UU
                    -> case (reads $ (unpack s'_a99UU)) of
                         ((x_a99UV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a99UV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a99UR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a99UU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9a33 v_a9a34
             -> case fromPersistValue v_a9a34 of
                  Left e_a9a35 -> Left e_a9a35
                  Right s'_a9a36
                    -> case (reads $ (unpack s'_a9a36)) of
                         ((x_a9a37, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9a37
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9a33)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9a36)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9aoo v_a9aop
             -> case fromPersistValue v_a9aop of
                  Left e_a9aoq -> Left e_a9aoq
                  Right s'_a9aor
                    -> case (reads $ (unpack s'_a9aor)) of
                         ((x_a9aos, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9aos
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9aoo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9aor)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9avT v_a9avU
             -> case fromPersistValue v_a9avU of
                  Left e_a9avV -> Left e_a9avV
                  Right s'_a9avW
                    -> case (reads $ (unpack s'_a9avW)) of
                         ((x_a9avX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9avX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9avT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9avW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9aE5 v_a9aE6
             -> case fromPersistValue v_a9aE6 of
                  Left e_a9aE7 -> Left e_a9aE7
                  Right s'_a9aE8
                    -> case (reads $ (unpack s'_a9aE8)) of
                         ((x_a9aE9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9aE9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9aE5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9aE8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9mwC v_a9mwD
             -> case fromPersistValue v_a9mwD of
                  Left e_a9mwE -> Left e_a9mwE
                  Right s'_a9mwF
                    -> case (reads $ (unpack s'_a9mwF)) of
                         ((x_a9mwG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9mwG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9mwC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9mwF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9mE7 v_a9mE8
             -> case fromPersistValue v_a9mE8 of
                  Left e_a9mE9 -> Left e_a9mE9
                  Right s'_a9mEa
                    -> case (reads $ (unpack s'_a9mEa)) of
                         ((x_a9mEb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9mEb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9mE7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9mEa)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9mMj v_a9mMk
             -> case fromPersistValue v_a9mMk of
                  Left e_a9mMl -> Left e_a9mMl
                  Right s'_a9mMm
                    -> case (reads $ (unpack s'_a9mMm)) of
                         ((x_a9mMn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9mMn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9mMj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9mMm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9n7E v_a9n7F
             -> case fromPersistValue v_a9n7F of
                  Left e_a9n7G -> Left e_a9n7G
                  Right s'_a9n7H
                    -> case (reads $ (unpack s'_a9n7H)) of
                         ((x_a9n7I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9n7I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9n7E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9n7H)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9nf9 v_a9nfa
             -> case fromPersistValue v_a9nfa of
                  Left e_a9nfb -> Left e_a9nfb
                  Right s'_a9nfc
                    -> case (reads $ (unpack s'_a9nfc)) of
                         ((x_a9nfd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9nfd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9nf9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9nfc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9nnl v_a9nnm
             -> case fromPersistValue v_a9nnm of
                  Left e_a9nnn -> Left e_a9nnn
                  Right s'_a9nno
                    -> case (reads $ (unpack s'_a9nno)) of
                         ((x_a9nnp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9nnp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9nnl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9nno)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9zfS v_a9zfT
             -> case fromPersistValue v_a9zfT of
                  Left e_a9zfU -> Left e_a9zfU
                  Right s'_a9zfV
                    -> case (reads $ (unpack s'_a9zfV)) of
                         ((x_a9zfW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9zfW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9zfS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9zfV)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9znn v_a9zno
             -> case fromPersistValue v_a9zno of
                  Left e_a9znp -> Left e_a9znp
                  Right s'_a9znq
                    -> case (reads $ (unpack s'_a9znq)) of
                         ((x_a9znr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9znr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9znn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9znq)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9zvz v_a9zvA
             -> case fromPersistValue v_a9zvA of
                  Left e_a9zvB -> Left e_a9zvB
                  Right s'_a9zvC
                    -> case (reads $ (unpack s'_a9zvC)) of
                         ((x_a9zvD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9zvD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9zvz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9zvC)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9zQU v_a9zQV
             -> case fromPersistValue v_a9zQV of
                  Left e_a9zQW -> Left e_a9zQW
                  Right s'_a9zQX
                    -> case (reads $ (unpack s'_a9zQX)) of
                         ((x_a9zQY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9zQY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9zQU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9zQX)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9zYp v_a9zYq
             -> case fromPersistValue v_a9zYq of
                  Left e_a9zYr -> Left e_a9zYr
                  Right s'_a9zYs
                    -> case (reads $ (unpack s'_a9zYs)) of
                         ((x_a9zYt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9zYt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9zYp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9zYs)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9A6B v_a9A6C
             -> case fromPersistValue v_a9A6C of
                  Left e_a9A6D -> Left e_a9A6D
                  Right s'_a9A6E
                    -> case (reads $ (unpack s'_a9A6E)) of
                         ((x_a9A6F, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9A6F
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9A6B)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9A6E)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9LZ8 v_a9LZ9
             -> case fromPersistValue v_a9LZ9 of
                  Left e_a9LZa -> Left e_a9LZa
                  Right s'_a9LZb
                    -> case (reads $ (unpack s'_a9LZb)) of
                         ((x_a9LZc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9LZc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9LZ8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9LZb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9M6D v_a9M6E
             -> case fromPersistValue v_a9M6E of
                  Left e_a9M6F -> Left e_a9M6F
                  Right s'_a9M6G
                    -> case (reads $ (unpack s'_a9M6G)) of
                         ((x_a9M6H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9M6H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9M6D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9M6G)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9MeP v_a9MeQ
             -> case fromPersistValue v_a9MeQ of
                  Left e_a9MeR -> Left e_a9MeR
                  Right s'_a9MeS
                    -> case (reads $ (unpack s'_a9MeS)) of
                         ((x_a9MeT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9MeT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9MeP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9MeS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9MAa v_a9MAb
             -> case fromPersistValue v_a9MAb of
                  Left e_a9MAc -> Left e_a9MAc
                  Right s'_a9MAd
                    -> case (reads $ (unpack s'_a9MAd)) of
                         ((x_a9MAe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9MAe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9MAa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9MAd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9MHF v_a9MHG
             -> case fromPersistValue v_a9MHG of
                  Left e_a9MHH -> Left e_a9MHH
                  Right s'_a9MHI
                    -> case (reads $ (unpack s'_a9MHI)) of
                         ((x_a9MHJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9MHJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9MHF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9MHI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9MPR v_a9MPS
             -> case fromPersistValue v_a9MPS of
                  Left e_a9MPT -> Left e_a9MPT
                  Right s'_a9MPU
                    -> case (reads $ (unpack s'_a9MPU)) of
                         ((x_a9MPV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9MPV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9MPR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9MPU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9YoB v_a9YoC
             -> case fromPersistValue v_a9YoC of
                  Left e_a9YoD -> Left e_a9YoD
                  Right s'_a9YoE
                    -> case (reads $ (unpack s'_a9YoE)) of
                         ((x_a9YoF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9YoF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9YoB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9YoE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9Yw6 v_a9Yw7
             -> case fromPersistValue v_a9Yw7 of
                  Left e_a9Yw8 -> Left e_a9Yw8
                  Right s'_a9Yw9
                    -> case (reads $ (unpack s'_a9Yw9)) of
                         ((x_a9Ywa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9Ywa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9Yw6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9Yw9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9YEi v_a9YEj
             -> case fromPersistValue v_a9YEj of
                  Left e_a9YEk -> Left e_a9YEk
                  Right s'_a9YEl
                    -> case (reads $ (unpack s'_a9YEl)) of
                         ((x_a9YEm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9YEm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9YEi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9YEl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9YZ1 v_a9YZ2
             -> case fromPersistValue v_a9YZ2 of
                  Left e_a9YZ3 -> Left e_a9YZ3
                  Right s'_a9YZ4
                    -> case (reads $ (unpack s'_a9YZ4)) of
                         ((x_a9YZ5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9YZ5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9YZ1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9YZ4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9Z6w v_a9Z6x
             -> case fromPersistValue v_a9Z6x of
                  Left e_a9Z6y -> Left e_a9Z6y
                  Right s'_a9Z6z
                    -> case (reads $ (unpack s'_a9Z6z)) of
                         ((x_a9Z6A, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9Z6A
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9Z6w)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9Z6z)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9ZeI v_a9ZeJ
             -> case fromPersistValue v_a9ZeJ of
                  Left e_a9ZeK -> Left e_a9ZeK
                  Right s'_a9ZeL
                    -> case (reads $ (unpack s'_a9ZeL)) of
                         ((x_a9ZeM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9ZeM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9ZeI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9ZeL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaaK8 v_aaaK9
             -> case fromPersistValue v_aaaK9 of
                  Left e_aaaKa -> Left e_aaaKa
                  Right s'_aaaKb
                    -> case (reads $ (unpack s'_aaaKb)) of
                         ((x_aaaKc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaaKc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaaK8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaaKb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaaRD v_aaaRE
             -> case fromPersistValue v_aaaRE of
                  Left e_aaaRF -> Left e_aaaRF
                  Right s'_aaaRG
                    -> case (reads $ (unpack s'_aaaRG)) of
                         ((x_aaaRH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaaRH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaaRD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaaRG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaaZP v_aaaZQ
             -> case fromPersistValue v_aaaZQ of
                  Left e_aaaZR -> Left e_aaaZR
                  Right s'_aaaZS
                    -> case (reads $ (unpack s'_aaaZS)) of
                         ((x_aaaZT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaaZT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaaZP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaaZS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aabrM v_aabrN
             -> case fromPersistValue v_aabrN of
                  Left e_aabrO -> Left e_aabrO
                  Right s'_aabrP
                    -> case (reads $ (unpack s'_aabrP)) of
                         ((x_aabrQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aabrQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aabrM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aabrP)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aabzh v_aabzi
             -> case fromPersistValue v_aabzi of
                  Left e_aabzj -> Left e_aabzj
                  Right s'_aabzk
                    -> case (reads $ (unpack s'_aabzk)) of
                         ((x_aabzl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aabzl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aabzh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aabzk)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aabHt v_aabHu
             -> case fromPersistValue v_aabHu of
                  Left e_aabHv -> Left e_aabHv
                  Right s'_aabHw
                    -> case (reads $ (unpack s'_aabHw)) of
                         ((x_aabHx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aabHx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aabHt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aabHw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aancT v_aancU
             -> case fromPersistValue v_aancU of
                  Left e_aancV -> Left e_aancV
                  Right s'_aancW
                    -> case (reads $ (unpack s'_aancW)) of
                         ((x_aancX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aancX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aancT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aancW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aanko v_aankp
             -> case fromPersistValue v_aankp of
                  Left e_aankq -> Left e_aankq
                  Right s'_aankr
                    -> case (reads $ (unpack s'_aankr)) of
                         ((x_aanks, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aanks
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aanko)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aankr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aansA v_aansB
             -> case fromPersistValue v_aansB of
                  Left e_aansC -> Left e_aansC
                  Right s'_aansD
                    -> case (reads $ (unpack s'_aansD)) of
                         ((x_aansE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aansE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aansA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aansD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aanNj v_aanNk
             -> case fromPersistValue v_aanNk of
                  Left e_aanNl -> Left e_aanNl
                  Right s'_aanNm
                    -> case (reads $ (unpack s'_aanNm)) of
                         ((x_aanNn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aanNn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aanNj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aanNm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aanUO v_aanUP
             -> case fromPersistValue v_aanUP of
                  Left e_aanUQ -> Left e_aanUQ
                  Right s'_aanUR
                    -> case (reads $ (unpack s'_aanUR)) of
                         ((x_aanUS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aanUS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aanUO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aanUR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aao30 v_aao31
             -> case fromPersistValue v_aao31 of
                  Left e_aao32 -> Left e_aao32
                  Right s'_aao33
                    -> case (reads $ (unpack s'_aao33)) of
                         ((x_aao34, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aao34
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aao30)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aao33)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aazyq v_aazyr
             -> case fromPersistValue v_aazyr of
                  Left e_aazys -> Left e_aazys
                  Right s'_aazyt
                    -> case (reads $ (unpack s'_aazyt)) of
                         ((x_aazyu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aazyu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aazyq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aazyt)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aazFV v_aazFW
             -> case fromPersistValue v_aazFW of
                  Left e_aazFX -> Left e_aazFX
                  Right s'_aazFY
                    -> case (reads $ (unpack s'_aazFY)) of
                         ((x_aazFZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aazFZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aazFV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aazFY)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aazO7 v_aazO8
             -> case fromPersistValue v_aazO8 of
                  Left e_aazO9 -> Left e_aazO9
                  Right s'_aazOa
                    -> case (reads $ (unpack s'_aazOa)) of
                         ((x_aazOb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aazOb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aazO7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aazOa)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaA8Q v_aaA8R
             -> case fromPersistValue v_aaA8R of
                  Left e_aaA8S -> Left e_aaA8S
                  Right s'_aaA8T
                    -> case (reads $ (unpack s'_aaA8T)) of
                         ((x_aaA8U, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaA8U
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaA8Q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaA8T)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaAgl v_aaAgm
             -> case fromPersistValue v_aaAgm of
                  Left e_aaAgn -> Left e_aaAgn
                  Right s'_aaAgo
                    -> case (reads $ (unpack s'_aaAgo)) of
                         ((x_aaAgp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaAgp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaAgl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaAgo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaAox v_aaAoy
             -> case fromPersistValue v_aaAoy of
                  Left e_aaAoz -> Left e_aaAoz
                  Right s'_aaAoA
                    -> case (reads $ (unpack s'_aaAoA)) of
                         ((x_aaAoB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaAoB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaAox)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaAoA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaLTX v_aaLTY
             -> case fromPersistValue v_aaLTY of
                  Left e_aaLTZ -> Left e_aaLTZ
                  Right s'_aaLU0
                    -> case (reads $ (unpack s'_aaLU0)) of
                         ((x_aaLU1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaLU1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaLTX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaLU0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaM1s v_aaM1t
             -> case fromPersistValue v_aaM1t of
                  Left e_aaM1u -> Left e_aaM1u
                  Right s'_aaM1v
                    -> case (reads $ (unpack s'_aaM1v)) of
                         ((x_aaM1w, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaM1w
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaM1s)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaM1v)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaM9E v_aaM9F
             -> case fromPersistValue v_aaM9F of
                  Left e_aaM9G -> Left e_aaM9G
                  Right s'_aaM9H
                    -> case (reads $ (unpack s'_aaM9H)) of
                         ((x_aaM9I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaM9I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaM9E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaM9H)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaMun v_aaMuo
             -> case fromPersistValue v_aaMuo of
                  Left e_aaMup -> Left e_aaMup
                  Right s'_aaMuq
                    -> case (reads $ (unpack s'_aaMuq)) of
                         ((x_aaMur, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaMur
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaMun)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaMuq)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaMBS v_aaMBT
             -> case fromPersistValue v_aaMBT of
                  Left e_aaMBU -> Left e_aaMBU
                  Right s'_aaMBV
                    -> case (reads $ (unpack s'_aaMBV)) of
                         ((x_aaMBW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaMBW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaMBS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaMBV)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaMK4 v_aaMK5
             -> case fromPersistValue v_aaMK5 of
                  Left e_aaMK6 -> Left e_aaMK6
                  Right s'_aaMK7
                    -> case (reads $ (unpack s'_aaMK7)) of
                         ((x_aaMK8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaMK8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaMK4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaMK7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaYfu v_aaYfv
             -> case fromPersistValue v_aaYfv of
                  Left e_aaYfw -> Left e_aaYfw
                  Right s'_aaYfx
                    -> case (reads $ (unpack s'_aaYfx)) of
                         ((x_aaYfy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaYfy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaYfu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaYfx)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaYmZ v_aaYn0
             -> case fromPersistValue v_aaYn0 of
                  Left e_aaYn1 -> Left e_aaYn1
                  Right s'_aaYn2
                    -> case (reads $ (unpack s'_aaYn2)) of
                         ((x_aaYn3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaYn3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaYmZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaYn2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaYvb v_aaYvc
             -> case fromPersistValue v_aaYvc of
                  Left e_aaYvd -> Left e_aaYvd
                  Right s'_aaYve
                    -> case (reads $ (unpack s'_aaYve)) of
                         ((x_aaYvf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaYvf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaYvb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaYve)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaYPU v_aaYPV
             -> case fromPersistValue v_aaYPV of
                  Left e_aaYPW -> Left e_aaYPW
                  Right s'_aaYPX
                    -> case (reads $ (unpack s'_aaYPX)) of
                         ((x_aaYPY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaYPY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaYPU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaYPX)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaYXp v_aaYXq
             -> case fromPersistValue v_aaYXq of
                  Left e_aaYXr -> Left e_aaYXr
                  Right s'_aaYXs
                    -> case (reads $ (unpack s'_aaYXs)) of
                         ((x_aaYXt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaYXt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaYXp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaYXs)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaZ5B v_aaZ5C
             -> case fromPersistValue v_aaZ5C of
                  Left e_aaZ5D -> Left e_aaZ5D
                  Right s'_aaZ5E
                    -> case (reads $ (unpack s'_aaZ5E)) of
                         ((x_aaZ5F, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaZ5F
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaZ5B)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaZ5E)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abaB1 v_abaB2
             -> case fromPersistValue v_abaB2 of
                  Left e_abaB3 -> Left e_abaB3
                  Right s'_abaB4
                    -> case (reads $ (unpack s'_abaB4)) of
                         ((x_abaB5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abaB5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abaB1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abaB4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abaIw v_abaIx
             -> case fromPersistValue v_abaIx of
                  Left e_abaIy -> Left e_abaIy
                  Right s'_abaIz
                    -> case (reads $ (unpack s'_abaIz)) of
                         ((x_abaIA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abaIA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abaIw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abaIz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abaQI v_abaQJ
             -> case fromPersistValue v_abaQJ of
                  Left e_abaQK -> Left e_abaQK
                  Right s'_abaQL
                    -> case (reads $ (unpack s'_abaQL)) of
                         ((x_abaQM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abaQM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abaQI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abaQL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abbbr v_abbbs
             -> case fromPersistValue v_abbbs of
                  Left e_abbbt -> Left e_abbbt
                  Right s'_abbbu
                    -> case (reads $ (unpack s'_abbbu)) of
                         ((x_abbbv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abbbv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abbbr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abbbu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abbiW v_abbiX
             -> case fromPersistValue v_abbiX of
                  Left e_abbiY -> Left e_abbiY
                  Right s'_abbiZ
                    -> case (reads $ (unpack s'_abbiZ)) of
                         ((x_abbj0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abbj0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abbiW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abbiZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abbr8 v_abbr9
             -> case fromPersistValue v_abbr9 of
                  Left e_abbra -> Left e_abbra
                  Right s'_abbrb
                    -> case (reads $ (unpack s'_abbrb)) of
                         ((x_abbrc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abbrc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abbr8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abbrb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abmWy v_abmWz
             -> case fromPersistValue v_abmWz of
                  Left e_abmWA -> Left e_abmWA
                  Right s'_abmWB
                    -> case (reads $ (unpack s'_abmWB)) of
                         ((x_abmWC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abmWC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abmWy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abmWB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abn43 v_abn44
             -> case fromPersistValue v_abn44 of
                  Left e_abn45 -> Left e_abn45
                  Right s'_abn46
                    -> case (reads $ (unpack s'_abn46)) of
                         ((x_abn47, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abn47
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abn43)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abn46)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abncf v_abncg
             -> case fromPersistValue v_abncg of
                  Left e_abnch -> Left e_abnch
                  Right s'_abnci
                    -> case (reads $ (unpack s'_abnci)) of
                         ((x_abncj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abncj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abncf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abnci)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abnwY v_abnwZ
             -> case fromPersistValue v_abnwZ of
                  Left e_abnx0 -> Left e_abnx0
                  Right s'_abnx1
                    -> case (reads $ (unpack s'_abnx1)) of
                         ((x_abnx2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abnx2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abnwY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abnx1)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abnEt v_abnEu
             -> case fromPersistValue v_abnEu of
                  Left e_abnEv -> Left e_abnEv
                  Right s'_abnEw
                    -> case (reads $ (unpack s'_abnEw)) of
                         ((x_abnEx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abnEx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abnEt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abnEw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abnMF v_abnMG
             -> case fromPersistValue v_abnMG of
                  Left e_abnMH -> Left e_abnMH
                  Right s'_abnMI
                    -> case (reads $ (unpack s'_abnMI)) of
                         ((x_abnMJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abnMJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abnMF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abnMI)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abzi5 v_abzi6
             -> case fromPersistValue v_abzi6 of
                  Left e_abzi7 -> Left e_abzi7
                  Right s'_abzi8
                    -> case (reads $ (unpack s'_abzi8)) of
                         ((x_abzi9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abzi9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abzi5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abzi8)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abzpA v_abzpB
             -> case fromPersistValue v_abzpB of
                  Left e_abzpC -> Left e_abzpC
                  Right s'_abzpD
                    -> case (reads $ (unpack s'_abzpD)) of
                         ((x_abzpE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abzpE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abzpA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abzpD)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abzxM v_abzxN
             -> case fromPersistValue v_abzxN of
                  Left e_abzxO -> Left e_abzxO
                  Right s'_abzxP
                    -> case (reads $ (unpack s'_abzxP)) of
                         ((x_abzxQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abzxQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abzxM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abzxP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abzSv v_abzSw
             -> case fromPersistValue v_abzSw of
                  Left e_abzSx -> Left e_abzSx
                  Right s'_abzSy
                    -> case (reads $ (unpack s'_abzSy)) of
                         ((x_abzSz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abzSz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abzSv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abzSy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abA00 v_abA01
             -> case fromPersistValue v_abA01 of
                  Left e_abA02 -> Left e_abA02
                  Right s'_abA03
                    -> case (reads $ (unpack s'_abA03)) of
                         ((x_abA04, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abA04
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abA00)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abA03)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abA8c v_abA8d
             -> case fromPersistValue v_abA8d of
                  Left e_abA8e -> Left e_abA8e
                  Right s'_abA8f
                    -> case (reads $ (unpack s'_abA8f)) of
                         ((x_abA8g, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abA8g
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abA8c)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abA8f)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abLDC v_abLDD
             -> case fromPersistValue v_abLDD of
                  Left e_abLDE -> Left e_abLDE
                  Right s'_abLDF
                    -> case (reads $ (unpack s'_abLDF)) of
                         ((x_abLDG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abLDG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abLDC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abLDF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abLL7 v_abLL8
             -> case fromPersistValue v_abLL8 of
                  Left e_abLL9 -> Left e_abLL9
                  Right s'_abLLa
                    -> case (reads $ (unpack s'_abLLa)) of
                         ((x_abLLb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abLLb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abLL7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abLLa)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abLTj v_abLTk
             -> case fromPersistValue v_abLTk of
                  Left e_abLTl -> Left e_abLTl
                  Right s'_abLTm
                    -> case (reads $ (unpack s'_abLTm)) of
                         ((x_abLTn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abLTn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abLTj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abLTm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abMe2 v_abMe3
             -> case fromPersistValue v_abMe3 of
                  Left e_abMe4 -> Left e_abMe4
                  Right s'_abMe5
                    -> case (reads $ (unpack s'_abMe5)) of
                         ((x_abMe6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abMe6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abMe2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abMe5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abMlx v_abMly
             -> case fromPersistValue v_abMly of
                  Left e_abMlz -> Left e_abMlz
                  Right s'_abMlA
                    -> case (reads $ (unpack s'_abMlA)) of
                         ((x_abMlB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abMlB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abMlx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abMlA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abMtJ v_abMtK
             -> case fromPersistValue v_abMtK of
                  Left e_abMtL -> Left e_abMtL
                  Right s'_abMtM
                    -> case (reads $ (unpack s'_abMtM)) of
                         ((x_abMtN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abMtN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abMtJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abMtM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abVOG v_abVOH
             -> case fromPersistValue v_abVOH of
                  Left e_abVOI -> Left e_abVOI
                  Right s'_abVOJ
                    -> case (reads $ (unpack s'_abVOJ)) of
                         ((x_abVOK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abVOK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abVOG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abVOJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abVWb v_abVWc
             -> case fromPersistValue v_abVWc of
                  Left e_abVWd -> Left e_abVWd
                  Right s'_abVWe
                    -> case (reads $ (unpack s'_abVWe)) of
                         ((x_abVWf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abVWf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abVWb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abVWe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abW4n v_abW4o
             -> case fromPersistValue v_abW4o of
                  Left e_abW4p -> Left e_abW4p
                  Right s'_abW4q
                    -> case (reads $ (unpack s'_abW4q)) of
                         ((x_abW4r, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abW4r
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abW4n)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abW4q)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWou v_abWov
             -> case fromPersistValue v_abWov of
                  Left e_abWow -> Left e_abWow
                  Right s'_abWox
                    -> case (reads $ (unpack s'_abWox)) of
                         ((x_abWoy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWoy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWou)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWox)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWvZ v_abWw0
             -> case fromPersistValue v_abWw0 of
                  Left e_abWw1 -> Left e_abWw1
                  Right s'_abWw2
                    -> case (reads $ (unpack s'_abWw2)) of
                         ((x_abWw3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWw3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWvZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWw2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWEb v_abWEc
             -> case fromPersistValue v_abWEc of
                  Left e_abWEd -> Left e_abWEd
                  Right s'_abWEe
                    -> case (reads $ (unpack s'_abWEe)) of
                         ((x_abWEf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWEf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWEb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWEe)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac5Z8 v_ac5Z9
             -> case fromPersistValue v_ac5Z9 of
                  Left e_ac5Za -> Left e_ac5Za
                  Right s'_ac5Zb
                    -> case (reads $ (unpack s'_ac5Zb)) of
                         ((x_ac5Zc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac5Zc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac5Z8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac5Zb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac66D v_ac66E
             -> case fromPersistValue v_ac66E of
                  Left e_ac66F -> Left e_ac66F
                  Right s'_ac66G
                    -> case (reads $ (unpack s'_ac66G)) of
                         ((x_ac66H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac66H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac66D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac66G)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac6eP v_ac6eQ
             -> case fromPersistValue v_ac6eQ of
                  Left e_ac6eR -> Left e_ac6eR
                  Right s'_ac6eS
                    -> case (reads $ (unpack s'_ac6eS)) of
                         ((x_ac6eT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac6eT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac6eP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac6eS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac6yW v_ac6yX
             -> case fromPersistValue v_ac6yX of
                  Left e_ac6yY -> Left e_ac6yY
                  Right s'_ac6yZ
                    -> case (reads $ (unpack s'_ac6yZ)) of
                         ((x_ac6z0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac6z0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac6yW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac6yZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac6Gr v_ac6Gs
             -> case fromPersistValue v_ac6Gs of
                  Left e_ac6Gt -> Left e_ac6Gt
                  Right s'_ac6Gu
                    -> case (reads $ (unpack s'_ac6Gu)) of
                         ((x_ac6Gv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac6Gv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac6Gr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac6Gu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac6OD v_ac6OE
             -> case fromPersistValue v_ac6OE of
                  Left e_ac6OF -> Left e_ac6OF
                  Right s'_ac6OG
                    -> case (reads $ (unpack s'_ac6OG)) of
                         ((x_ac6OH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac6OH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac6OD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac6OG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acg9A v_acg9B
             -> case fromPersistValue v_acg9B of
                  Left e_acg9C -> Left e_acg9C
                  Right s'_acg9D
                    -> case (reads $ (unpack s'_acg9D)) of
                         ((x_acg9E, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acg9E
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acg9A)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acg9D)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acgh5 v_acgh6
             -> case fromPersistValue v_acgh6 of
                  Left e_acgh7 -> Left e_acgh7
                  Right s'_acgh8
                    -> case (reads $ (unpack s'_acgh8)) of
                         ((x_acgh9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acgh9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acgh5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acgh8)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acgph v_acgpi
             -> case fromPersistValue v_acgpi of
                  Left e_acgpj -> Left e_acgpj
                  Right s'_acgpk
                    -> case (reads $ (unpack s'_acgpk)) of
                         ((x_acgpl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acgpl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acgph)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acgpk)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acgJo v_acgJp
             -> case fromPersistValue v_acgJp of
                  Left e_acgJq -> Left e_acgJq
                  Right s'_acgJr
                    -> case (reads $ (unpack s'_acgJr)) of
                         ((x_acgJs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acgJs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acgJo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acgJr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acgQT v_acgQU
             -> case fromPersistValue v_acgQU of
                  Left e_acgQV -> Left e_acgQV
                  Right s'_acgQW
                    -> case (reads $ (unpack s'_acgQW)) of
                         ((x_acgQX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acgQX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acgQT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acgQW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acgZ5 v_acgZ6
             -> case fromPersistValue v_acgZ6 of
                  Left e_acgZ7 -> Left e_acgZ7
                  Right s'_acgZ8
                    -> case (reads $ (unpack s'_acgZ8)) of
                         ((x_acgZ9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acgZ9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acgZ5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acgZ8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acqk2 v_acqk3
             -> case fromPersistValue v_acqk3 of
                  Left e_acqk4 -> Left e_acqk4
                  Right s'_acqk5
                    -> case (reads $ (unpack s'_acqk5)) of
                         ((x_acqk6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acqk6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acqk2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acqk5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acqrx v_acqry
             -> case fromPersistValue v_acqry of
                  Left e_acqrz -> Left e_acqrz
                  Right s'_acqrA
                    -> case (reads $ (unpack s'_acqrA)) of
                         ((x_acqrB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acqrB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acqrx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acqrA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acqzJ v_acqzK
             -> case fromPersistValue v_acqzK of
                  Left e_acqzL -> Left e_acqzL
                  Right s'_acqzM
                    -> case (reads $ (unpack s'_acqzM)) of
                         ((x_acqzN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acqzN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acqzJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acqzM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acqTQ v_acqTR
             -> case fromPersistValue v_acqTR of
                  Left e_acqTS -> Left e_acqTS
                  Right s'_acqTT
                    -> case (reads $ (unpack s'_acqTT)) of
                         ((x_acqTU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acqTU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acqTQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acqTT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acr1l v_acr1m
             -> case fromPersistValue v_acr1m of
                  Left e_acr1n -> Left e_acr1n
                  Right s'_acr1o
                    -> case (reads $ (unpack s'_acr1o)) of
                         ((x_acr1p, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acr1p
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acr1l)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acr1o)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acr9x v_acr9y
             -> case fromPersistValue v_acr9y of
                  Left e_acr9z -> Left e_acr9z
                  Right s'_acr9A
                    -> case (reads $ (unpack s'_acr9A)) of
                         ((x_acr9B, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acr9B
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acr9x)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acr9A)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acAuu v_acAuv
             -> case fromPersistValue v_acAuv of
                  Left e_acAuw -> Left e_acAuw
                  Right s'_acAux
                    -> case (reads $ (unpack s'_acAux)) of
                         ((x_acAuy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acAuy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acAuu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acAux)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acABZ v_acAC0
             -> case fromPersistValue v_acAC0 of
                  Left e_acAC1 -> Left e_acAC1
                  Right s'_acAC2
                    -> case (reads $ (unpack s'_acAC2)) of
                         ((x_acAC3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acAC3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acABZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acAC2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acAKb v_acAKc
             -> case fromPersistValue v_acAKc of
                  Left e_acAKd -> Left e_acAKd
                  Right s'_acAKe
                    -> case (reads $ (unpack s'_acAKe)) of
                         ((x_acAKf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acAKf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acAKb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acAKe)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acB4i v_acB4j
             -> case fromPersistValue v_acB4j of
                  Left e_acB4k -> Left e_acB4k
                  Right s'_acB4l
                    -> case (reads $ (unpack s'_acB4l)) of
                         ((x_acB4m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acB4m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acB4i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acB4l)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acBbN v_acBbO
             -> case fromPersistValue v_acBbO of
                  Left e_acBbP -> Left e_acBbP
                  Right s'_acBbQ
                    -> case (reads $ (unpack s'_acBbQ)) of
                         ((x_acBbR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acBbR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acBbN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acBbQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acBjZ v_acBk0
             -> case fromPersistValue v_acBk0 of
                  Left e_acBk1 -> Left e_acBk1
                  Right s'_acBk2
                    -> case (reads $ (unpack s'_acBk2)) of
                         ((x_acBk3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acBk3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acBjZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acBk2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acKEW v_acKEX
             -> case fromPersistValue v_acKEX of
                  Left e_acKEY -> Left e_acKEY
                  Right s'_acKEZ
                    -> case (reads $ (unpack s'_acKEZ)) of
                         ((x_acKF0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acKF0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acKEW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acKEZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acKMr v_acKMs
             -> case fromPersistValue v_acKMs of
                  Left e_acKMt -> Left e_acKMt
                  Right s'_acKMu
                    -> case (reads $ (unpack s'_acKMu)) of
                         ((x_acKMv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acKMv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acKMr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acKMu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acKUD v_acKUE
             -> case fromPersistValue v_acKUE of
                  Left e_acKUF -> Left e_acKUF
                  Right s'_acKUG
                    -> case (reads $ (unpack s'_acKUG)) of
                         ((x_acKUH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acKUH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acKUD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acKUG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acLeK v_acLeL
             -> case fromPersistValue v_acLeL of
                  Left e_acLeM -> Left e_acLeM
                  Right s'_acLeN
                    -> case (reads $ (unpack s'_acLeN)) of
                         ((x_acLeO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acLeO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acLeK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acLeN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acLmf v_acLmg
             -> case fromPersistValue v_acLmg of
                  Left e_acLmh -> Left e_acLmh
                  Right s'_acLmi
                    -> case (reads $ (unpack s'_acLmi)) of
                         ((x_acLmj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acLmj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acLmf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acLmi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acLur v_acLus
             -> case fromPersistValue v_acLus of
                  Left e_acLut -> Left e_acLut
                  Right s'_acLuu
                    -> case (reads $ (unpack s'_acLuu)) of
                         ((x_acLuv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acLuv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acLur)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acLuu)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acUPo v_acUPp
             -> case fromPersistValue v_acUPp of
                  Left e_acUPq -> Left e_acUPq
                  Right s'_acUPr
                    -> case (reads $ (unpack s'_acUPr)) of
                         ((x_acUPs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acUPs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acUPo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acUPr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acUWT v_acUWU
             -> case fromPersistValue v_acUWU of
                  Left e_acUWV -> Left e_acUWV
                  Right s'_acUWW
                    -> case (reads $ (unpack s'_acUWW)) of
                         ((x_acUWX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acUWX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acUWT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acUWW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acV55 v_acV56
             -> case fromPersistValue v_acV56 of
                  Left e_acV57 -> Left e_acV57
                  Right s'_acV58
                    -> case (reads $ (unpack s'_acV58)) of
                         ((x_acV59, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acV59
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acV55)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acV58)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVpc v_acVpd
             -> case fromPersistValue v_acVpd of
                  Left e_acVpe -> Left e_acVpe
                  Right s'_acVpf
                    -> case (reads $ (unpack s'_acVpf)) of
                         ((x_acVpg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVpg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVpc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVpf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVwH v_acVwI
             -> case fromPersistValue v_acVwI of
                  Left e_acVwJ -> Left e_acVwJ
                  Right s'_acVwK
                    -> case (reads $ (unpack s'_acVwK)) of
                         ((x_acVwL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVwL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVwH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVwK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVET v_acVEU
             -> case fromPersistValue v_acVEU of
                  Left e_acVEV -> Left e_acVEV
                  Right s'_acVEW
                    -> case (reads $ (unpack s'_acVEW)) of
                         ((x_acVEX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVEX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVET)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVEW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acZ3O v_acZ3P
             -> case fromPersistValue v_acZ3P of
                  Left e_acZ3Q -> Left e_acZ3Q
                  Right s'_acZ3R
                    -> case (reads $ (unpack s'_acZ3R)) of
                         ((x_acZ3S, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acZ3S
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acZ3O)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acZ3R)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acZbj v_acZbk
             -> case fromPersistValue v_acZbk of
                  Left e_acZbl -> Left e_acZbl
                  Right s'_acZbm
                    -> case (reads $ (unpack s'_acZbm)) of
                         ((x_acZbn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acZbn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acZbj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acZbm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acZjv v_acZjw
             -> case fromPersistValue v_acZjw of
                  Left e_acZjx -> Left e_acZjx
                  Right s'_acZjy
                    -> case (reads $ (unpack s'_acZjy)) of
                         ((x_acZjz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acZjz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acZjv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acZjy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad8vs v_ad8vt
             -> case fromPersistValue v_ad8vt of
                  Left e_ad8vu -> Left e_ad8vu
                  Right s'_ad8vv
                    -> case (reads $ (unpack s'_ad8vv)) of
                         ((x_ad8vw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad8vw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad8vs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad8vv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad8CX v_ad8CY
             -> case fromPersistValue v_ad8CY of
                  Left e_ad8CZ -> Left e_ad8CZ
                  Right s'_ad8D0
                    -> case (reads $ (unpack s'_ad8D0)) of
                         ((x_ad8D1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad8D1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad8CX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad8D0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad8L9 v_ad8La
             -> case fromPersistValue v_ad8La of
                  Left e_ad8Lb -> Left e_ad8Lb
                  Right s'_ad8Lc
                    -> case (reads $ (unpack s'_ad8Lc)) of
                         ((x_ad8Ld, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad8Ld
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad8L9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad8Lc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad95g v_ad95h
             -> case fromPersistValue v_ad95h of
                  Left e_ad95i -> Left e_ad95i
                  Right s'_ad95j
                    -> case (reads $ (unpack s'_ad95j)) of
                         ((x_ad95k, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad95k
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad95g)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad95j)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad9cL v_ad9cM
             -> case fromPersistValue v_ad9cM of
                  Left e_ad9cN -> Left e_ad9cN
                  Right s'_ad9cO
                    -> case (reads $ (unpack s'_ad9cO)) of
                         ((x_ad9cP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad9cP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad9cL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad9cO)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad9kX v_ad9kY
             -> case fromPersistValue v_ad9kY of
                  Left e_ad9kZ -> Left e_ad9kZ
                  Right s'_ad9l0
                    -> case (reads $ (unpack s'_ad9l0)) of
                         ((x_ad9l1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad9l1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad9kX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad9l0)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adacS v_adacT
             -> case fromPersistValue v_adacT of
                  Left e_adacU -> Left e_adacU
                  Right s'_adacV
                    -> case (reads $ (unpack s'_adacV)) of
                         ((x_adacW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adacW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adacS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adacV)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adakn v_adako
             -> case fromPersistValue v_adako of
                  Left e_adakp -> Left e_adakp
                  Right s'_adakq
                    -> case (reads $ (unpack s'_adakq)) of
                         ((x_adakr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adakr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adakn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adakq)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adasz v_adasA
             -> case fromPersistValue v_adasA of
                  Left e_adasB -> Left e_adasB
                  Right s'_adasC
                    -> case (reads $ (unpack s'_adasC)) of
                         ((x_adasD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adasD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adasz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adasC)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adaXu v_adaXv
             -> case fromPersistValue v_adaXv of
                  Left e_adaXw -> Left e_adaXw
                  Right s'_adaXx
                    -> case (reads $ (unpack s'_adaXx)) of
                         ((x_adaXy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adaXy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adaXu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adaXx)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adb4Z v_adb50
             -> case fromPersistValue v_adb50 of
                  Left e_adb51 -> Left e_adb51
                  Right s'_adb52
                    -> case (reads $ (unpack s'_adb52)) of
                         ((x_adb53, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adb53
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adb4Z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adb52)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adbdb v_adbdc
             -> case fromPersistValue v_adbdc of
                  Left e_adbdd -> Left e_adbdd
                  Right s'_adbde
                    -> case (reads $ (unpack s'_adbde)) of
                         ((x_adbdf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adbdf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adbdb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adbde)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adbI6 v_adbI7
             -> case fromPersistValue v_adbI7 of
                  Left e_adbI8 -> Left e_adbI8
                  Right s'_adbI9
                    -> case (reads $ (unpack s'_adbI9)) of
                         ((x_adbIa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adbIa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adbI6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adbI9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adbPB v_adbPC
             -> case fromPersistValue v_adbPC of
                  Left e_adbPD -> Left e_adbPD
                  Right s'_adbPE
                    -> case (reads $ (unpack s'_adbPE)) of
                         ((x_adbPF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adbPF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adbPB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adbPE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adbXN v_adbXO
             -> case fromPersistValue v_adbXO of
                  Left e_adbXP -> Left e_adbXP
                  Right s'_adbXQ
                    -> case (reads $ (unpack s'_adbXQ)) of
                         ((x_adbXR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adbXR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adbXN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adbXQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adcsI v_adcsJ
             -> case fromPersistValue v_adcsJ of
                  Left e_adcsK -> Left e_adcsK
                  Right s'_adcsL
                    -> case (reads $ (unpack s'_adcsL)) of
                         ((x_adcsM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adcsM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adcsI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adcsL)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adcAd v_adcAe
             -> case fromPersistValue v_adcAe of
                  Left e_adcAf -> Left e_adcAf
                  Right s'_adcAg
                    -> case (reads $ (unpack s'_adcAg)) of
                         ((x_adcAh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adcAh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adcAd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adcAg)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adcIp v_adcIq
             -> case fromPersistValue v_adcIq of
                  Left e_adcIr -> Left e_adcIr
                  Right s'_adcIs
                    -> case (reads $ (unpack s'_adcIs)) of
                         ((x_adcIt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adcIt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adcIp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adcIs)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adlU4 v_adlU5
             -> case fromPersistValue v_adlU5 of
                  Left e_adlU6 -> Left e_adlU6
                  Right s'_adlU7
                    -> case (reads $ (unpack s'_adlU7)) of
                         ((x_adlU8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adlU8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adlU4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adlU7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adm1z v_adm1A
             -> case fromPersistValue v_adm1A of
                  Left e_adm1B -> Left e_adm1B
                  Right s'_adm1C
                    -> case (reads $ (unpack s'_adm1C)) of
                         ((x_adm1D, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adm1D
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adm1z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adm1C)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adm9L v_adm9M
             -> case fromPersistValue v_adm9M of
                  Left e_adm9N -> Left e_adm9N
                  Right s'_adm9O
                    -> case (reads $ (unpack s'_adm9O)) of
                         ((x_adm9P, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adm9P
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adm9L)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adm9O)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_admw9 v_admwa
             -> case fromPersistValue v_admwa of
                  Left e_admwb -> Left e_admwb
                  Right s'_admwc
                    -> case (reads $ (unpack s'_admwc)) of
                         ((x_admwd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_admwd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_admw9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_admwc)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_admDE v_admDF
             -> case fromPersistValue v_admDF of
                  Left e_admDG -> Left e_admDG
                  Right s'_admDH
                    -> case (reads $ (unpack s'_admDH)) of
                         ((x_admDI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_admDI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_admDE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_admDH)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_admLQ v_admLR
             -> case fromPersistValue v_admLR of
                  Left e_admLS -> Left e_admLS
                  Right s'_admLT
                    -> case (reads $ (unpack s'_admLT)) of
                         ((x_admLU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_admLU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_admLQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_admLT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adngF v_adngG
             -> case fromPersistValue v_adngG of
                  Left e_adngH -> Left e_adngH
                  Right s'_adngI
                    -> case (reads $ (unpack s'_adngI)) of
                         ((x_adngJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adngJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adngF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adngI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adnoa v_adnob
             -> case fromPersistValue v_adnob of
                  Left e_adnoc -> Left e_adnoc
                  Right s'_adnod
                    -> case (reads $ (unpack s'_adnod)) of
                         ((x_adnoe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adnoe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adnoa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adnod)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adnwm v_adnwn
             -> case fromPersistValue v_adnwn of
                  Left e_adnwo -> Left e_adnwo
                  Right s'_adnwp
                    -> case (reads $ (unpack s'_adnwp)) of
                         ((x_adnwq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adnwq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adnwm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adnwp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adnUw v_adnUx
             -> case fromPersistValue v_adnUx of
                  Left e_adnUy -> Left e_adnUy
                  Right s'_adnUz
                    -> case (reads $ (unpack s'_adnUz)) of
                         ((x_adnUA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adnUA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adnUw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adnUz)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ado21 v_ado22
             -> case fromPersistValue v_ado22 of
                  Left e_ado23 -> Left e_ado23
                  Right s'_ado24
                    -> case (reads $ (unpack s'_ado24)) of
                         ((x_ado25, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ado25
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ado21)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ado24)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adoad v_adoae
             -> case fromPersistValue v_adoae of
                  Left e_adoaf -> Left e_adoaf
                  Right s'_adoag
                    -> case (reads $ (unpack s'_adoag)) of
                         ((x_adoah, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adoah
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adoad)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adoag)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aduF8 v_aduF9
             -> case fromPersistValue v_aduF9 of
                  Left e_aduFa -> Left e_aduFa
                  Right s'_aduFb
                    -> case (reads $ (unpack s'_aduFb)) of
                         ((x_aduFc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aduFc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aduF8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aduFb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aduMD v_aduME
             -> case fromPersistValue v_aduME of
                  Left e_aduMF -> Left e_aduMF
                  Right s'_aduMG
                    -> case (reads $ (unpack s'_aduMG)) of
                         ((x_aduMH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aduMH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aduMD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aduMG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aduUP v_aduUQ
             -> case fromPersistValue v_aduUQ of
                  Left e_aduUR -> Left e_aduUR
                  Right s'_aduUS
                    -> case (reads $ (unpack s'_aduUS)) of
                         ((x_aduUT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aduUT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aduUP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aduUS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adBo5 v_adBo6
             -> case fromPersistValue v_adBo6 of
                  Left e_adBo7 -> Left e_adBo7
                  Right s'_adBo8
                    -> case (reads $ (unpack s'_adBo8)) of
                         ((x_adBo9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adBo9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adBo5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adBo8)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adBvA v_adBvB
             -> case fromPersistValue v_adBvB of
                  Left e_adBvC -> Left e_adBvC
                  Right s'_adBvD
                    -> case (reads $ (unpack s'_adBvD)) of
                         ((x_adBvE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adBvE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adBvA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adBvD)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adBDM v_adBDN
             -> case fromPersistValue v_adBDN of
                  Left e_adBDO -> Left e_adBDO
                  Right s'_adBDP
                    -> case (reads $ (unpack s'_adBDP)) of
                         ((x_adBDQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adBDQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adBDM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adBDP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adHg6 v_adHg7
             -> case fromPersistValue v_adHg7 of
                  Left e_adHg8 -> Left e_adHg8
                  Right s'_adHg9
                    -> case (reads $ (unpack s'_adHg9)) of
                         ((x_adHga, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adHga
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adHg6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adHg9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adHnB v_adHnC
             -> case fromPersistValue v_adHnC of
                  Left e_adHnD -> Left e_adHnD
                  Right s'_adHnE
                    -> case (reads $ (unpack s'_adHnE)) of
                         ((x_adHnF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adHnF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adHnB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adHnE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adHvN v_adHvO
             -> case fromPersistValue v_adHvO of
                  Left e_adHvP -> Left e_adHvP
                  Right s'_adHvQ
                    -> case (reads $ (unpack s'_adHvQ)) of
                         ((x_adHvR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adHvR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adHvN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adHvQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adN87 v_adN88
             -> case fromPersistValue v_adN88 of
                  Left e_adN89 -> Left e_adN89
                  Right s'_adN8a
                    -> case (reads $ (unpack s'_adN8a)) of
                         ((x_adN8b, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adN8b
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adN87)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adN8a)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adNfC v_adNfD
             -> case fromPersistValue v_adNfD of
                  Left e_adNfE -> Left e_adNfE
                  Right s'_adNfF
                    -> case (reads $ (unpack s'_adNfF)) of
                         ((x_adNfG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adNfG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adNfC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adNfF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adNnO v_adNnP
             -> case fromPersistValue v_adNnP of
                  Left e_adNnQ -> Left e_adNnQ
                  Right s'_adNnR
                    -> case (reads $ (unpack s'_adNnR)) of
                         ((x_adNnS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adNnS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adNnO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adNnR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adT08 v_adT09
             -> case fromPersistValue v_adT09 of
                  Left e_adT0a -> Left e_adT0a
                  Right s'_adT0b
                    -> case (reads $ (unpack s'_adT0b)) of
                         ((x_adT0c, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adT0c
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adT08)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adT0b)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adT7D v_adT7E
             -> case fromPersistValue v_adT7E of
                  Left e_adT7F -> Left e_adT7F
                  Right s'_adT7G
                    -> case (reads $ (unpack s'_adT7G)) of
                         ((x_adT7H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adT7H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adT7D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adT7G)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adTfP v_adTfQ
             -> case fromPersistValue v_adTfQ of
                  Left e_adTfR -> Left e_adTfR
                  Right s'_adTfS
                    -> case (reads $ (unpack s'_adTfS)) of
                         ((x_adTfT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adTfT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adTfP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adTfS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adZJ7 v_adZJ8
             -> case fromPersistValue v_adZJ8 of
                  Left e_adZJ9 -> Left e_adZJ9
                  Right s'_adZJa
                    -> case (reads $ (unpack s'_adZJa)) of
                         ((x_adZJb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adZJb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adZJ7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adZJa)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adZQC v_adZQD
             -> case fromPersistValue v_adZQD of
                  Left e_adZQE -> Left e_adZQE
                  Right s'_adZQF
                    -> case (reads $ (unpack s'_adZQF)) of
                         ((x_adZQG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adZQG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adZQC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adZQF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adZYO v_adZYP
             -> case fromPersistValue v_adZYP of
                  Left e_adZYQ -> Left e_adZYQ
                  Right s'_adZYR
                    -> case (reads $ (unpack s'_adZYR)) of
                         ((x_adZYS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adZYS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adZYO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adZYR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae6s4 v_ae6s5
             -> case fromPersistValue v_ae6s5 of
                  Left e_ae6s6 -> Left e_ae6s6
                  Right s'_ae6s7
                    -> case (reads $ (unpack s'_ae6s7)) of
                         ((x_ae6s8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae6s8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae6s4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae6s7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae6zz v_ae6zA
             -> case fromPersistValue v_ae6zA of
                  Left e_ae6zB -> Left e_ae6zB
                  Right s'_ae6zC
                    -> case (reads $ (unpack s'_ae6zC)) of
                         ((x_ae6zD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae6zD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae6zz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae6zC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae6HL v_ae6HM
             -> case fromPersistValue v_ae6HM of
                  Left e_ae6HN -> Left e_ae6HN
                  Right s'_ae6HO
                    -> case (reads $ (unpack s'_ae6HO)) of
                         ((x_ae6HP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae6HP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae6HL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae6HO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aedaY v_aedaZ
             -> case fromPersistValue v_aedaZ of
                  Left e_aedb0 -> Left e_aedb0
                  Right s'_aedb1
                    -> case (reads $ (unpack s'_aedb1)) of
                         ((x_aedb2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aedb2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aedaY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aedb1)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aedit v_aediu
             -> case fromPersistValue v_aediu of
                  Left e_aediv -> Left e_aediv
                  Right s'_aediw
                    -> case (reads $ (unpack s'_aediw)) of
                         ((x_aedix, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aedix
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aedit)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aediw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aedqF v_aedqG
             -> case fromPersistValue v_aedqG of
                  Left e_aedqH -> Left e_aedqH
                  Right s'_aedqI
                    -> case (reads $ (unpack s'_aedqI)) of
                         ((x_aedqJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aedqJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aedqF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aedqI)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeoLA v_aeoLB
             -> case fromPersistValue v_aeoLB of
                  Left e_aeoLC -> Left e_aeoLC
                  Right s'_aeoLD
                    -> case (reads $ (unpack s'_aeoLD)) of
                         ((x_aeoLE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeoLE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeoLA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeoLD)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeoT5 v_aeoT6
             -> case fromPersistValue v_aeoT6 of
                  Left e_aeoT7 -> Left e_aeoT7
                  Right s'_aeoT8
                    -> case (reads $ (unpack s'_aeoT8)) of
                         ((x_aeoT9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeoT9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeoT5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeoT8)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aep1h v_aep1i
             -> case fromPersistValue v_aep1i of
                  Left e_aep1j -> Left e_aep1j
                  Right s'_aep1k
                    -> case (reads $ (unpack s'_aep1k)) of
                         ((x_aep1l, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aep1l
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aep1h)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aep1k)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeplP v_aeplQ
             -> case fromPersistValue v_aeplQ of
                  Left e_aeplR -> Left e_aeplR
                  Right s'_aeplS
                    -> case (reads $ (unpack s'_aeplS)) of
                         ((x_aeplT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeplT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeplP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeplS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeptk v_aeptl
             -> case fromPersistValue v_aeptl of
                  Left e_aeptm -> Left e_aeptm
                  Right s'_aeptn
                    -> case (reads $ (unpack s'_aeptn)) of
                         ((x_aepto, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aepto
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeptk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeptn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aepBw v_aepBx
             -> case fromPersistValue v_aepBx of
                  Left e_aepBy -> Left e_aepBy
                  Right s'_aepBz
                    -> case (reads $ (unpack s'_aepBz)) of
                         ((x_aepBA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aepBA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aepBw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aepBz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeAWr v_aeAWs
             -> case fromPersistValue v_aeAWs of
                  Left e_aeAWt -> Left e_aeAWt
                  Right s'_aeAWu
                    -> case (reads $ (unpack s'_aeAWu)) of
                         ((x_aeAWv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeAWv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeAWr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeAWu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeB3W v_aeB3X
             -> case fromPersistValue v_aeB3X of
                  Left e_aeB3Y -> Left e_aeB3Y
                  Right s'_aeB3Z
                    -> case (reads $ (unpack s'_aeB3Z)) of
                         ((x_aeB40, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeB40
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeB3W)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeB3Z)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeBc8 v_aeBc9
             -> case fromPersistValue v_aeBc9 of
                  Left e_aeBca -> Left e_aeBca
                  Right s'_aeBcb
                    -> case (reads $ (unpack s'_aeBcb)) of
                         ((x_aeBcc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeBcc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeBc8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeBcb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeBwG v_aeBwH
             -> case fromPersistValue v_aeBwH of
                  Left e_aeBwI -> Left e_aeBwI
                  Right s'_aeBwJ
                    -> case (reads $ (unpack s'_aeBwJ)) of
                         ((x_aeBwK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeBwK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeBwG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeBwJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeBEb v_aeBEc
             -> case fromPersistValue v_aeBEc of
                  Left e_aeBEd -> Left e_aeBEd
                  Right s'_aeBEe
                    -> case (reads $ (unpack s'_aeBEe)) of
                         ((x_aeBEf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeBEf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeBEb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeBEe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeBMn v_aeBMo
             -> case fromPersistValue v_aeBMo of
                  Left e_aeBMp -> Left e_aeBMp
                  Right s'_aeBMq
                    -> case (reads $ (unpack s'_aeBMq)) of
                         ((x_aeBMr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeBMr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeBMn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeBMq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeN7i v_aeN7j
             -> case fromPersistValue v_aeN7j of
                  Left e_aeN7k -> Left e_aeN7k
                  Right s'_aeN7l
                    -> case (reads $ (unpack s'_aeN7l)) of
                         ((x_aeN7m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeN7m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeN7i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeN7l)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeNeN v_aeNeO
             -> case fromPersistValue v_aeNeO of
                  Left e_aeNeP -> Left e_aeNeP
                  Right s'_aeNeQ
                    -> case (reads $ (unpack s'_aeNeQ)) of
                         ((x_aeNeR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeNeR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeNeN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeNeQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeNmZ v_aeNn0
             -> case fromPersistValue v_aeNn0 of
                  Left e_aeNn1 -> Left e_aeNn1
                  Right s'_aeNn2
                    -> case (reads $ (unpack s'_aeNn2)) of
                         ((x_aeNn3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeNn3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeNmZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeNn2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeNHx v_aeNHy
             -> case fromPersistValue v_aeNHy of
                  Left e_aeNHz -> Left e_aeNHz
                  Right s'_aeNHA
                    -> case (reads $ (unpack s'_aeNHA)) of
                         ((x_aeNHB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeNHB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeNHx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeNHA)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeNP2 v_aeNP3
             -> case fromPersistValue v_aeNP3 of
                  Left e_aeNP4 -> Left e_aeNP4
                  Right s'_aeNP5
                    -> case (reads $ (unpack s'_aeNP5)) of
                         ((x_aeNP6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeNP6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeNP2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeNP5)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeNXe v_aeNXf
             -> case fromPersistValue v_aeNXf of
                  Left e_aeNXg -> Left e_aeNXg
                  Right s'_aeNXh
                    -> case (reads $ (unpack s'_aeNXh)) of
                         ((x_aeNXi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeNXi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeNXe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeNXh)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeZi9 v_aeZia
             -> case fromPersistValue v_aeZia of
                  Left e_aeZib -> Left e_aeZib
                  Right s'_aeZic
                    -> case (reads $ (unpack s'_aeZic)) of
                         ((x_aeZid, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeZid
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeZi9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeZic)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeZpE v_aeZpF
             -> case fromPersistValue v_aeZpF of
                  Left e_aeZpG -> Left e_aeZpG
                  Right s'_aeZpH
                    -> case (reads $ (unpack s'_aeZpH)) of
                         ((x_aeZpI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeZpI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeZpE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeZpH)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeZxQ v_aeZxR
             -> case fromPersistValue v_aeZxR of
                  Left e_aeZxS -> Left e_aeZxS
                  Right s'_aeZxT
                    -> case (reads $ (unpack s'_aeZxT)) of
                         ((x_aeZxU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeZxU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeZxQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeZxT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeZSo v_aeZSp
             -> case fromPersistValue v_aeZSp of
                  Left e_aeZSq -> Left e_aeZSq
                  Right s'_aeZSr
                    -> case (reads $ (unpack s'_aeZSr)) of
                         ((x_aeZSs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeZSs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeZSo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeZSr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeZZT v_aeZZU
             -> case fromPersistValue v_aeZZU of
                  Left e_aeZZV -> Left e_aeZZV
                  Right s'_aeZZW
                    -> case (reads $ (unpack s'_aeZZW)) of
                         ((x_aeZZX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeZZX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeZZT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeZZW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af085 v_af086
             -> case fromPersistValue v_af086 of
                  Left e_af087 -> Left e_af087
                  Right s'_af088
                    -> case (reads $ (unpack s'_af088)) of
                         ((x_af089, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af089
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af085)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af088)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afbt0 v_afbt1
             -> case fromPersistValue v_afbt1 of
                  Left e_afbt2 -> Left e_afbt2
                  Right s'_afbt3
                    -> case (reads $ (unpack s'_afbt3)) of
                         ((x_afbt4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afbt4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afbt0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afbt3)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afbAv v_afbAw
             -> case fromPersistValue v_afbAw of
                  Left e_afbAx -> Left e_afbAx
                  Right s'_afbAy
                    -> case (reads $ (unpack s'_afbAy)) of
                         ((x_afbAz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afbAz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afbAv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afbAy)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afbIH v_afbII
             -> case fromPersistValue v_afbII of
                  Left e_afbIJ -> Left e_afbIJ
                  Right s'_afbIK
                    -> case (reads $ (unpack s'_afbIK)) of
                         ((x_afbIL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afbIL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afbIH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afbIK)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afc3f v_afc3g
             -> case fromPersistValue v_afc3g of
                  Left e_afc3h -> Left e_afc3h
                  Right s'_afc3i
                    -> case (reads $ (unpack s'_afc3i)) of
                         ((x_afc3j, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afc3j
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afc3f)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afc3i)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afcaK v_afcaL
             -> case fromPersistValue v_afcaL of
                  Left e_afcaM -> Left e_afcaM
                  Right s'_afcaN
                    -> case (reads $ (unpack s'_afcaN)) of
                         ((x_afcaO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afcaO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afcaK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afcaN)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afciW v_afciX
             -> case fromPersistValue v_afciX of
                  Left e_afciY -> Left e_afciY
                  Right s'_afciZ
                    -> case (reads $ (unpack s'_afciZ)) of
                         ((x_afcj0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afcj0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afciW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afciZ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afnDR v_afnDS
             -> case fromPersistValue v_afnDS of
                  Left e_afnDT -> Left e_afnDT
                  Right s'_afnDU
                    -> case (reads $ (unpack s'_afnDU)) of
                         ((x_afnDV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afnDV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afnDR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afnDU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afnLm v_afnLn
             -> case fromPersistValue v_afnLn of
                  Left e_afnLo -> Left e_afnLo
                  Right s'_afnLp
                    -> case (reads $ (unpack s'_afnLp)) of
                         ((x_afnLq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afnLq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afnLm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afnLp)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afnTy v_afnTz
             -> case fromPersistValue v_afnTz of
                  Left e_afnTA -> Left e_afnTA
                  Right s'_afnTB
                    -> case (reads $ (unpack s'_afnTB)) of
                         ((x_afnTC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afnTC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afnTy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afnTB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afoe6 v_afoe7
             -> case fromPersistValue v_afoe7 of
                  Left e_afoe8 -> Left e_afoe8
                  Right s'_afoe9
                    -> case (reads $ (unpack s'_afoe9)) of
                         ((x_afoea, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afoea
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afoe6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afoe9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afolB v_afolC
             -> case fromPersistValue v_afolC of
                  Left e_afolD -> Left e_afolD
                  Right s'_afolE
                    -> case (reads $ (unpack s'_afolE)) of
                         ((x_afolF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afolF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afolB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afolE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afotN v_afotO
             -> case fromPersistValue v_afotO of
                  Left e_afotP -> Left e_afotP
                  Right s'_afotQ
                    -> case (reads $ (unpack s'_afotQ)) of
                         ((x_afotR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afotR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afotN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afotQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afzOI v_afzOJ
             -> case fromPersistValue v_afzOJ of
                  Left e_afzOK -> Left e_afzOK
                  Right s'_afzOL
                    -> case (reads $ (unpack s'_afzOL)) of
                         ((x_afzOM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afzOM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afzOI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afzOL)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afzWd v_afzWe
             -> case fromPersistValue v_afzWe of
                  Left e_afzWf -> Left e_afzWf
                  Right s'_afzWg
                    -> case (reads $ (unpack s'_afzWg)) of
                         ((x_afzWh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afzWh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afzWd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afzWg)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afA4p v_afA4q
             -> case fromPersistValue v_afA4q of
                  Left e_afA4r -> Left e_afA4r
                  Right s'_afA4s
                    -> case (reads $ (unpack s'_afA4s)) of
                         ((x_afA4t, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afA4t
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afA4p)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afA4s)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afAoX v_afAoY
             -> case fromPersistValue v_afAoY of
                  Left e_afAoZ -> Left e_afAoZ
                  Right s'_afAp0
                    -> case (reads $ (unpack s'_afAp0)) of
                         ((x_afAp1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afAp1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afAoX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afAp0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afAws v_afAwt
             -> case fromPersistValue v_afAwt of
                  Left e_afAwu -> Left e_afAwu
                  Right s'_afAwv
                    -> case (reads $ (unpack s'_afAwv)) of
                         ((x_afAww, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afAww
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afAws)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afAwv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afAEE v_afAEF
             -> case fromPersistValue v_afAEF of
                  Left e_afAEG -> Left e_afAEG
                  Right s'_afAEH
                    -> case (reads $ (unpack s'_afAEH)) of
                         ((x_afAEI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afAEI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afAEE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afAEH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afLZz v_afLZA
             -> case fromPersistValue v_afLZA of
                  Left e_afLZB -> Left e_afLZB
                  Right s'_afLZC
                    -> case (reads $ (unpack s'_afLZC)) of
                         ((x_afLZD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afLZD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afLZz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afLZC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afM74 v_afM75
             -> case fromPersistValue v_afM75 of
                  Left e_afM76 -> Left e_afM76
                  Right s'_afM77
                    -> case (reads $ (unpack s'_afM77)) of
                         ((x_afM78, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afM78
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afM74)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afM77)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afMfg v_afMfh
             -> case fromPersistValue v_afMfh of
                  Left e_afMfi -> Left e_afMfi
                  Right s'_afMfj
                    -> case (reads $ (unpack s'_afMfj)) of
                         ((x_afMfk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afMfk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afMfg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afMfj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afMzO v_afMzP
             -> case fromPersistValue v_afMzP of
                  Left e_afMzQ -> Left e_afMzQ
                  Right s'_afMzR
                    -> case (reads $ (unpack s'_afMzR)) of
                         ((x_afMzS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afMzS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afMzO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afMzR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afMHj v_afMHk
             -> case fromPersistValue v_afMHk of
                  Left e_afMHl -> Left e_afMHl
                  Right s'_afMHm
                    -> case (reads $ (unpack s'_afMHm)) of
                         ((x_afMHn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afMHn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afMHj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afMHm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afMPv v_afMPw
             -> case fromPersistValue v_afMPw of
                  Left e_afMPx -> Left e_afMPx
                  Right s'_afMPy
                    -> case (reads $ (unpack s'_afMPy)) of
                         ((x_afMPz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afMPz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afMPv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afMPy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afYaq v_afYar
             -> case fromPersistValue v_afYar of
                  Left e_afYas -> Left e_afYas
                  Right s'_afYat
                    -> case (reads $ (unpack s'_afYat)) of
                         ((x_afYau, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afYau
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afYaq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afYat)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afYhV v_afYhW
             -> case fromPersistValue v_afYhW of
                  Left e_afYhX -> Left e_afYhX
                  Right s'_afYhY
                    -> case (reads $ (unpack s'_afYhY)) of
                         ((x_afYhZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afYhZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afYhV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afYhY)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afYq7 v_afYq8
             -> case fromPersistValue v_afYq8 of
                  Left e_afYq9 -> Left e_afYq9
                  Right s'_afYqa
                    -> case (reads $ (unpack s'_afYqa)) of
                         ((x_afYqb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afYqb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afYq7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afYqa)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afYKF v_afYKG
             -> case fromPersistValue v_afYKG of
                  Left e_afYKH -> Left e_afYKH
                  Right s'_afYKI
                    -> case (reads $ (unpack s'_afYKI)) of
                         ((x_afYKJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afYKJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afYKF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afYKI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afYSa v_afYSb
             -> case fromPersistValue v_afYSb of
                  Left e_afYSc -> Left e_afYSc
                  Right s'_afYSd
                    -> case (reads $ (unpack s'_afYSd)) of
                         ((x_afYSe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afYSe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afYSa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afYSd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afZ0m v_afZ0n
             -> case fromPersistValue v_afZ0n of
                  Left e_afZ0o -> Left e_afZ0o
                  Right s'_afZ0p
                    -> case (reads $ (unpack s'_afZ0p)) of
                         ((x_afZ0q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afZ0q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afZ0m)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afZ0p)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agalh v_agali
             -> case fromPersistValue v_agali of
                  Left e_agalj -> Left e_agalj
                  Right s'_agalk
                    -> case (reads $ (unpack s'_agalk)) of
                         ((x_agall, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agall
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agalh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agalk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agasM v_agasN
             -> case fromPersistValue v_agasN of
                  Left e_agasO -> Left e_agasO
                  Right s'_agasP
                    -> case (reads $ (unpack s'_agasP)) of
                         ((x_agasQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agasQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agasM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agasP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agaAY v_agaAZ
             -> case fromPersistValue v_agaAZ of
                  Left e_agaB0 -> Left e_agaB0
                  Right s'_agaB1
                    -> case (reads $ (unpack s'_agaB1)) of
                         ((x_agaB2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agaB2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agaAY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agaB1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agaVw v_agaVx
             -> case fromPersistValue v_agaVx of
                  Left e_agaVy -> Left e_agaVy
                  Right s'_agaVz
                    -> case (reads $ (unpack s'_agaVz)) of
                         ((x_agaVA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agaVA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agaVw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agaVz)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agb31 v_agb32
             -> case fromPersistValue v_agb32 of
                  Left e_agb33 -> Left e_agb33
                  Right s'_agb34
                    -> case (reads $ (unpack s'_agb34)) of
                         ((x_agb35, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agb35
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agb31)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agb34)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agbbd v_agbbe
             -> case fromPersistValue v_agbbe of
                  Left e_agbbf -> Left e_agbbf
                  Right s'_agbbg
                    -> case (reads $ (unpack s'_agbbg)) of
                         ((x_agbbh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agbbh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agbbd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agbbg)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agmw8 v_agmw9
             -> case fromPersistValue v_agmw9 of
                  Left e_agmwa -> Left e_agmwa
                  Right s'_agmwb
                    -> case (reads $ (unpack s'_agmwb)) of
                         ((x_agmwc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agmwc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agmw8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agmwb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agmDD v_agmDE
             -> case fromPersistValue v_agmDE of
                  Left e_agmDF -> Left e_agmDF
                  Right s'_agmDG
                    -> case (reads $ (unpack s'_agmDG)) of
                         ((x_agmDH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agmDH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agmDD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agmDG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agmLP v_agmLQ
             -> case fromPersistValue v_agmLQ of
                  Left e_agmLR -> Left e_agmLR
                  Right s'_agmLS
                    -> case (reads $ (unpack s'_agmLS)) of
                         ((x_agmLT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agmLT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agmLP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agmLS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agn6n v_agn6o
             -> case fromPersistValue v_agn6o of
                  Left e_agn6p -> Left e_agn6p
                  Right s'_agn6q
                    -> case (reads $ (unpack s'_agn6q)) of
                         ((x_agn6r, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agn6r
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agn6n)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agn6q)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agndS v_agndT
             -> case fromPersistValue v_agndT of
                  Left e_agndU -> Left e_agndU
                  Right s'_agndV
                    -> case (reads $ (unpack s'_agndV)) of
                         ((x_agndW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agndW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agndS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agndV)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agnm4 v_agnm5
             -> case fromPersistValue v_agnm5 of
                  Left e_agnm6 -> Left e_agnm6
                  Right s'_agnm7
                    -> case (reads $ (unpack s'_agnm7)) of
                         ((x_agnm8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agnm8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agnm4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agnm7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agyKj v_agyKk
             -> case fromPersistValue v_agyKk of
                  Left e_agyKl -> Left e_agyKl
                  Right s'_agyKm
                    -> case (reads $ (unpack s'_agyKm)) of
                         ((x_agyKn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agyKn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agyKj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agyKm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agyRO v_agyRP
             -> case fromPersistValue v_agyRP of
                  Left e_agyRQ -> Left e_agyRQ
                  Right s'_agyRR
                    -> case (reads $ (unpack s'_agyRR)) of
                         ((x_agyRS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agyRS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agyRO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agyRR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agz00 v_agz01
             -> case fromPersistValue v_agz01 of
                  Left e_agz02 -> Left e_agz02
                  Right s'_agz03
                    -> case (reads $ (unpack s'_agz03)) of
                         ((x_agz04, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agz04
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agz00)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agz03)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agzky v_agzkz
             -> case fromPersistValue v_agzkz of
                  Left e_agzkA -> Left e_agzkA
                  Right s'_agzkB
                    -> case (reads $ (unpack s'_agzkB)) of
                         ((x_agzkC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agzkC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agzky)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agzkB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agzs3 v_agzs4
             -> case fromPersistValue v_agzs4 of
                  Left e_agzs5 -> Left e_agzs5
                  Right s'_agzs6
                    -> case (reads $ (unpack s'_agzs6)) of
                         ((x_agzs7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agzs7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agzs3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agzs6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agzAf v_agzAg
             -> case fromPersistValue v_agzAg of
                  Left e_agzAh -> Left e_agzAh
                  Right s'_agzAi
                    -> case (reads $ (unpack s'_agzAi)) of
                         ((x_agzAj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agzAj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agzAf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agzAi)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agKYe v_agKYf
             -> case fromPersistValue v_agKYf of
                  Left e_agKYg -> Left e_agKYg
                  Right s'_agKYh
                    -> case (reads $ (unpack s'_agKYh)) of
                         ((x_agKYi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agKYi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agKYe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agKYh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agL5J v_agL5K
             -> case fromPersistValue v_agL5K of
                  Left e_agL5L -> Left e_agL5L
                  Right s'_agL5M
                    -> case (reads $ (unpack s'_agL5M)) of
                         ((x_agL5N, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agL5N
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agL5J)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agL5M)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agLdV v_agLdW
             -> case fromPersistValue v_agLdW of
                  Left e_agLdX -> Left e_agLdX
                  Right s'_agLdY
                    -> case (reads $ (unpack s'_agLdY)) of
                         ((x_agLdZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agLdZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agLdV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agLdY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agLz3 v_agLz4
             -> case fromPersistValue v_agLz4 of
                  Left e_agLz5 -> Left e_agLz5
                  Right s'_agLz6
                    -> case (reads $ (unpack s'_agLz6)) of
                         ((x_agLz7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agLz7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agLz3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agLz6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agLGy v_agLGz
             -> case fromPersistValue v_agLGz of
                  Left e_agLGA -> Left e_agLGA
                  Right s'_agLGB
                    -> case (reads $ (unpack s'_agLGB)) of
                         ((x_agLGC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agLGC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agLGy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agLGB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agLOK v_agLOL
             -> case fromPersistValue v_agLOL of
                  Left e_agLOM -> Left e_agLOM
                  Right s'_agLON
                    -> case (reads $ (unpack s'_agLON)) of
                         ((x_agLOO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agLOO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agLOK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agLON)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agSSQ v_agSSR
             -> case fromPersistValue v_agSSR of
                  Left e_agSSS -> Left e_agSSS
                  Right s'_agSST
                    -> case (reads $ (unpack s'_agSST)) of
                         ((x_agSSU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agSSU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agSSQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agSST)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agT0l v_agT0m
             -> case fromPersistValue v_agT0m of
                  Left e_agT0n -> Left e_agT0n
                  Right s'_agT0o
                    -> case (reads $ (unpack s'_agT0o)) of
                         ((x_agT0p, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agT0p
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agT0l)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agT0o)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agT8x v_agT8y
             -> case fromPersistValue v_agT8y of
                  Left e_agT8z -> Left e_agT8z
                  Right s'_agT8A
                    -> case (reads $ (unpack s'_agT8A)) of
                         ((x_agT8B, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agT8B
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agT8x)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agT8A)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ah0cQ v_ah0cR
             -> case fromPersistValue v_ah0cR of
                  Left e_ah0cS -> Left e_ah0cS
                  Right s'_ah0cT
                    -> case (reads $ (unpack s'_ah0cT)) of
                         ((x_ah0cU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ah0cU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ah0cQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ah0cT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ah0kl v_ah0km
             -> case fromPersistValue v_ah0km of
                  Left e_ah0kn -> Left e_ah0kn
                  Right s'_ah0ko
                    -> case (reads $ (unpack s'_ah0ko)) of
                         ((x_ah0kp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ah0kp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ah0kl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ah0ko)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ah0sx v_ah0sy
             -> case fromPersistValue v_ah0sy of
                  Left e_ah0sz -> Left e_ah0sz
                  Right s'_ah0sA
                    -> case (reads $ (unpack s'_ah0sA)) of
                         ((x_ah0sB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ah0sB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ah0sx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ah0sA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahcac v_ahcad
             -> case fromPersistValue v_ahcad of
                  Left e_ahcae -> Left e_ahcae
                  Right s'_ahcaf
                    -> case (reads $ (unpack s'_ahcaf)) of
                         ((x_ahcag, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahcag
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahcac)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahcaf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahchH v_ahchI
             -> case fromPersistValue v_ahchI of
                  Left e_ahchJ -> Left e_ahchJ
                  Right s'_ahchK
                    -> case (reads $ (unpack s'_ahchK)) of
                         ((x_ahchL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahchL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahchH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahchK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahcpT v_ahcpU
             -> case fromPersistValue v_ahcpU of
                  Left e_ahcpV -> Left e_ahcpV
                  Right s'_ahcpW
                    -> case (reads $ (unpack s'_ahcpW)) of
                         ((x_ahcpX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahcpX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahcpT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahcpW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahcL3 v_ahcL4
             -> case fromPersistValue v_ahcL4 of
                  Left e_ahcL5 -> Left e_ahcL5
                  Right s'_ahcL6
                    -> case (reads $ (unpack s'_ahcL6)) of
                         ((x_ahcL7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahcL7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahcL3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahcL6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahcSy v_ahcSz
             -> case fromPersistValue v_ahcSz of
                  Left e_ahcSA -> Left e_ahcSA
                  Right s'_ahcSB
                    -> case (reads $ (unpack s'_ahcSB)) of
                         ((x_ahcSC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahcSC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahcSy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahcSB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahd0K v_ahd0L
             -> case fromPersistValue v_ahd0L of
                  Left e_ahd0M -> Left e_ahd0M
                  Right s'_ahd0N
                    -> case (reads $ (unpack s'_ahd0N)) of
                         ((x_ahd0O, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahd0O
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahd0K)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahd0N)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahoIp v_ahoIq
             -> case fromPersistValue v_ahoIq of
                  Left e_ahoIr -> Left e_ahoIr
                  Right s'_ahoIs
                    -> case (reads $ (unpack s'_ahoIs)) of
                         ((x_ahoIt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahoIt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahoIp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahoIs)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahoPU v_ahoPV
             -> case fromPersistValue v_ahoPV of
                  Left e_ahoPW -> Left e_ahoPW
                  Right s'_ahoPX
                    -> case (reads $ (unpack s'_ahoPX)) of
                         ((x_ahoPY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahoPY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahoPU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahoPX)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahoY6 v_ahoY7
             -> case fromPersistValue v_ahoY7 of
                  Left e_ahoY8 -> Left e_ahoY8
                  Right s'_ahoY9
                    -> case (reads $ (unpack s'_ahoY9)) of
                         ((x_ahoYa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahoYa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahoY6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahoY9)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahpjg v_ahpjh
             -> case fromPersistValue v_ahpjh of
                  Left e_ahpji -> Left e_ahpji
                  Right s'_ahpjj
                    -> case (reads $ (unpack s'_ahpjj)) of
                         ((x_ahpjk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahpjk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahpjg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahpjj)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahpqL v_ahpqM
             -> case fromPersistValue v_ahpqM of
                  Left e_ahpqN -> Left e_ahpqN
                  Right s'_ahpqO
                    -> case (reads $ (unpack s'_ahpqO)) of
                         ((x_ahpqP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahpqP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahpqL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahpqO)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahpyX v_ahpyY
             -> case fromPersistValue v_ahpyY of
                  Left e_ahpyZ -> Left e_ahpyZ
                  Right s'_ahpz0
                    -> case (reads $ (unpack s'_ahpz0)) of
                         ((x_ahpz1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahpz1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahpyX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahpz0)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahAWW v_ahAWX
             -> case fromPersistValue v_ahAWX of
                  Left e_ahAWY -> Left e_ahAWY
                  Right s'_ahAWZ
                    -> case (reads $ (unpack s'_ahAWZ)) of
                         ((x_ahAX0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahAX0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahAWW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahAWZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahB4r v_ahB4s
             -> case fromPersistValue v_ahB4s of
                  Left e_ahB4t -> Left e_ahB4t
                  Right s'_ahB4u
                    -> case (reads $ (unpack s'_ahB4u)) of
                         ((x_ahB4v, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahB4v
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahB4r)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahB4u)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahBcD v_ahBcE
             -> case fromPersistValue v_ahBcE of
                  Left e_ahBcF -> Left e_ahBcF
                  Right s'_ahBcG
                    -> case (reads $ (unpack s'_ahBcG)) of
                         ((x_ahBcH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahBcH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahBcD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahBcG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahBHY v_ahBHZ
             -> case fromPersistValue v_ahBHZ of
                  Left e_ahBI0 -> Left e_ahBI0
                  Right s'_ahBI1
                    -> case (reads $ (unpack s'_ahBI1)) of
                         ((x_ahBI2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahBI2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahBHY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahBI1)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahBPt v_ahBPu
             -> case fromPersistValue v_ahBPu of
                  Left e_ahBPv -> Left e_ahBPv
                  Right s'_ahBPw
                    -> case (reads $ (unpack s'_ahBPw)) of
                         ((x_ahBPx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahBPx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahBPt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahBPw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahBXF v_ahBXG
             -> case fromPersistValue v_ahBXG of
                  Left e_ahBXH -> Left e_ahBXH
                  Right s'_ahBXI
                    -> case (reads $ (unpack s'_ahBXI)) of
                         ((x_ahBXJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahBXJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahBXF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahBXI)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahJbe v_ahJbf
             -> case fromPersistValue v_ahJbf of
                  Left e_ahJbg -> Left e_ahJbg
                  Right s'_ahJbh
                    -> case (reads $ (unpack s'_ahJbh)) of
                         ((x_ahJbi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahJbi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahJbe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahJbh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahJiJ v_ahJiK
             -> case fromPersistValue v_ahJiK of
                  Left e_ahJiL -> Left e_ahJiL
                  Right s'_ahJiM
                    -> case (reads $ (unpack s'_ahJiM)) of
                         ((x_ahJiN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahJiN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahJiJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahJiM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahJqV v_ahJqW
             -> case fromPersistValue v_ahJqW of
                  Left e_ahJqX -> Left e_ahJqX
                  Right s'_ahJqY
                    -> case (reads $ (unpack s'_ahJqY)) of
                         ((x_ahJqZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahJqZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahJqV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahJqY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahUOU v_ahUOV
             -> case fromPersistValue v_ahUOV of
                  Left e_ahUOW -> Left e_ahUOW
                  Right s'_ahUOX
                    -> case (reads $ (unpack s'_ahUOX)) of
                         ((x_ahUOY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahUOY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahUOU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahUOX)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahUWp v_ahUWq
             -> case fromPersistValue v_ahUWq of
                  Left e_ahUWr -> Left e_ahUWr
                  Right s'_ahUWs
                    -> case (reads $ (unpack s'_ahUWs)) of
                         ((x_ahUWt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahUWt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahUWp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahUWs)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahV4B v_ahV4C
             -> case fromPersistValue v_ahV4C of
                  Left e_ahV4D -> Left e_ahV4D
                  Right s'_ahV4E
                    -> case (reads $ (unpack s'_ahV4E)) of
                         ((x_ahV4F, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahV4F
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahV4B)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahV4E)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahVp9 v_ahVpa
             -> case fromPersistValue v_ahVpa of
                  Left e_ahVpb -> Left e_ahVpb
                  Right s'_ahVpc
                    -> case (reads $ (unpack s'_ahVpc)) of
                         ((x_ahVpd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahVpd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahVp9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahVpc)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahVwE v_ahVwF
             -> case fromPersistValue v_ahVwF of
                  Left e_ahVwG -> Left e_ahVwG
                  Right s'_ahVwH
                    -> case (reads $ (unpack s'_ahVwH)) of
                         ((x_ahVwI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahVwI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahVwE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahVwH)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahVEQ v_ahVER
             -> case fromPersistValue v_ahVER of
                  Left e_ahVES -> Left e_ahVES
                  Right s'_ahVET
                    -> case (reads $ (unpack s'_ahVET)) of
                         ((x_ahVEU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahVEU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahVEQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahVET)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai6ZL v_ai6ZM
             -> case fromPersistValue v_ai6ZM of
                  Left e_ai6ZN -> Left e_ai6ZN
                  Right s'_ai6ZO
                    -> case (reads $ (unpack s'_ai6ZO)) of
                         ((x_ai6ZP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai6ZP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai6ZL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai6ZO)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai77g v_ai77h
             -> case fromPersistValue v_ai77h of
                  Left e_ai77i -> Left e_ai77i
                  Right s'_ai77j
                    -> case (reads $ (unpack s'_ai77j)) of
                         ((x_ai77k, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai77k
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai77g)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai77j)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai7fs v_ai7ft
             -> case fromPersistValue v_ai7ft of
                  Left e_ai7fu -> Left e_ai7fu
                  Right s'_ai7fv
                    -> case (reads $ (unpack s'_ai7fv)) of
                         ((x_ai7fw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai7fw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai7fs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai7fv)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai7A0 v_ai7A1
             -> case fromPersistValue v_ai7A1 of
                  Left e_ai7A2 -> Left e_ai7A2
                  Right s'_ai7A3
                    -> case (reads $ (unpack s'_ai7A3)) of
                         ((x_ai7A4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai7A4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai7A0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai7A3)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai7Hv v_ai7Hw
             -> case fromPersistValue v_ai7Hw of
                  Left e_ai7Hx -> Left e_ai7Hx
                  Right s'_ai7Hy
                    -> case (reads $ (unpack s'_ai7Hy)) of
                         ((x_ai7Hz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai7Hz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai7Hv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai7Hy)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai7PH v_ai7PI
             -> case fromPersistValue v_ai7PI of
                  Left e_ai7PJ -> Left e_ai7PJ
                  Right s'_ai7PK
                    -> case (reads $ (unpack s'_ai7PK)) of
                         ((x_ai7PL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai7PL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai7PH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai7PK)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aieJW v_aieJX
             -> case fromPersistValue v_aieJX of
                  Left e_aieJY -> Left e_aieJY
                  Right s'_aieJZ
                    -> case (reads $ (unpack s'_aieJZ)) of
                         ((x_aieK0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aieK0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aieJW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aieJZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aieRr v_aieRs
             -> case fromPersistValue v_aieRs of
                  Left e_aieRt -> Left e_aieRt
                  Right s'_aieRu
                    -> case (reads $ (unpack s'_aieRu)) of
                         ((x_aieRv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aieRv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aieRr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aieRu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aieZD v_aieZE
             -> case fromPersistValue v_aieZE of
                  Left e_aieZF -> Left e_aieZF
                  Right s'_aieZG
                    -> case (reads $ (unpack s'_aieZG)) of
                         ((x_aieZH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aieZH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aieZD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aieZG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiqnC v_aiqnD
             -> case fromPersistValue v_aiqnD of
                  Left e_aiqnE -> Left e_aiqnE
                  Right s'_aiqnF
                    -> case (reads $ (unpack s'_aiqnF)) of
                         ((x_aiqnG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiqnG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiqnC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiqnF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiqv7 v_aiqv8
             -> case fromPersistValue v_aiqv8 of
                  Left e_aiqv9 -> Left e_aiqv9
                  Right s'_aiqva
                    -> case (reads $ (unpack s'_aiqva)) of
                         ((x_aiqvb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiqvb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiqv7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiqva)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiqDj v_aiqDk
             -> case fromPersistValue v_aiqDk of
                  Left e_aiqDl -> Left e_aiqDl
                  Right s'_aiqDm
                    -> case (reads $ (unpack s'_aiqDm)) of
                         ((x_aiqDn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiqDn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiqDj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiqDm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiqXR v_aiqXS
             -> case fromPersistValue v_aiqXS of
                  Left e_aiqXT -> Left e_aiqXT
                  Right s'_aiqXU
                    -> case (reads $ (unpack s'_aiqXU)) of
                         ((x_aiqXV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiqXV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiqXR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiqXU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_air5m v_air5n
             -> case fromPersistValue v_air5n of
                  Left e_air5o -> Left e_air5o
                  Right s'_air5p
                    -> case (reads $ (unpack s'_air5p)) of
                         ((x_air5q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_air5q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_air5m)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_air5p)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_airdy v_airdz
             -> case fromPersistValue v_airdz of
                  Left e_airdA -> Left e_airdA
                  Right s'_airdB
                    -> case (reads $ (unpack s'_airdB)) of
                         ((x_airdC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_airdC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_airdy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_airdB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiCBx v_aiCBy
             -> case fromPersistValue v_aiCBy of
                  Left e_aiCBz -> Left e_aiCBz
                  Right s'_aiCBA
                    -> case (reads $ (unpack s'_aiCBA)) of
                         ((x_aiCBB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiCBB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiCBx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiCBA)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiCJ2 v_aiCJ3
             -> case fromPersistValue v_aiCJ3 of
                  Left e_aiCJ4 -> Left e_aiCJ4
                  Right s'_aiCJ5
                    -> case (reads $ (unpack s'_aiCJ5)) of
                         ((x_aiCJ6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiCJ6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiCJ2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiCJ5)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiCRe v_aiCRf
             -> case fromPersistValue v_aiCRf of
                  Left e_aiCRg -> Left e_aiCRg
                  Right s'_aiCRh
                    -> case (reads $ (unpack s'_aiCRh)) of
                         ((x_aiCRi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiCRi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiCRe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiCRh)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiDbM v_aiDbN
             -> case fromPersistValue v_aiDbN of
                  Left e_aiDbO -> Left e_aiDbO
                  Right s'_aiDbP
                    -> case (reads $ (unpack s'_aiDbP)) of
                         ((x_aiDbQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiDbQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiDbM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiDbP)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiDjh v_aiDji
             -> case fromPersistValue v_aiDji of
                  Left e_aiDjj -> Left e_aiDjj
                  Right s'_aiDjk
                    -> case (reads $ (unpack s'_aiDjk)) of
                         ((x_aiDjl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiDjl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiDjh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiDjk)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiDrt v_aiDru
             -> case fromPersistValue v_aiDru of
                  Left e_aiDrv -> Left e_aiDrv
                  Right s'_aiDrw
                    -> case (reads $ (unpack s'_aiDrw)) of
                         ((x_aiDrx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiDrx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiDrt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiDrw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiKxP v_aiKxQ
             -> case fromPersistValue v_aiKxQ of
                  Left e_aiKxR -> Left e_aiKxR
                  Right s'_aiKxS
                    -> case (reads $ (unpack s'_aiKxS)) of
                         ((x_aiKxT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiKxT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiKxP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiKxS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiKFk v_aiKFl
             -> case fromPersistValue v_aiKFl of
                  Left e_aiKFm -> Left e_aiKFm
                  Right s'_aiKFn
                    -> case (reads $ (unpack s'_aiKFn)) of
                         ((x_aiKFo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiKFo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiKFk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiKFn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiKNw v_aiKNx
             -> case fromPersistValue v_aiKNx of
                  Left e_aiKNy -> Left e_aiKNy
                  Right s'_aiKNz
                    -> case (reads $ (unpack s'_aiKNz)) of
                         ((x_aiKNA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiKNA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiKNw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiKNz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiRRB v_aiRRC
             -> case fromPersistValue v_aiRRC of
                  Left e_aiRRD -> Left e_aiRRD
                  Right s'_aiRRE
                    -> case (reads $ (unpack s'_aiRRE)) of
                         ((x_aiRRF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiRRF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiRRB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiRRE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiRZ6 v_aiRZ7
             -> case fromPersistValue v_aiRZ7 of
                  Left e_aiRZ8 -> Left e_aiRZ8
                  Right s'_aiRZ9
                    -> case (reads $ (unpack s'_aiRZ9)) of
                         ((x_aiRZa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiRZa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiRZ6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiRZ9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiS7i v_aiS7j
             -> case fromPersistValue v_aiS7j of
                  Left e_aiS7k -> Left e_aiS7k
                  Right s'_aiS7l
                    -> case (reads $ (unpack s'_aiS7l)) of
                         ((x_aiS7m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiS7m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiS7i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiS7l)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiZ5g v_aiZ5h
             -> case fromPersistValue v_aiZ5h of
                  Left e_aiZ5i -> Left e_aiZ5i
                  Right s'_aiZ5j
                    -> case (reads $ (unpack s'_aiZ5j)) of
                         ((x_aiZ5k, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiZ5k
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiZ5g)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiZ5j)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiZcL v_aiZcM
             -> case fromPersistValue v_aiZcM of
                  Left e_aiZcN -> Left e_aiZcN
                  Right s'_aiZcO
                    -> case (reads $ (unpack s'_aiZcO)) of
                         ((x_aiZcP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiZcP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiZcL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiZcO)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiZkX v_aiZkY
             -> case fromPersistValue v_aiZkY of
                  Left e_aiZkZ -> Left e_aiZkZ
                  Right s'_aiZl0
                    -> case (reads $ (unpack s'_aiZl0)) of
                         ((x_aiZl1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiZl1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiZkX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiZl0)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj6p2 v_aj6p3
             -> case fromPersistValue v_aj6p3 of
                  Left e_aj6p4 -> Left e_aj6p4
                  Right s'_aj6p5
                    -> case (reads $ (unpack s'_aj6p5)) of
                         ((x_aj6p6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj6p6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj6p2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj6p5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj6wx v_aj6wy
             -> case fromPersistValue v_aj6wy of
                  Left e_aj6wz -> Left e_aj6wz
                  Right s'_aj6wA
                    -> case (reads $ (unpack s'_aj6wA)) of
                         ((x_aj6wB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj6wB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj6wx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj6wA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj6EJ v_aj6EK
             -> case fromPersistValue v_aj6EK of
                  Left e_aj6EL -> Left e_aj6EL
                  Right s'_aj6EM
                    -> case (reads $ (unpack s'_aj6EM)) of
                         ((x_aj6EN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj6EN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj6EJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj6EM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajdIP v_ajdIQ
             -> case fromPersistValue v_ajdIQ of
                  Left e_ajdIR -> Left e_ajdIR
                  Right s'_ajdIS
                    -> case (reads $ (unpack s'_ajdIS)) of
                         ((x_ajdIT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajdIT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajdIP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajdIS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajdQk v_ajdQl
             -> case fromPersistValue v_ajdQl of
                  Left e_ajdQm -> Left e_ajdQm
                  Right s'_ajdQn
                    -> case (reads $ (unpack s'_ajdQn)) of
                         ((x_ajdQo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajdQo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajdQk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajdQn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajdYw v_ajdYx
             -> case fromPersistValue v_ajdYx of
                  Left e_ajdYy -> Left e_ajdYy
                  Right s'_ajdYz
                    -> case (reads $ (unpack s'_ajdYz)) of
                         ((x_ajdYA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajdYA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajdYw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajdYz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajpGb v_ajpGc
             -> case fromPersistValue v_ajpGc of
                  Left e_ajpGd -> Left e_ajpGd
                  Right s'_ajpGe
                    -> case (reads $ (unpack s'_ajpGe)) of
                         ((x_ajpGf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajpGf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajpGb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajpGe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajpNG v_ajpNH
             -> case fromPersistValue v_ajpNH of
                  Left e_ajpNI -> Left e_ajpNI
                  Right s'_ajpNJ
                    -> case (reads $ (unpack s'_ajpNJ)) of
                         ((x_ajpNK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajpNK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajpNG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajpNJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajpVS v_ajpVT
             -> case fromPersistValue v_ajpVT of
                  Left e_ajpVU -> Left e_ajpVU
                  Right s'_ajpVV
                    -> case (reads $ (unpack s'_ajpVV)) of
                         ((x_ajpVW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajpVW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajpVS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajpVV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajqh2 v_ajqh3
             -> case fromPersistValue v_ajqh3 of
                  Left e_ajqh4 -> Left e_ajqh4
                  Right s'_ajqh5
                    -> case (reads $ (unpack s'_ajqh5)) of
                         ((x_ajqh6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajqh6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajqh2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajqh5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajqox v_ajqoy
             -> case fromPersistValue v_ajqoy of
                  Left e_ajqoz -> Left e_ajqoz
                  Right s'_ajqoA
                    -> case (reads $ (unpack s'_ajqoA)) of
                         ((x_ajqoB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajqoB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajqox)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajqoA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajqwJ v_ajqwK
             -> case fromPersistValue v_ajqwK of
                  Left e_ajqwL -> Left e_ajqwL
                  Right s'_ajqwM
                    -> case (reads $ (unpack s'_ajqwM)) of
                         ((x_ajqwN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajqwN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajqwJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajqwM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajCeo v_ajCep
             -> case fromPersistValue v_ajCep of
                  Left e_ajCeq -> Left e_ajCeq
                  Right s'_ajCer
                    -> case (reads $ (unpack s'_ajCer)) of
                         ((x_ajCes, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajCes
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajCeo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajCer)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajClT v_ajClU
             -> case fromPersistValue v_ajClU of
                  Left e_ajClV -> Left e_ajClV
                  Right s'_ajClW
                    -> case (reads $ (unpack s'_ajClW)) of
                         ((x_ajClX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajClX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajClT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajClW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajCu5 v_ajCu6
             -> case fromPersistValue v_ajCu6 of
                  Left e_ajCu7 -> Left e_ajCu7
                  Right s'_ajCu8
                    -> case (reads $ (unpack s'_ajCu8)) of
                         ((x_ajCu9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajCu9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajCu5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajCu8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajCPf v_ajCPg
             -> case fromPersistValue v_ajCPg of
                  Left e_ajCPh -> Left e_ajCPh
                  Right s'_ajCPi
                    -> case (reads $ (unpack s'_ajCPi)) of
                         ((x_ajCPj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajCPj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajCPf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajCPi)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajCWK v_ajCWL
             -> case fromPersistValue v_ajCWL of
                  Left e_ajCWM -> Left e_ajCWM
                  Right s'_ajCWN
                    -> case (reads $ (unpack s'_ajCWN)) of
                         ((x_ajCWO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajCWO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajCWK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajCWN)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajD4W v_ajD4X
             -> case fromPersistValue v_ajD4X of
                  Left e_ajD4Y -> Left e_ajD4Y
                  Right s'_ajD4Z
                    -> case (reads $ (unpack s'_ajD4Z)) of
                         ((x_ajD50, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajD50
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajD4W)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajD4Z)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajOMB v_ajOMC
             -> case fromPersistValue v_ajOMC of
                  Left e_ajOMD -> Left e_ajOMD
                  Right s'_ajOME
                    -> case (reads $ (unpack s'_ajOME)) of
                         ((x_ajOMF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajOMF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajOMB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajOME)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajOU6 v_ajOU7
             -> case fromPersistValue v_ajOU7 of
                  Left e_ajOU8 -> Left e_ajOU8
                  Right s'_ajOU9
                    -> case (reads $ (unpack s'_ajOU9)) of
                         ((x_ajOUa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajOUa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajOU6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajOU9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajP2i v_ajP2j
             -> case fromPersistValue v_ajP2j of
                  Left e_ajP2k -> Left e_ajP2k
                  Right s'_ajP2l
                    -> case (reads $ (unpack s'_ajP2l)) of
                         ((x_ajP2m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajP2m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajP2i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajP2l)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajPns v_ajPnt
             -> case fromPersistValue v_ajPnt of
                  Left e_ajPnu -> Left e_ajPnu
                  Right s'_ajPnv
                    -> case (reads $ (unpack s'_ajPnv)) of
                         ((x_ajPnw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajPnw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajPns)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajPnv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajPuX v_ajPuY
             -> case fromPersistValue v_ajPuY of
                  Left e_ajPuZ -> Left e_ajPuZ
                  Right s'_ajPv0
                    -> case (reads $ (unpack s'_ajPv0)) of
                         ((x_ajPv1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajPv1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajPuX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajPv0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajPD9 v_ajPDa
             -> case fromPersistValue v_ajPDa of
                  Left e_ajPDb -> Left e_ajPDb
                  Right s'_ajPDc
                    -> case (reads $ (unpack s'_ajPDc)) of
                         ((x_ajPDd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajPDd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajPD9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajPDc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1kO v_ak1kP
             -> case fromPersistValue v_ak1kP of
                  Left e_ak1kQ -> Left e_ak1kQ
                  Right s'_ak1kR
                    -> case (reads $ (unpack s'_ak1kR)) of
                         ((x_ak1kS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1kS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1kO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1kR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1sj v_ak1sk
             -> case fromPersistValue v_ak1sk of
                  Left e_ak1sl -> Left e_ak1sl
                  Right s'_ak1sm
                    -> case (reads $ (unpack s'_ak1sm)) of
                         ((x_ak1sn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1sn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1sj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1sm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1Av v_ak1Aw
             -> case fromPersistValue v_ak1Aw of
                  Left e_ak1Ax -> Left e_ak1Ax
                  Right s'_ak1Ay
                    -> case (reads $ (unpack s'_ak1Ay)) of
                         ((x_ak1Az, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1Az
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1Av)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1Ay)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1VF v_ak1VG
             -> case fromPersistValue v_ak1VG of
                  Left e_ak1VH -> Left e_ak1VH
                  Right s'_ak1VI
                    -> case (reads $ (unpack s'_ak1VI)) of
                         ((x_ak1VJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1VJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1VF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1VI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak23a v_ak23b
             -> case fromPersistValue v_ak23b of
                  Left e_ak23c -> Left e_ak23c
                  Right s'_ak23d
                    -> case (reads $ (unpack s'_ak23d)) of
                         ((x_ak23e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak23e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak23a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak23d)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak2bm v_ak2bn
             -> case fromPersistValue v_ak2bn of
                  Left e_ak2bo -> Left e_ak2bo
                  Right s'_ak2bp
                    -> case (reads $ (unpack s'_ak2bp)) of
                         ((x_ak2bq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak2bq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak2bm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak2bp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akdT1 v_akdT2
             -> case fromPersistValue v_akdT2 of
                  Left e_akdT3 -> Left e_akdT3
                  Right s'_akdT4
                    -> case (reads $ (unpack s'_akdT4)) of
                         ((x_akdT5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akdT5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akdT1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akdT4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ake0w v_ake0x
             -> case fromPersistValue v_ake0x of
                  Left e_ake0y -> Left e_ake0y
                  Right s'_ake0z
                    -> case (reads $ (unpack s'_ake0z)) of
                         ((x_ake0A, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ake0A
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ake0w)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ake0z)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ake8I v_ake8J
             -> case fromPersistValue v_ake8J of
                  Left e_ake8K -> Left e_ake8K
                  Right s'_ake8L
                    -> case (reads $ (unpack s'_ake8L)) of
                         ((x_ake8M, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ake8M
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ake8I)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ake8L)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aketS v_aketT
             -> case fromPersistValue v_aketT of
                  Left e_aketU -> Left e_aketU
                  Right s'_aketV
                    -> case (reads $ (unpack s'_aketV)) of
                         ((x_aketW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aketW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aketS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aketV)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akeBn v_akeBo
             -> case fromPersistValue v_akeBo of
                  Left e_akeBp -> Left e_akeBp
                  Right s'_akeBq
                    -> case (reads $ (unpack s'_akeBq)) of
                         ((x_akeBr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akeBr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akeBn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akeBq)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akeJz v_akeJA
             -> case fromPersistValue v_akeJA of
                  Left e_akeJB -> Left e_akeJB
                  Right s'_akeJC
                    -> case (reads $ (unpack s'_akeJC)) of
                         ((x_akeJD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akeJD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akeJz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akeJC)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akqre v_akqrf
             -> case fromPersistValue v_akqrf of
                  Left e_akqrg -> Left e_akqrg
                  Right s'_akqrh
                    -> case (reads $ (unpack s'_akqrh)) of
                         ((x_akqri, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akqri
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akqre)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akqrh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akqyJ v_akqyK
             -> case fromPersistValue v_akqyK of
                  Left e_akqyL -> Left e_akqyL
                  Right s'_akqyM
                    -> case (reads $ (unpack s'_akqyM)) of
                         ((x_akqyN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akqyN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akqyJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akqyM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akqGV v_akqGW
             -> case fromPersistValue v_akqGW of
                  Left e_akqGX -> Left e_akqGX
                  Right s'_akqGY
                    -> case (reads $ (unpack s'_akqGY)) of
                         ((x_akqGZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akqGZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akqGV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akqGY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akr25 v_akr26
             -> case fromPersistValue v_akr26 of
                  Left e_akr27 -> Left e_akr27
                  Right s'_akr28
                    -> case (reads $ (unpack s'_akr28)) of
                         ((x_akr29, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akr29
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akr25)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akr28)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akr9A v_akr9B
             -> case fromPersistValue v_akr9B of
                  Left e_akr9C -> Left e_akr9C
                  Right s'_akr9D
                    -> case (reads $ (unpack s'_akr9D)) of
                         ((x_akr9E, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akr9E
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akr9A)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akr9D)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akrhM v_akrhN
             -> case fromPersistValue v_akrhN of
                  Left e_akrhO -> Left e_akrhO
                  Right s'_akrhP
                    -> case (reads $ (unpack s'_akrhP)) of
                         ((x_akrhQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akrhQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akrhM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akrhP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akCZr v_akCZs
             -> case fromPersistValue v_akCZs of
                  Left e_akCZt -> Left e_akCZt
                  Right s'_akCZu
                    -> case (reads $ (unpack s'_akCZu)) of
                         ((x_akCZv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akCZv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akCZr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akCZu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akD6W v_akD6X
             -> case fromPersistValue v_akD6X of
                  Left e_akD6Y -> Left e_akD6Y
                  Right s'_akD6Z
                    -> case (reads $ (unpack s'_akD6Z)) of
                         ((x_akD70, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akD70
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akD6W)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akD6Z)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akDf8 v_akDf9
             -> case fromPersistValue v_akDf9 of
                  Left e_akDfa -> Left e_akDfa
                  Right s'_akDfb
                    -> case (reads $ (unpack s'_akDfb)) of
                         ((x_akDfc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akDfc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akDf8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akDfb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akDAi v_akDAj
             -> case fromPersistValue v_akDAj of
                  Left e_akDAk -> Left e_akDAk
                  Right s'_akDAl
                    -> case (reads $ (unpack s'_akDAl)) of
                         ((x_akDAm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akDAm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akDAi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akDAl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akDHN v_akDHO
             -> case fromPersistValue v_akDHO of
                  Left e_akDHP -> Left e_akDHP
                  Right s'_akDHQ
                    -> case (reads $ (unpack s'_akDHQ)) of
                         ((x_akDHR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akDHR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akDHN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akDHQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akDPZ v_akDQ0
             -> case fromPersistValue v_akDQ0 of
                  Left e_akDQ1 -> Left e_akDQ1
                  Right s'_akDQ2
                    -> case (reads $ (unpack s'_akDQ2)) of
                         ((x_akDQ3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akDQ3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akDPZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akDQ2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akPxE v_akPxF
             -> case fromPersistValue v_akPxF of
                  Left e_akPxG -> Left e_akPxG
                  Right s'_akPxH
                    -> case (reads $ (unpack s'_akPxH)) of
                         ((x_akPxI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akPxI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akPxE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akPxH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akPF9 v_akPFa
             -> case fromPersistValue v_akPFa of
                  Left e_akPFb -> Left e_akPFb
                  Right s'_akPFc
                    -> case (reads $ (unpack s'_akPFc)) of
                         ((x_akPFd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akPFd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akPF9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akPFc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akPNl v_akPNm
             -> case fromPersistValue v_akPNm of
                  Left e_akPNn -> Left e_akPNn
                  Right s'_akPNo
                    -> case (reads $ (unpack s'_akPNo)) of
                         ((x_akPNp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akPNp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akPNl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akPNo)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akQ8v v_akQ8w
             -> case fromPersistValue v_akQ8w of
                  Left e_akQ8x -> Left e_akQ8x
                  Right s'_akQ8y
                    -> case (reads $ (unpack s'_akQ8y)) of
                         ((x_akQ8z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akQ8z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akQ8v)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akQ8y)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akQg0 v_akQg1
             -> case fromPersistValue v_akQg1 of
                  Left e_akQg2 -> Left e_akQg2
                  Right s'_akQg3
                    -> case (reads $ (unpack s'_akQg3)) of
                         ((x_akQg4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akQg4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akQg0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akQg3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akQoc v_akQod
             -> case fromPersistValue v_akQod of
                  Left e_akQoe -> Left e_akQoe
                  Right s'_akQof
                    -> case (reads $ (unpack s'_akQof)) of
                         ((x_akQog, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akQog
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akQoc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akQof)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al25R v_al25S
             -> case fromPersistValue v_al25S of
                  Left e_al25T -> Left e_al25T
                  Right s'_al25U
                    -> case (reads $ (unpack s'_al25U)) of
                         ((x_al25V, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al25V
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al25R)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al25U)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2dm v_al2dn
             -> case fromPersistValue v_al2dn of
                  Left e_al2do -> Left e_al2do
                  Right s'_al2dp
                    -> case (reads $ (unpack s'_al2dp)) of
                         ((x_al2dq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2dq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2dm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2dp)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2ly v_al2lz
             -> case fromPersistValue v_al2lz of
                  Left e_al2lA -> Left e_al2lA
                  Right s'_al2lB
                    -> case (reads $ (unpack s'_al2lB)) of
                         ((x_al2lC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2lC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2ly)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2lB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2GI v_al2GJ
             -> case fromPersistValue v_al2GJ of
                  Left e_al2GK -> Left e_al2GK
                  Right s'_al2GL
                    -> case (reads $ (unpack s'_al2GL)) of
                         ((x_al2GM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2GM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2GI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2GL)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2Od v_al2Oe
             -> case fromPersistValue v_al2Oe of
                  Left e_al2Of -> Left e_al2Of
                  Right s'_al2Og
                    -> case (reads $ (unpack s'_al2Og)) of
                         ((x_al2Oh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2Oh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2Od)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2Og)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2Wp v_al2Wq
             -> case fromPersistValue v_al2Wq of
                  Left e_al2Wr -> Left e_al2Wr
                  Right s'_al2Ws
                    -> case (reads $ (unpack s'_al2Ws)) of
                         ((x_al2Wt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2Wt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2Wp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2Ws)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aleE4 v_aleE5
             -> case fromPersistValue v_aleE5 of
                  Left e_aleE6 -> Left e_aleE6
                  Right s'_aleE7
                    -> case (reads $ (unpack s'_aleE7)) of
                         ((x_aleE8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aleE8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aleE4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aleE7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aleLz v_aleLA
             -> case fromPersistValue v_aleLA of
                  Left e_aleLB -> Left e_aleLB
                  Right s'_aleLC
                    -> case (reads $ (unpack s'_aleLC)) of
                         ((x_aleLD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aleLD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aleLz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aleLC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aleTL v_aleTM
             -> case fromPersistValue v_aleTM of
                  Left e_aleTN -> Left e_aleTN
                  Right s'_aleTO
                    -> case (reads $ (unpack s'_aleTO)) of
                         ((x_aleTP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aleTP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aleTL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aleTO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alfeV v_alfeW
             -> case fromPersistValue v_alfeW of
                  Left e_alfeX -> Left e_alfeX
                  Right s'_alfeY
                    -> case (reads $ (unpack s'_alfeY)) of
                         ((x_alfeZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alfeZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alfeV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alfeY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alfmq v_alfmr
             -> case fromPersistValue v_alfmr of
                  Left e_alfms -> Left e_alfms
                  Right s'_alfmt
                    -> case (reads $ (unpack s'_alfmt)) of
                         ((x_alfmu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alfmu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alfmq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alfmt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alfuC v_alfuD
             -> case fromPersistValue v_alfuD of
                  Left e_alfuE -> Left e_alfuE
                  Right s'_alfuF
                    -> case (reads $ (unpack s'_alfuF)) of
                         ((x_alfuG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alfuG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alfuC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alfuF)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alrch v_alrci
             -> case fromPersistValue v_alrci of
                  Left e_alrcj -> Left e_alrcj
                  Right s'_alrck
                    -> case (reads $ (unpack s'_alrck)) of
                         ((x_alrcl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alrcl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alrch)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alrck)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alrjM v_alrjN
             -> case fromPersistValue v_alrjN of
                  Left e_alrjO -> Left e_alrjO
                  Right s'_alrjP
                    -> case (reads $ (unpack s'_alrjP)) of
                         ((x_alrjQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alrjQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alrjM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alrjP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alrrY v_alrrZ
             -> case fromPersistValue v_alrrZ of
                  Left e_alrs0 -> Left e_alrs0
                  Right s'_alrs1
                    -> case (reads $ (unpack s'_alrs1)) of
                         ((x_alrs2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alrs2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alrrY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alrs1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alrN8 v_alrN9
             -> case fromPersistValue v_alrN9 of
                  Left e_alrNa -> Left e_alrNa
                  Right s'_alrNb
                    -> case (reads $ (unpack s'_alrNb)) of
                         ((x_alrNc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alrNc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alrN8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alrNb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alrUD v_alrUE
             -> case fromPersistValue v_alrUE of
                  Left e_alrUF -> Left e_alrUF
                  Right s'_alrUG
                    -> case (reads $ (unpack s'_alrUG)) of
                         ((x_alrUH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alrUH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alrUD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alrUG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_als2P v_als2Q
             -> case fromPersistValue v_als2Q of
                  Left e_als2R -> Left e_als2R
                  Right s'_als2S
                    -> case (reads $ (unpack s'_als2S)) of
                         ((x_als2T, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_als2T
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_als2P)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_als2S)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDnK v_alDnL
             -> case fromPersistValue v_alDnL of
                  Left e_alDnM -> Left e_alDnM
                  Right s'_alDnN
                    -> case (reads $ (unpack s'_alDnN)) of
                         ((x_alDnO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDnO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDnK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDnN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDvf v_alDvg
             -> case fromPersistValue v_alDvg of
                  Left e_alDvh -> Left e_alDvh
                  Right s'_alDvi
                    -> case (reads $ (unpack s'_alDvi)) of
                         ((x_alDvj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDvj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDvf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDvi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDDr v_alDDs
             -> case fromPersistValue v_alDDs of
                  Left e_alDDt -> Left e_alDDt
                  Right s'_alDDu
                    -> case (reads $ (unpack s'_alDDu)) of
                         ((x_alDDv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDDv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDDr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDDu)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDXZ v_alDY0
             -> case fromPersistValue v_alDY0 of
                  Left e_alDY1 -> Left e_alDY1
                  Right s'_alDY2
                    -> case (reads $ (unpack s'_alDY2)) of
                         ((x_alDY3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDY3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDXZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDY2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alE5u v_alE5v
             -> case fromPersistValue v_alE5v of
                  Left e_alE5w -> Left e_alE5w
                  Right s'_alE5x
                    -> case (reads $ (unpack s'_alE5x)) of
                         ((x_alE5y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alE5y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alE5u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alE5x)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alEdG v_alEdH
             -> case fromPersistValue v_alEdH of
                  Left e_alEdI -> Left e_alEdI
                  Right s'_alEdJ
                    -> case (reads $ (unpack s'_alEdJ)) of
                         ((x_alEdK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alEdK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alEdG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alEdJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alPyB v_alPyC
             -> case fromPersistValue v_alPyC of
                  Left e_alPyD -> Left e_alPyD
                  Right s'_alPyE
                    -> case (reads $ (unpack s'_alPyE)) of
                         ((x_alPyF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alPyF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alPyB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alPyE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alPG6 v_alPG7
             -> case fromPersistValue v_alPG7 of
                  Left e_alPG8 -> Left e_alPG8
                  Right s'_alPG9
                    -> case (reads $ (unpack s'_alPG9)) of
                         ((x_alPGa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alPGa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alPG6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alPG9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alPOi v_alPOj
             -> case fromPersistValue v_alPOj of
                  Left e_alPOk -> Left e_alPOk
                  Right s'_alPOl
                    -> case (reads $ (unpack s'_alPOl)) of
                         ((x_alPOm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alPOm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alPOi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alPOl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alQ8Q v_alQ8R
             -> case fromPersistValue v_alQ8R of
                  Left e_alQ8S -> Left e_alQ8S
                  Right s'_alQ8T
                    -> case (reads $ (unpack s'_alQ8T)) of
                         ((x_alQ8U, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alQ8U
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alQ8Q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alQ8T)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alQgl v_alQgm
             -> case fromPersistValue v_alQgm of
                  Left e_alQgn -> Left e_alQgn
                  Right s'_alQgo
                    -> case (reads $ (unpack s'_alQgo)) of
                         ((x_alQgp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alQgp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alQgl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alQgo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alQox v_alQoy
             -> case fromPersistValue v_alQoy of
                  Left e_alQoz -> Left e_alQoz
                  Right s'_alQoA
                    -> case (reads $ (unpack s'_alQoA)) of
                         ((x_alQoB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alQoB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alQox)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alQoA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am1Js v_am1Jt
             -> case fromPersistValue v_am1Jt of
                  Left e_am1Ju -> Left e_am1Ju
                  Right s'_am1Jv
                    -> case (reads $ (unpack s'_am1Jv)) of
                         ((x_am1Jw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am1Jw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am1Js)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am1Jv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am1QX v_am1QY
             -> case fromPersistValue v_am1QY of
                  Left e_am1QZ -> Left e_am1QZ
                  Right s'_am1R0
                    -> case (reads $ (unpack s'_am1R0)) of
                         ((x_am1R1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am1R1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am1QX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am1R0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am1Z9 v_am1Za
             -> case fromPersistValue v_am1Za of
                  Left e_am1Zb -> Left e_am1Zb
                  Right s'_am1Zc
                    -> case (reads $ (unpack s'_am1Zc)) of
                         ((x_am1Zd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am1Zd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am1Z9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am1Zc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am2jH v_am2jI
             -> case fromPersistValue v_am2jI of
                  Left e_am2jJ -> Left e_am2jJ
                  Right s'_am2jK
                    -> case (reads $ (unpack s'_am2jK)) of
                         ((x_am2jL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am2jL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am2jH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am2jK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am2rc v_am2rd
             -> case fromPersistValue v_am2rd of
                  Left e_am2re -> Left e_am2re
                  Right s'_am2rf
                    -> case (reads $ (unpack s'_am2rf)) of
                         ((x_am2rg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am2rg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am2rc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am2rf)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am2zo v_am2zp
             -> case fromPersistValue v_am2zp of
                  Left e_am2zq -> Left e_am2zq
                  Right s'_am2zr
                    -> case (reads $ (unpack s'_am2zr)) of
                         ((x_am2zs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am2zs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am2zo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am2zr)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amdUj v_amdUk
             -> case fromPersistValue v_amdUk of
                  Left e_amdUl -> Left e_amdUl
                  Right s'_amdUm
                    -> case (reads $ (unpack s'_amdUm)) of
                         ((x_amdUn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amdUn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amdUj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amdUm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ame1O v_ame1P
             -> case fromPersistValue v_ame1P of
                  Left e_ame1Q -> Left e_ame1Q
                  Right s'_ame1R
                    -> case (reads $ (unpack s'_ame1R)) of
                         ((x_ame1S, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ame1S
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ame1O)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ame1R)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amea0 v_amea1
             -> case fromPersistValue v_amea1 of
                  Left e_amea2 -> Left e_amea2
                  Right s'_amea3
                    -> case (reads $ (unpack s'_amea3)) of
                         ((x_amea4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amea4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amea0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amea3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ameuy v_ameuz
             -> case fromPersistValue v_ameuz of
                  Left e_ameuA -> Left e_ameuA
                  Right s'_ameuB
                    -> case (reads $ (unpack s'_ameuB)) of
                         ((x_ameuC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ameuC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ameuy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ameuB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ameC3 v_ameC4
             -> case fromPersistValue v_ameC4 of
                  Left e_ameC5 -> Left e_ameC5
                  Right s'_ameC6
                    -> case (reads $ (unpack s'_ameC6)) of
                         ((x_ameC7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ameC7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ameC3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ameC6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ameKf v_ameKg
             -> case fromPersistValue v_ameKg of
                  Left e_ameKh -> Left e_ameKh
                  Right s'_ameKi
                    -> case (reads $ (unpack s'_ameKi)) of
                         ((x_ameKj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ameKj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ameKf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ameKi)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amq5a v_amq5b
             -> case fromPersistValue v_amq5b of
                  Left e_amq5c -> Left e_amq5c
                  Right s'_amq5d
                    -> case (reads $ (unpack s'_amq5d)) of
                         ((x_amq5e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amq5e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amq5a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amq5d)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amqcF v_amqcG
             -> case fromPersistValue v_amqcG of
                  Left e_amqcH -> Left e_amqcH
                  Right s'_amqcI
                    -> case (reads $ (unpack s'_amqcI)) of
                         ((x_amqcJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amqcJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amqcF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amqcI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amqkR v_amqkS
             -> case fromPersistValue v_amqkS of
                  Left e_amqkT -> Left e_amqkT
                  Right s'_amqkU
                    -> case (reads $ (unpack s'_amqkU)) of
                         ((x_amqkV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amqkV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amqkR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amqkU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amqFp v_amqFq
             -> case fromPersistValue v_amqFq of
                  Left e_amqFr -> Left e_amqFr
                  Right s'_amqFs
                    -> case (reads $ (unpack s'_amqFs)) of
                         ((x_amqFt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amqFt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amqFp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amqFs)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amqMU v_amqMV
             -> case fromPersistValue v_amqMV of
                  Left e_amqMW -> Left e_amqMW
                  Right s'_amqMX
                    -> case (reads $ (unpack s'_amqMX)) of
                         ((x_amqMY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amqMY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amqMU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amqMX)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amqV6 v_amqV7
             -> case fromPersistValue v_amqV7 of
                  Left e_amqV8 -> Left e_amqV8
                  Right s'_amqV9
                    -> case (reads $ (unpack s'_amqV9)) of
                         ((x_amqVa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amqVa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amqV6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amqV9)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amCg1 v_amCg2
             -> case fromPersistValue v_amCg2 of
                  Left e_amCg3 -> Left e_amCg3
                  Right s'_amCg4
                    -> case (reads $ (unpack s'_amCg4)) of
                         ((x_amCg5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amCg5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amCg1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amCg4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amCnw v_amCnx
             -> case fromPersistValue v_amCnx of
                  Left e_amCny -> Left e_amCny
                  Right s'_amCnz
                    -> case (reads $ (unpack s'_amCnz)) of
                         ((x_amCnA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amCnA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amCnw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amCnz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amCvI v_amCvJ
             -> case fromPersistValue v_amCvJ of
                  Left e_amCvK -> Left e_amCvK
                  Right s'_amCvL
                    -> case (reads $ (unpack s'_amCvL)) of
                         ((x_amCvM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amCvM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amCvI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amCvL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amCQg v_amCQh
             -> case fromPersistValue v_amCQh of
                  Left e_amCQi -> Left e_amCQi
                  Right s'_amCQj
                    -> case (reads $ (unpack s'_amCQj)) of
                         ((x_amCQk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amCQk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amCQg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amCQj)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amCXL v_amCXM
             -> case fromPersistValue v_amCXM of
                  Left e_amCXN -> Left e_amCXN
                  Right s'_amCXO
                    -> case (reads $ (unpack s'_amCXO)) of
                         ((x_amCXP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amCXP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amCXL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amCXO)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amD5X v_amD5Y
             -> case fromPersistValue v_amD5Y of
                  Left e_amD5Z -> Left e_amD5Z
                  Right s'_amD60
                    -> case (reads $ (unpack s'_amD60)) of
                         ((x_amD61, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amD61
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amD5X)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amD60)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amOtW v_amOtX
             -> case fromPersistValue v_amOtX of
                  Left e_amOtY -> Left e_amOtY
                  Right s'_amOtZ
                    -> case (reads $ (unpack s'_amOtZ)) of
                         ((x_amOu0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amOu0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amOtW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amOtZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amOBr v_amOBs
             -> case fromPersistValue v_amOBs of
                  Left e_amOBt -> Left e_amOBt
                  Right s'_amOBu
                    -> case (reads $ (unpack s'_amOBu)) of
                         ((x_amOBv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amOBv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amOBr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amOBu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amOJD v_amOJE
             -> case fromPersistValue v_amOJE of
                  Left e_amOJF -> Left e_amOJF
                  Right s'_amOJG
                    -> case (reads $ (unpack s'_amOJG)) of
                         ((x_amOJH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amOJH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amOJD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amOJG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amP4b v_amP4c
             -> case fromPersistValue v_amP4c of
                  Left e_amP4d -> Left e_amP4d
                  Right s'_amP4e
                    -> case (reads $ (unpack s'_amP4e)) of
                         ((x_amP4f, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amP4f
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amP4b)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amP4e)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amPbG v_amPbH
             -> case fromPersistValue v_amPbH of
                  Left e_amPbI -> Left e_amPbI
                  Right s'_amPbJ
                    -> case (reads $ (unpack s'_amPbJ)) of
                         ((x_amPbK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amPbK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amPbG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amPbJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amPjS v_amPjT
             -> case fromPersistValue v_amPjT of
                  Left e_amPjU -> Left e_amPjU
                  Right s'_amPjV
                    -> case (reads $ (unpack s'_amPjV)) of
                         ((x_amPjW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amPjW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amPjS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amPjV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0HR v_an0HS
             -> case fromPersistValue v_an0HS of
                  Left e_an0HT -> Left e_an0HT
                  Right s'_an0HU
                    -> case (reads $ (unpack s'_an0HU)) of
                         ((x_an0HV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0HV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0HR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0HU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0Pm v_an0Pn
             -> case fromPersistValue v_an0Pn of
                  Left e_an0Po -> Left e_an0Po
                  Right s'_an0Pp
                    -> case (reads $ (unpack s'_an0Pp)) of
                         ((x_an0Pq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0Pq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0Pm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0Pp)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0Xy v_an0Xz
             -> case fromPersistValue v_an0Xz of
                  Left e_an0XA -> Left e_an0XA
                  Right s'_an0XB
                    -> case (reads $ (unpack s'_an0XB)) of
                         ((x_an0XC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0XC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0Xy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0XB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an1iG v_an1iH
             -> case fromPersistValue v_an1iH of
                  Left e_an1iI -> Left e_an1iI
                  Right s'_an1iJ
                    -> case (reads $ (unpack s'_an1iJ)) of
                         ((x_an1iK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an1iK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an1iG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an1iJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an1qb v_an1qc
             -> case fromPersistValue v_an1qc of
                  Left e_an1qd -> Left e_an1qd
                  Right s'_an1qe
                    -> case (reads $ (unpack s'_an1qe)) of
                         ((x_an1qf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an1qf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an1qb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an1qe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an1yn v_an1yo
             -> case fromPersistValue v_an1yo of
                  Left e_an1yp -> Left e_an1yp
                  Right s'_an1yq
                    -> case (reads $ (unpack s'_an1yq)) of
                         ((x_an1yr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an1yr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an1yn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an1yq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ancWm v_ancWn
             -> case fromPersistValue v_ancWn of
                  Left e_ancWo -> Left e_ancWo
                  Right s'_ancWp
                    -> case (reads $ (unpack s'_ancWp)) of
                         ((x_ancWq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ancWq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ancWm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ancWp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_and3R v_and3S
             -> case fromPersistValue v_and3S of
                  Left e_and3T -> Left e_and3T
                  Right s'_and3U
                    -> case (reads $ (unpack s'_and3U)) of
                         ((x_and3V, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_and3V
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_and3R)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_and3U)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_andc3 v_andc4
             -> case fromPersistValue v_andc4 of
                  Left e_andc5 -> Left e_andc5
                  Right s'_andc6
                    -> case (reads $ (unpack s'_andc6)) of
                         ((x_andc7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_andc7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_andc3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_andc6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_andxb v_andxc
             -> case fromPersistValue v_andxc of
                  Left e_andxd -> Left e_andxd
                  Right s'_andxe
                    -> case (reads $ (unpack s'_andxe)) of
                         ((x_andxf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_andxf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_andxb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_andxe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_andEG v_andEH
             -> case fromPersistValue v_andEH of
                  Left e_andEI -> Left e_andEI
                  Right s'_andEJ
                    -> case (reads $ (unpack s'_andEJ)) of
                         ((x_andEK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_andEK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_andEG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_andEJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_andMS v_andMT
             -> case fromPersistValue v_andMT of
                  Left e_andMU -> Left e_andMU
                  Right s'_andMV
                    -> case (reads $ (unpack s'_andMV)) of
                         ((x_andMW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_andMW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_andMS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_andMV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anpaR v_anpaS
             -> case fromPersistValue v_anpaS of
                  Left e_anpaT -> Left e_anpaT
                  Right s'_anpaU
                    -> case (reads $ (unpack s'_anpaU)) of
                         ((x_anpaV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anpaV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anpaR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anpaU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anpim v_anpin
             -> case fromPersistValue v_anpin of
                  Left e_anpio -> Left e_anpio
                  Right s'_anpip
                    -> case (reads $ (unpack s'_anpip)) of
                         ((x_anpiq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anpiq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anpim)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anpip)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anpqy v_anpqz
             -> case fromPersistValue v_anpqz of
                  Left e_anpqA -> Left e_anpqA
                  Right s'_anpqB
                    -> case (reads $ (unpack s'_anpqB)) of
                         ((x_anpqC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anpqC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anpqy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anpqB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anpLG v_anpLH
             -> case fromPersistValue v_anpLH of
                  Left e_anpLI -> Left e_anpLI
                  Right s'_anpLJ
                    -> case (reads $ (unpack s'_anpLJ)) of
                         ((x_anpLK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anpLK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anpLG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anpLJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anpTb v_anpTc
             -> case fromPersistValue v_anpTc of
                  Left e_anpTd -> Left e_anpTd
                  Right s'_anpTe
                    -> case (reads $ (unpack s'_anpTe)) of
                         ((x_anpTf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anpTf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anpTb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anpTe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anq1n v_anq1o
             -> case fromPersistValue v_anq1o of
                  Left e_anq1p -> Left e_anq1p
                  Right s'_anq1q
                    -> case (reads $ (unpack s'_anq1q)) of
                         ((x_anq1r, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anq1r
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anq1n)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anq1q)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anBpm v_anBpn
             -> case fromPersistValue v_anBpn of
                  Left e_anBpo -> Left e_anBpo
                  Right s'_anBpp
                    -> case (reads $ (unpack s'_anBpp)) of
                         ((x_anBpq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anBpq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anBpm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anBpp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anBwR v_anBwS
             -> case fromPersistValue v_anBwS of
                  Left e_anBwT -> Left e_anBwT
                  Right s'_anBwU
                    -> case (reads $ (unpack s'_anBwU)) of
                         ((x_anBwV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anBwV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anBwR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anBwU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anBF3 v_anBF4
             -> case fromPersistValue v_anBF4 of
                  Left e_anBF5 -> Left e_anBF5
                  Right s'_anBF6
                    -> case (reads $ (unpack s'_anBF6)) of
                         ((x_anBF7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anBF7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anBF3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anBF6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anC0b v_anC0c
             -> case fromPersistValue v_anC0c of
                  Left e_anC0d -> Left e_anC0d
                  Right s'_anC0e
                    -> case (reads $ (unpack s'_anC0e)) of
                         ((x_anC0f, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anC0f
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anC0b)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anC0e)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anC7G v_anC7H
             -> case fromPersistValue v_anC7H of
                  Left e_anC7I -> Left e_anC7I
                  Right s'_anC7J
                    -> case (reads $ (unpack s'_anC7J)) of
                         ((x_anC7K, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anC7K
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anC7G)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anC7J)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anCfS v_anCfT
             -> case fromPersistValue v_anCfT of
                  Left e_anCfU -> Left e_anCfU
                  Right s'_anCfV
                    -> case (reads $ (unpack s'_anCfV)) of
                         ((x_anCfW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anCfW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anCfS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anCfV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anNDR v_anNDS
             -> case fromPersistValue v_anNDS of
                  Left e_anNDT -> Left e_anNDT
                  Right s'_anNDU
                    -> case (reads $ (unpack s'_anNDU)) of
                         ((x_anNDV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anNDV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anNDR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anNDU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anNLm v_anNLn
             -> case fromPersistValue v_anNLn of
                  Left e_anNLo -> Left e_anNLo
                  Right s'_anNLp
                    -> case (reads $ (unpack s'_anNLp)) of
                         ((x_anNLq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anNLq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anNLm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anNLp)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anNTy v_anNTz
             -> case fromPersistValue v_anNTz of
                  Left e_anNTA -> Left e_anNTA
                  Right s'_anNTB
                    -> case (reads $ (unpack s'_anNTB)) of
                         ((x_anNTC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anNTC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anNTy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anNTB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anOeG v_anOeH
             -> case fromPersistValue v_anOeH of
                  Left e_anOeI -> Left e_anOeI
                  Right s'_anOeJ
                    -> case (reads $ (unpack s'_anOeJ)) of
                         ((x_anOeK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anOeK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anOeG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anOeJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anOmb v_anOmc
             -> case fromPersistValue v_anOmc of
                  Left e_anOmd -> Left e_anOmd
                  Right s'_anOme
                    -> case (reads $ (unpack s'_anOme)) of
                         ((x_anOmf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anOmf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anOmb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anOme)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anOun v_anOuo
             -> case fromPersistValue v_anOuo of
                  Left e_anOup -> Left e_anOup
                  Right s'_anOuq
                    -> case (reads $ (unpack s'_anOuq)) of
                         ((x_anOur, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anOur
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anOun)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anOuq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anZSm v_anZSn
             -> case fromPersistValue v_anZSn of
                  Left e_anZSo -> Left e_anZSo
                  Right s'_anZSp
                    -> case (reads $ (unpack s'_anZSp)) of
                         ((x_anZSq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anZSq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anZSm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anZSp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anZZR v_anZZS
             -> case fromPersistValue v_anZZS of
                  Left e_anZZT -> Left e_anZZT
                  Right s'_anZZU
                    -> case (reads $ (unpack s'_anZZU)) of
                         ((x_anZZV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anZZV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anZZR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anZZU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao083 v_ao084
             -> case fromPersistValue v_ao084 of
                  Left e_ao085 -> Left e_ao085
                  Right s'_ao086
                    -> case (reads $ (unpack s'_ao086)) of
                         ((x_ao087, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao087
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao083)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao086)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao0tb v_ao0tc
             -> case fromPersistValue v_ao0tc of
                  Left e_ao0td -> Left e_ao0td
                  Right s'_ao0te
                    -> case (reads $ (unpack s'_ao0te)) of
                         ((x_ao0tf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao0tf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao0tb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao0te)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao0AG v_ao0AH
             -> case fromPersistValue v_ao0AH of
                  Left e_ao0AI -> Left e_ao0AI
                  Right s'_ao0AJ
                    -> case (reads $ (unpack s'_ao0AJ)) of
                         ((x_ao0AK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao0AK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao0AG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao0AJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao0IS v_ao0IT
             -> case fromPersistValue v_ao0IT of
                  Left e_ao0IU -> Left e_ao0IU
                  Right s'_ao0IV
                    -> case (reads $ (unpack s'_ao0IV)) of
                         ((x_ao0IW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao0IW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao0IS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao0IV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoc6R v_aoc6S
             -> case fromPersistValue v_aoc6S of
                  Left e_aoc6T -> Left e_aoc6T
                  Right s'_aoc6U
                    -> case (reads $ (unpack s'_aoc6U)) of
                         ((x_aoc6V, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoc6V
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoc6R)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoc6U)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aocem v_aocen
             -> case fromPersistValue v_aocen of
                  Left e_aoceo -> Left e_aoceo
                  Right s'_aocep
                    -> case (reads $ (unpack s'_aocep)) of
                         ((x_aoceq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoceq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aocem)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aocep)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aocmy v_aocmz
             -> case fromPersistValue v_aocmz of
                  Left e_aocmA -> Left e_aocmA
                  Right s'_aocmB
                    -> case (reads $ (unpack s'_aocmB)) of
                         ((x_aocmC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aocmC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aocmy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aocmB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aocH6 v_aocH7
             -> case fromPersistValue v_aocH7 of
                  Left e_aocH8 -> Left e_aocH8
                  Right s'_aocH9
                    -> case (reads $ (unpack s'_aocH9)) of
                         ((x_aocHa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aocHa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aocH6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aocH9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aocOB v_aocOC
             -> case fromPersistValue v_aocOC of
                  Left e_aocOD -> Left e_aocOD
                  Right s'_aocOE
                    -> case (reads $ (unpack s'_aocOE)) of
                         ((x_aocOF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aocOF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aocOB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aocOE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aocWN v_aocWO
             -> case fromPersistValue v_aocWO of
                  Left e_aocWP -> Left e_aocWP
                  Right s'_aocWQ
                    -> case (reads $ (unpack s'_aocWQ)) of
                         ((x_aocWR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aocWR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aocWN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aocWQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aojR2 v_aojR3
             -> case fromPersistValue v_aojR3 of
                  Left e_aojR4 -> Left e_aojR4
                  Right s'_aojR5
                    -> case (reads $ (unpack s'_aojR5)) of
                         ((x_aojR6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aojR6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aojR2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aojR5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aojYx v_aojYy
             -> case fromPersistValue v_aojYy of
                  Left e_aojYz -> Left e_aojYz
                  Right s'_aojYA
                    -> case (reads $ (unpack s'_aojYA)) of
                         ((x_aojYB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aojYB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aojYx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aojYA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aok6J v_aok6K
             -> case fromPersistValue v_aok6K of
                  Left e_aok6L -> Left e_aok6L
                  Right s'_aok6M
                    -> case (reads $ (unpack s'_aok6M)) of
                         ((x_aok6N, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aok6N
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aok6J)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aok6M)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aor2D v_aor2E
             -> case fromPersistValue v_aor2E of
                  Left e_aor2F -> Left e_aor2F
                  Right s'_aor2G
                    -> case (reads $ (unpack s'_aor2G)) of
                         ((x_aor2H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aor2H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aor2D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aor2G)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aora8 v_aora9
             -> case fromPersistValue v_aora9 of
                  Left e_aoraa -> Left e_aoraa
                  Right s'_aorab
                    -> case (reads $ (unpack s'_aorab)) of
                         ((x_aorac, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aorac
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aora8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aorab)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aorik v_aoril
             -> case fromPersistValue v_aoril of
                  Left e_aorim -> Left e_aorim
                  Right s'_aorin
                    -> case (reads $ (unpack s'_aorin)) of
                         ((x_aorio, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aorio
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aorik)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aorin)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoycz v_aoycA
             -> case fromPersistValue v_aoycA of
                  Left e_aoycB -> Left e_aoycB
                  Right s'_aoycC
                    -> case (reads $ (unpack s'_aoycC)) of
                         ((x_aoycD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoycD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoycz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoycC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoyk4 v_aoyk5
             -> case fromPersistValue v_aoyk5 of
                  Left e_aoyk6 -> Left e_aoyk6
                  Right s'_aoyk7
                    -> case (reads $ (unpack s'_aoyk7)) of
                         ((x_aoyk8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoyk8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoyk4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoyk7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoysg v_aoysh
             -> case fromPersistValue v_aoysh of
                  Left e_aoysi -> Left e_aoysi
                  Right s'_aoysj
                    -> case (reads $ (unpack s'_aoysj)) of
                         ((x_aoysk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoysk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoysg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoysj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoFmv v_aoFmw
             -> case fromPersistValue v_aoFmw of
                  Left e_aoFmx -> Left e_aoFmx
                  Right s'_aoFmy
                    -> case (reads $ (unpack s'_aoFmy)) of
                         ((x_aoFmz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoFmz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoFmv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoFmy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoFu0 v_aoFu1
             -> case fromPersistValue v_aoFu1 of
                  Left e_aoFu2 -> Left e_aoFu2
                  Right s'_aoFu3
                    -> case (reads $ (unpack s'_aoFu3)) of
                         ((x_aoFu4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoFu4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoFu0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoFu3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoFCc v_aoFCd
             -> case fromPersistValue v_aoFCd of
                  Left e_aoFCe -> Left e_aoFCe
                  Right s'_aoFCf
                    -> case (reads $ (unpack s'_aoFCf)) of
                         ((x_aoFCg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoFCg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoFCc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoFCf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoMwr v_aoMws
             -> case fromPersistValue v_aoMws of
                  Left e_aoMwt -> Left e_aoMwt
                  Right s'_aoMwu
                    -> case (reads $ (unpack s'_aoMwu)) of
                         ((x_aoMwv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoMwv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoMwr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoMwu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoMDW v_aoMDX
             -> case fromPersistValue v_aoMDX of
                  Left e_aoMDY -> Left e_aoMDY
                  Right s'_aoMDZ
                    -> case (reads $ (unpack s'_aoMDZ)) of
                         ((x_aoME0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoME0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoMDW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoMDZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoMM8 v_aoMM9
             -> case fromPersistValue v_aoMM9 of
                  Left e_aoMMa -> Left e_aoMMa
                  Right s'_aoMMb
                    -> case (reads $ (unpack s'_aoMMb)) of
                         ((x_aoMMc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoMMc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoMM8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoMMb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoTGn v_aoTGo
             -> case fromPersistValue v_aoTGo of
                  Left e_aoTGp -> Left e_aoTGp
                  Right s'_aoTGq
                    -> case (reads $ (unpack s'_aoTGq)) of
                         ((x_aoTGr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoTGr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoTGn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoTGq)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoTNS v_aoTNT
             -> case fromPersistValue v_aoTNT of
                  Left e_aoTNU -> Left e_aoTNU
                  Right s'_aoTNV
                    -> case (reads $ (unpack s'_aoTNV)) of
                         ((x_aoTNW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoTNW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoTNS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoTNV)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoTW4 v_aoTW5
             -> case fromPersistValue v_aoTW5 of
                  Left e_aoTW6 -> Left e_aoTW6
                  Right s'_aoTW7
                    -> case (reads $ (unpack s'_aoTW7)) of
                         ((x_aoTW8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoTW8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoTW4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoTW7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ap0Qj v_ap0Qk
             -> case fromPersistValue v_ap0Qk of
                  Left e_ap0Ql -> Left e_ap0Ql
                  Right s'_ap0Qm
                    -> case (reads $ (unpack s'_ap0Qm)) of
                         ((x_ap0Qn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ap0Qn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ap0Qj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ap0Qm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ap0XO v_ap0XP
             -> case fromPersistValue v_ap0XP of
                  Left e_ap0XQ -> Left e_ap0XQ
                  Right s'_ap0XR
                    -> case (reads $ (unpack s'_ap0XR)) of
                         ((x_ap0XS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ap0XS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ap0XO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ap0XR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ap160 v_ap161
             -> case fromPersistValue v_ap161 of
                  Left e_ap162 -> Left e_ap162
                  Right s'_ap163
                    -> case (reads $ (unpack s'_ap163)) of
                         ((x_ap164, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ap164
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ap160)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ap163)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apctP v_apctQ
             -> case fromPersistValue v_apctQ of
                  Left e_apctR -> Left e_apctR
                  Right s'_apctS
                    -> case (reads $ (unpack s'_apctS)) of
                         ((x_apctT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apctT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apctP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apctS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apcBk v_apcBl
             -> case fromPersistValue v_apcBl of
                  Left e_apcBm -> Left e_apcBm
                  Right s'_apcBn
                    -> case (reads $ (unpack s'_apcBn)) of
                         ((x_apcBo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apcBo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apcBk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apcBn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apcJw v_apcJx
             -> case fromPersistValue v_apcJx of
                  Left e_apcJy -> Left e_apcJy
                  Right s'_apcJz
                    -> case (reads $ (unpack s'_apcJz)) of
                         ((x_apcJA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apcJA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apcJw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apcJz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apd4d v_apd4e
             -> case fromPersistValue v_apd4e of
                  Left e_apd4f -> Left e_apd4f
                  Right s'_apd4g
                    -> case (reads $ (unpack s'_apd4g)) of
                         ((x_apd4h, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apd4h
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apd4d)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apd4g)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apdbI v_apdbJ
             -> case fromPersistValue v_apdbJ of
                  Left e_apdbK -> Left e_apdbK
                  Right s'_apdbL
                    -> case (reads $ (unpack s'_apdbL)) of
                         ((x_apdbM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apdbM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apdbI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apdbL)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apdjU v_apdjV
             -> case fromPersistValue v_apdjV of
                  Left e_apdjW -> Left e_apdjW
                  Right s'_apdjX
                    -> case (reads $ (unpack s'_apdjX)) of
                         ((x_apdjY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apdjY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apdjU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apdjX)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apkhN v_apkhO
             -> case fromPersistValue v_apkhO of
                  Left e_apkhP -> Left e_apkhP
                  Right s'_apkhQ
                    -> case (reads $ (unpack s'_apkhQ)) of
                         ((x_apkhR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apkhR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apkhN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apkhQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apkpi v_apkpj
             -> case fromPersistValue v_apkpj of
                  Left e_apkpk -> Left e_apkpk
                  Right s'_apkpl
                    -> case (reads $ (unpack s'_apkpl)) of
                         ((x_apkpm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apkpm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apkpi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apkpl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apkxu v_apkxv
             -> case fromPersistValue v_apkxv of
                  Left e_apkxw -> Left e_apkxw
                  Right s'_apkxx
                    -> case (reads $ (unpack s'_apkxx)) of
                         ((x_apkxy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apkxy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apkxu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apkxx)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aprvn v_aprvo
             -> case fromPersistValue v_aprvo of
                  Left e_aprvp -> Left e_aprvp
                  Right s'_aprvq
                    -> case (reads $ (unpack s'_aprvq)) of
                         ((x_aprvr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aprvr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aprvn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aprvq)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aprCS v_aprCT
             -> case fromPersistValue v_aprCT of
                  Left e_aprCU -> Left e_aprCU
                  Right s'_aprCV
                    -> case (reads $ (unpack s'_aprCV)) of
                         ((x_aprCW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aprCW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aprCS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aprCV)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aprL4 v_aprL5
             -> case fromPersistValue v_aprL5 of
                  Left e_aprL6 -> Left e_aprL6
                  Right s'_aprL7
                    -> case (reads $ (unpack s'_aprL7)) of
                         ((x_aprL8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aprL8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aprL4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aprL7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apsfT v_apsfU
             -> case fromPersistValue v_apsfU of
                  Left e_apsfV -> Left e_apsfV
                  Right s'_apsfW
                    -> case (reads $ (unpack s'_apsfW)) of
                         ((x_apsfX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apsfX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apsfT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apsfW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apsno v_apsnp
             -> case fromPersistValue v_apsnp of
                  Left e_apsnq -> Left e_apsnq
                  Right s'_apsnr
                    -> case (reads $ (unpack s'_apsnr)) of
                         ((x_apsns, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apsns
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apsno)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apsnr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apsvA v_apsvB
             -> case fromPersistValue v_apsvB of
                  Left e_apsvC -> Left e_apsvC
                  Right s'_apsvD
                    -> case (reads $ (unpack s'_apsvD)) of
                         ((x_apsvE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apsvE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apsvA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apsvD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apsPH v_apsPI
             -> case fromPersistValue v_apsPI of
                  Left e_apsPJ -> Left e_apsPJ
                  Right s'_apsPK
                    -> case (reads $ (unpack s'_apsPK)) of
                         ((x_apsPL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apsPL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apsPH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apsPK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apsXc v_apsXd
             -> case fromPersistValue v_apsXd of
                  Left e_apsXe -> Left e_apsXe
                  Right s'_apsXf
                    -> case (reads $ (unpack s'_apsXf)) of
                         ((x_apsXg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apsXg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apsXc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apsXf)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apt5o v_apt5p
             -> case fromPersistValue v_apt5p of
                  Left e_apt5q -> Left e_apt5q
                  Right s'_apt5r
                    -> case (reads $ (unpack s'_apt5r)) of
                         ((x_apt5s, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apt5s
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apt5o)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apt5r)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apA3h v_apA3i
             -> case fromPersistValue v_apA3i of
                  Left e_apA3j -> Left e_apA3j
                  Right s'_apA3k
                    -> case (reads $ (unpack s'_apA3k)) of
                         ((x_apA3l, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apA3l
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apA3h)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apA3k)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apAaM v_apAaN
             -> case fromPersistValue v_apAaN of
                  Left e_apAaO -> Left e_apAaO
                  Right s'_apAaP
                    -> case (reads $ (unpack s'_apAaP)) of
                         ((x_apAaQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apAaQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apAaM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apAaP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apAiY v_apAiZ
             -> case fromPersistValue v_apAiZ of
                  Left e_apAj0 -> Left e_apAj0
                  Right s'_apAj1
                    -> case (reads $ (unpack s'_apAj1)) of
                         ((x_apAj2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apAj2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apAiY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apAj1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apLDT v_apLDU
             -> case fromPersistValue v_apLDU of
                  Left e_apLDV -> Left e_apLDV
                  Right s'_apLDW
                    -> case (reads $ (unpack s'_apLDW)) of
                         ((x_apLDX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apLDX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apLDT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apLDW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apLLo v_apLLp
             -> case fromPersistValue v_apLLp of
                  Left e_apLLq -> Left e_apLLq
                  Right s'_apLLr
                    -> case (reads $ (unpack s'_apLLr)) of
                         ((x_apLLs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apLLs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apLLo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apLLr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apLTA v_apLTB
             -> case fromPersistValue v_apLTB of
                  Left e_apLTC -> Left e_apLTC
                  Right s'_apLTD
                    -> case (reads $ (unpack s'_apLTD)) of
                         ((x_apLTE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apLTE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apLTA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apLTD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apMe8 v_apMe9
             -> case fromPersistValue v_apMe9 of
                  Left e_apMea -> Left e_apMea
                  Right s'_apMeb
                    -> case (reads $ (unpack s'_apMeb)) of
                         ((x_apMec, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apMec
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apMe8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apMeb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apMlD v_apMlE
             -> case fromPersistValue v_apMlE of
                  Left e_apMlF -> Left e_apMlF
                  Right s'_apMlG
                    -> case (reads $ (unpack s'_apMlG)) of
                         ((x_apMlH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apMlH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apMlD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apMlG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apMtP v_apMtQ
             -> case fromPersistValue v_apMtQ of
                  Left e_apMtR -> Left e_apMtR
                  Right s'_apMtS
                    -> case (reads $ (unpack s'_apMtS)) of
                         ((x_apMtT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apMtT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apMtP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apMtS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apXOK v_apXOL
             -> case fromPersistValue v_apXOL of
                  Left e_apXOM -> Left e_apXOM
                  Right s'_apXON
                    -> case (reads $ (unpack s'_apXON)) of
                         ((x_apXOO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apXOO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apXOK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apXON)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apXWf v_apXWg
             -> case fromPersistValue v_apXWg of
                  Left e_apXWh -> Left e_apXWh
                  Right s'_apXWi
                    -> case (reads $ (unpack s'_apXWi)) of
                         ((x_apXWj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apXWj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apXWf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apXWi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apY4r v_apY4s
             -> case fromPersistValue v_apY4s of
                  Left e_apY4t -> Left e_apY4t
                  Right s'_apY4u
                    -> case (reads $ (unpack s'_apY4u)) of
                         ((x_apY4v, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apY4v
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apY4r)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apY4u)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apYoZ v_apYp0
             -> case fromPersistValue v_apYp0 of
                  Left e_apYp1 -> Left e_apYp1
                  Right s'_apYp2
                    -> case (reads $ (unpack s'_apYp2)) of
                         ((x_apYp3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apYp3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apYoZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apYp2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apYwu v_apYwv
             -> case fromPersistValue v_apYwv of
                  Left e_apYww -> Left e_apYww
                  Right s'_apYwx
                    -> case (reads $ (unpack s'_apYwx)) of
                         ((x_apYwy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apYwy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apYwu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apYwx)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apYEG v_apYEH
             -> case fromPersistValue v_apYEH of
                  Left e_apYEI -> Left e_apYEI
                  Right s'_apYEJ
                    -> case (reads $ (unpack s'_apYEJ)) of
                         ((x_apYEK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apYEK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apYEG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apYEJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqa2v v_aqa2w
             -> case fromPersistValue v_aqa2w of
                  Left e_aqa2x -> Left e_aqa2x
                  Right s'_aqa2y
                    -> case (reads $ (unpack s'_aqa2y)) of
                         ((x_aqa2z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqa2z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqa2v)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqa2y)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqaa0 v_aqaa1
             -> case fromPersistValue v_aqaa1 of
                  Left e_aqaa2 -> Left e_aqaa2
                  Right s'_aqaa3
                    -> case (reads $ (unpack s'_aqaa3)) of
                         ((x_aqaa4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqaa4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqaa0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqaa3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqaic v_aqaid
             -> case fromPersistValue v_aqaid of
                  Left e_aqaie -> Left e_aqaie
                  Right s'_aqaif
                    -> case (reads $ (unpack s'_aqaif)) of
                         ((x_aqaig, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqaig
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqaic)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqaif)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqaCK v_aqaCL
             -> case fromPersistValue v_aqaCL of
                  Left e_aqaCM -> Left e_aqaCM
                  Right s'_aqaCN
                    -> case (reads $ (unpack s'_aqaCN)) of
                         ((x_aqaCO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqaCO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqaCK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqaCN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqaKf v_aqaKg
             -> case fromPersistValue v_aqaKg of
                  Left e_aqaKh -> Left e_aqaKh
                  Right s'_aqaKi
                    -> case (reads $ (unpack s'_aqaKi)) of
                         ((x_aqaKj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqaKj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqaKf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqaKi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqaSr v_aqaSs
             -> case fromPersistValue v_aqaSs of
                  Left e_aqaSt -> Left e_aqaSt
                  Right s'_aqaSu
                    -> case (reads $ (unpack s'_aqaSu)) of
                         ((x_aqaSv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqaSv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqaSr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqaSu)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqhQt v_aqhQu
             -> case fromPersistValue v_aqhQu of
                  Left e_aqhQv -> Left e_aqhQv
                  Right s'_aqhQw
                    -> case (reads $ (unpack s'_aqhQw)) of
                         ((x_aqhQx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqhQx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqhQt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqhQw)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqhXY v_aqhXZ
             -> case fromPersistValue v_aqhXZ of
                  Left e_aqhY0 -> Left e_aqhY0
                  Right s'_aqhY1
                    -> case (reads $ (unpack s'_aqhY1)) of
                         ((x_aqhY2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqhY2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqhXY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqhY1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqi6a v_aqi6b
             -> case fromPersistValue v_aqi6b of
                  Left e_aqi6c -> Left e_aqi6c
                  Right s'_aqi6d
                    -> case (reads $ (unpack s'_aqi6d)) of
                         ((x_aqi6e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqi6e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqi6a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqi6d)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqp43 v_aqp44
             -> case fromPersistValue v_aqp44 of
                  Left e_aqp45 -> Left e_aqp45
                  Right s'_aqp46
                    -> case (reads $ (unpack s'_aqp46)) of
                         ((x_aqp47, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqp47
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqp43)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqp46)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqpby v_aqpbz
             -> case fromPersistValue v_aqpbz of
                  Left e_aqpbA -> Left e_aqpbA
                  Right s'_aqpbB
                    -> case (reads $ (unpack s'_aqpbB)) of
                         ((x_aqpbC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqpbC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqpby)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqpbB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqpjK v_aqpjL
             -> case fromPersistValue v_aqpjL of
                  Left e_aqpjM -> Left e_aqpjM
                  Right s'_aqpjN
                    -> case (reads $ (unpack s'_aqpjN)) of
                         ((x_aqpjO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqpjO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqpjK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqpjN)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqwhD v_aqwhE
             -> case fromPersistValue v_aqwhE of
                  Left e_aqwhF -> Left e_aqwhF
                  Right s'_aqwhG
                    -> case (reads $ (unpack s'_aqwhG)) of
                         ((x_aqwhH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqwhH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqwhD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqwhG)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqwp8 v_aqwp9
             -> case fromPersistValue v_aqwp9 of
                  Left e_aqwpa -> Left e_aqwpa
                  Right s'_aqwpb
                    -> case (reads $ (unpack s'_aqwpb)) of
                         ((x_aqwpc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqwpc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqwp8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqwpb)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqwxk v_aqwxl
             -> case fromPersistValue v_aqwxl of
                  Left e_aqwxm -> Left e_aqwxm
                  Right s'_aqwxn
                    -> case (reads $ (unpack s'_aqwxn)) of
                         ((x_aqwxo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqwxo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqwxk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqwxn)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqDvd v_aqDve
             -> case fromPersistValue v_aqDve of
                  Left e_aqDvf -> Left e_aqDvf
                  Right s'_aqDvg
                    -> case (reads $ (unpack s'_aqDvg)) of
                         ((x_aqDvh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqDvh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqDvd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqDvg)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqDCI v_aqDCJ
             -> case fromPersistValue v_aqDCJ of
                  Left e_aqDCK -> Left e_aqDCK
                  Right s'_aqDCL
                    -> case (reads $ (unpack s'_aqDCL)) of
                         ((x_aqDCM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqDCM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqDCI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqDCL)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqDKU v_aqDKV
             -> case fromPersistValue v_aqDKV of
                  Left e_aqDKW -> Left e_aqDKW
                  Right s'_aqDKX
                    -> case (reads $ (unpack s'_aqDKX)) of
                         ((x_aqDKY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqDKY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqDKU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqDKX)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqKIm v_aqKIn
             -> case fromPersistValue v_aqKIn of
                  Left e_aqKIo -> Left e_aqKIo
                  Right s'_aqKIp
                    -> case (reads $ (unpack s'_aqKIp)) of
                         ((x_aqKIq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqKIq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqKIm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqKIp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqKPR v_aqKPS
             -> case fromPersistValue v_aqKPS of
                  Left e_aqKPT -> Left e_aqKPT
                  Right s'_aqKPU
                    -> case (reads $ (unpack s'_aqKPU)) of
                         ((x_aqKPV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqKPV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqKPR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqKPU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqKY3 v_aqKY4
             -> case fromPersistValue v_aqKY4 of
                  Left e_aqKY5 -> Left e_aqKY5
                  Right s'_aqKY6
                    -> case (reads $ (unpack s'_aqKY6)) of
                         ((x_aqKY7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqKY7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqKY3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqKY6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqRVv v_aqRVw
             -> case fromPersistValue v_aqRVw of
                  Left e_aqRVx -> Left e_aqRVx
                  Right s'_aqRVy
                    -> case (reads $ (unpack s'_aqRVy)) of
                         ((x_aqRVz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqRVz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqRVv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqRVy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqS30 v_aqS31
             -> case fromPersistValue v_aqS31 of
                  Left e_aqS32 -> Left e_aqS32
                  Right s'_aqS33
                    -> case (reads $ (unpack s'_aqS33)) of
                         ((x_aqS34, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqS34
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqS30)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqS33)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqSbc v_aqSbd
             -> case fromPersistValue v_aqSbd of
                  Left e_aqSbe -> Left e_aqSbe
                  Right s'_aqSbf
                    -> case (reads $ (unpack s'_aqSbf)) of
                         ((x_aqSbg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqSbg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqSbc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqSbf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqZ8E v_aqZ8F
             -> case fromPersistValue v_aqZ8F of
                  Left e_aqZ8G -> Left e_aqZ8G
                  Right s'_aqZ8H
                    -> case (reads $ (unpack s'_aqZ8H)) of
                         ((x_aqZ8I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqZ8I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqZ8E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqZ8H)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqZg9 v_aqZga
             -> case fromPersistValue v_aqZga of
                  Left e_aqZgb -> Left e_aqZgb
                  Right s'_aqZgc
                    -> case (reads $ (unpack s'_aqZgc)) of
                         ((x_aqZgd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqZgd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqZg9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqZgc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqZol v_aqZom
             -> case fromPersistValue v_aqZom of
                  Left e_aqZon -> Left e_aqZon
                  Right s'_aqZoo
                    -> case (reads $ (unpack s'_aqZoo)) of
                         ((x_aqZop, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqZop
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqZol)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqZoo)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar6lN v_ar6lO
             -> case fromPersistValue v_ar6lO of
                  Left e_ar6lP -> Left e_ar6lP
                  Right s'_ar6lQ
                    -> case (reads $ (unpack s'_ar6lQ)) of
                         ((x_ar6lR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar6lR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar6lN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar6lQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar6ti v_ar6tj
             -> case fromPersistValue v_ar6tj of
                  Left e_ar6tk -> Left e_ar6tk
                  Right s'_ar6tl
                    -> case (reads $ (unpack s'_ar6tl)) of
                         ((x_ar6tm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar6tm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar6ti)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar6tl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar6Bu v_ar6Bv
             -> case fromPersistValue v_ar6Bv of
                  Left e_ar6Bw -> Left e_ar6Bw
                  Right s'_ar6Bx
                    -> case (reads $ (unpack s'_ar6Bx)) of
                         ((x_ar6By, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar6By
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar6Bu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar6Bx)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ardFl v_ardFm
             -> case fromPersistValue v_ardFm of
                  Left e_ardFn -> Left e_ardFn
                  Right s'_ardFo
                    -> case (reads $ (unpack s'_ardFo)) of
                         ((x_ardFp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ardFp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ardFl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ardFo)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ardMQ v_ardMR
             -> case fromPersistValue v_ardMR of
                  Left e_ardMS -> Left e_ardMS
                  Right s'_ardMT
                    -> case (reads $ (unpack s'_ardMT)) of
                         ((x_ardMU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ardMU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ardMQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ardMT)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ardV2 v_ardV3
             -> case fromPersistValue v_ardV3 of
                  Left e_ardV4 -> Left e_ardV4
                  Right s'_ardV5
                    -> case (reads $ (unpack s'_ardV5)) of
                         ((x_ardV6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ardV6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ardV2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ardV5)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arkYT v_arkYU
             -> case fromPersistValue v_arkYU of
                  Left e_arkYV -> Left e_arkYV
                  Right s'_arkYW
                    -> case (reads $ (unpack s'_arkYW)) of
                         ((x_arkYX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arkYX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arkYT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arkYW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arl6o v_arl6p
             -> case fromPersistValue v_arl6p of
                  Left e_arl6q -> Left e_arl6q
                  Right s'_arl6r
                    -> case (reads $ (unpack s'_arl6r)) of
                         ((x_arl6s, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arl6s
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arl6o)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arl6r)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arleA v_arleB
             -> case fromPersistValue v_arleB of
                  Left e_arleC -> Left e_arleC
                  Right s'_arleD
                    -> case (reads $ (unpack s'_arleD)) of
                         ((x_arleE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arleE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arleA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arleD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arwVy v_arwVz
             -> case fromPersistValue v_arwVz of
                  Left e_arwVA -> Left e_arwVA
                  Right s'_arwVB
                    -> case (reads $ (unpack s'_arwVB)) of
                         ((x_arwVC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arwVC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arwVy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arwVB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arx33 v_arx34
             -> case fromPersistValue v_arx34 of
                  Left e_arx35 -> Left e_arx35
                  Right s'_arx36
                    -> case (reads $ (unpack s'_arx36)) of
                         ((x_arx37, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arx37
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arx33)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arx36)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arxbf v_arxbg
             -> case fromPersistValue v_arxbg of
                  Left e_arxbh -> Left e_arxbh
                  Right s'_arxbi
                    -> case (reads $ (unpack s'_arxbi)) of
                         ((x_arxbj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arxbj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arxbf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arxbi)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arxwp v_arxwq
             -> case fromPersistValue v_arxwq of
                  Left e_arxwr -> Left e_arxwr
                  Right s'_arxws
                    -> case (reads $ (unpack s'_arxws)) of
                         ((x_arxwt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arxwt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arxwp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arxws)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arxDU v_arxDV
             -> case fromPersistValue v_arxDV of
                  Left e_arxDW -> Left e_arxDW
                  Right s'_arxDX
                    -> case (reads $ (unpack s'_arxDX)) of
                         ((x_arxDY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arxDY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arxDU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arxDX)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arxM6 v_arxM7
             -> case fromPersistValue v_arxM7 of
                  Left e_arxM8 -> Left e_arxM8
                  Right s'_arxM9
                    -> case (reads $ (unpack s'_arxM9)) of
                         ((x_arxMa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arxMa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arxM6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arxM9)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arJt4 v_arJt5
             -> case fromPersistValue v_arJt5 of
                  Left e_arJt6 -> Left e_arJt6
                  Right s'_arJt7
                    -> case (reads $ (unpack s'_arJt7)) of
                         ((x_arJt8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arJt8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arJt4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arJt7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arJAz v_arJAA
             -> case fromPersistValue v_arJAA of
                  Left e_arJAB -> Left e_arJAB
                  Right s'_arJAC
                    -> case (reads $ (unpack s'_arJAC)) of
                         ((x_arJAD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arJAD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arJAz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arJAC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arJIL v_arJIM
             -> case fromPersistValue v_arJIM of
                  Left e_arJIN -> Left e_arJIN
                  Right s'_arJIO
                    -> case (reads $ (unpack s'_arJIO)) of
                         ((x_arJIP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arJIP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arJIL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arJIO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arK3V v_arK3W
             -> case fromPersistValue v_arK3W of
                  Left e_arK3X -> Left e_arK3X
                  Right s'_arK3Y
                    -> case (reads $ (unpack s'_arK3Y)) of
                         ((x_arK3Z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arK3Z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arK3V)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arK3Y)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arKbq v_arKbr
             -> case fromPersistValue v_arKbr of
                  Left e_arKbs -> Left e_arKbs
                  Right s'_arKbt
                    -> case (reads $ (unpack s'_arKbt)) of
                         ((x_arKbu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arKbu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arKbq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arKbt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arKjC v_arKjD
             -> case fromPersistValue v_arKjD of
                  Left e_arKjE -> Left e_arKjE
                  Right s'_arKjF
                    -> case (reads $ (unpack s'_arKjF)) of
                         ((x_arKjG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arKjG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arKjC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arKjF)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arW0A v_arW0B
             -> case fromPersistValue v_arW0B of
                  Left e_arW0C -> Left e_arW0C
                  Right s'_arW0D
                    -> case (reads $ (unpack s'_arW0D)) of
                         ((x_arW0E, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arW0E
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arW0A)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arW0D)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arW85 v_arW86
             -> case fromPersistValue v_arW86 of
                  Left e_arW87 -> Left e_arW87
                  Right s'_arW88
                    -> case (reads $ (unpack s'_arW88)) of
                         ((x_arW89, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arW89
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arW85)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arW88)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arWgh v_arWgi
             -> case fromPersistValue v_arWgi of
                  Left e_arWgj -> Left e_arWgj
                  Right s'_arWgk
                    -> case (reads $ (unpack s'_arWgk)) of
                         ((x_arWgl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arWgl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arWgh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arWgk)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arWBr v_arWBs
             -> case fromPersistValue v_arWBs of
                  Left e_arWBt -> Left e_arWBt
                  Right s'_arWBu
                    -> case (reads $ (unpack s'_arWBu)) of
                         ((x_arWBv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arWBv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arWBr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arWBu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arWIW v_arWIX
             -> case fromPersistValue v_arWIX of
                  Left e_arWIY -> Left e_arWIY
                  Right s'_arWIZ
                    -> case (reads $ (unpack s'_arWIZ)) of
                         ((x_arWJ0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arWJ0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arWIW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arWIZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arWR8 v_arWR9
             -> case fromPersistValue v_arWR9 of
                  Left e_arWRa -> Left e_arWRa
                  Right s'_arWRb
                    -> case (reads $ (unpack s'_arWRb)) of
                         ((x_arWRc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arWRc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arWR8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arWRb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as8y6 v_as8y7
             -> case fromPersistValue v_as8y7 of
                  Left e_as8y8 -> Left e_as8y8
                  Right s'_as8y9
                    -> case (reads $ (unpack s'_as8y9)) of
                         ((x_as8ya, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as8ya
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as8y6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as8y9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as8FB v_as8FC
             -> case fromPersistValue v_as8FC of
                  Left e_as8FD -> Left e_as8FD
                  Right s'_as8FE
                    -> case (reads $ (unpack s'_as8FE)) of
                         ((x_as8FF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as8FF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as8FB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as8FE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as8NN v_as8NO
             -> case fromPersistValue v_as8NO of
                  Left e_as8NP -> Left e_as8NP
                  Right s'_as8NQ
                    -> case (reads $ (unpack s'_as8NQ)) of
                         ((x_as8NR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as8NR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as8NN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as8NQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as98X v_as98Y
             -> case fromPersistValue v_as98Y of
                  Left e_as98Z -> Left e_as98Z
                  Right s'_as990
                    -> case (reads $ (unpack s'_as990)) of
                         ((x_as991, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as991
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as98X)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as990)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as9gs v_as9gt
             -> case fromPersistValue v_as9gt of
                  Left e_as9gu -> Left e_as9gu
                  Right s'_as9gv
                    -> case (reads $ (unpack s'_as9gv)) of
                         ((x_as9gw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as9gw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as9gs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as9gv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as9oE v_as9oF
             -> case fromPersistValue v_as9oF of
                  Left e_as9oG -> Left e_as9oG
                  Right s'_as9oH
                    -> case (reads $ (unpack s'_as9oH)) of
                         ((x_as9oI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as9oI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as9oE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as9oH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asl5C v_asl5D
             -> case fromPersistValue v_asl5D of
                  Left e_asl5E -> Left e_asl5E
                  Right s'_asl5F
                    -> case (reads $ (unpack s'_asl5F)) of
                         ((x_asl5G, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asl5G
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asl5C)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asl5F)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asld7 v_asld8
             -> case fromPersistValue v_asld8 of
                  Left e_asld9 -> Left e_asld9
                  Right s'_aslda
                    -> case (reads $ (unpack s'_aslda)) of
                         ((x_asldb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asldb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asld7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aslda)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asllj v_asllk
             -> case fromPersistValue v_asllk of
                  Left e_aslll -> Left e_aslll
                  Right s'_asllm
                    -> case (reads $ (unpack s'_asllm)) of
                         ((x_aslln, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aslln
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asllj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asllm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
