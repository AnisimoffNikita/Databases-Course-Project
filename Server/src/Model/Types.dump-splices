/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ap7D v_ap7E
             -> case fromPersistValue v_ap7E of
                  Left e_ap7F -> Left e_ap7F
                  Right s'_ap7G
                    -> case (reads $ (unpack s'_ap7G)) of
                         ((x_ap7H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ap7H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ap7D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ap7G)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar23 v_ar24
             -> case fromPersistValue v_ar24 of
                  Left e_ar25 -> Left e_ar25
                  Right s'_ar26
                    -> case (reads $ (unpack s'_ar26)) of
                         ((x_ar27, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar27
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar23)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar26)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_araC v_araD
             -> case fromPersistValue v_araD of
                  Left e_araE -> Left e_araE
                  Right s'_araF
                    -> case (reads $ (unpack s'_araF)) of
                         ((x_araG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_araG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_araC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_araF)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aQQc v_aQQd
             -> case fromPersistValue v_aQQd of
                  Left e_aQQe -> Left e_aQQe
                  Right s'_aQQf
                    -> case (reads $ (unpack s'_aQQf)) of
                         ((x_aQQg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aQQg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aQQc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aQQf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aQXH v_aQXI
             -> case fromPersistValue v_aQXI of
                  Left e_aQXJ -> Left e_aQXJ
                  Right s'_aQXK
                    -> case (reads $ (unpack s'_aQXK)) of
                         ((x_aQXL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aQXL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aQXH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aQXK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aR5T v_aR5U
             -> case fromPersistValue v_aR5U of
                  Left e_aR5V -> Left e_aR5V
                  Right s'_aR5W
                    -> case (reads $ (unpack s'_aR5W)) of
                         ((x_aR5X, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aR5X
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aR5T)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aR5W)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aRqr v_aRqs
             -> case fromPersistValue v_aRqs of
                  Left e_aRqt -> Left e_aRqt
                  Right s'_aRqu
                    -> case (reads $ (unpack s'_aRqu)) of
                         ((x_aRqv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aRqv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aRqr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aRqu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aRxW v_aRxX
             -> case fromPersistValue v_aRxX of
                  Left e_aRxY -> Left e_aRxY
                  Right s'_aRxZ
                    -> case (reads $ (unpack s'_aRxZ)) of
                         ((x_aRy0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aRy0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aRxW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aRxZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aRG8 v_aRG9
             -> case fromPersistValue v_aRG9 of
                  Left e_aRGa -> Left e_aRGa
                  Right s'_aRGb
                    -> case (reads $ (unpack s'_aRGb)) of
                         ((x_aRGc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aRGc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aRG8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aRGb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a10RN v_a10RO
             -> case fromPersistValue v_a10RO of
                  Left e_a10RP -> Left e_a10RP
                  Right s'_a10RQ
                    -> case (reads $ (unpack s'_a10RQ)) of
                         ((x_a10RR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a10RR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a10RN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a10RQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a10Zi v_a10Zj
             -> case fromPersistValue v_a10Zj of
                  Left e_a10Zk -> Left e_a10Zk
                  Right s'_a10Zl
                    -> case (reads $ (unpack s'_a10Zl)) of
                         ((x_a10Zm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a10Zm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a10Zi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a10Zl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a117u v_a117v
             -> case fromPersistValue v_a117v of
                  Left e_a117w -> Left e_a117w
                  Right s'_a117x
                    -> case (reads $ (unpack s'_a117x)) of
                         ((x_a117y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a117y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a117u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a117x)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a11rB v_a11rC
             -> case fromPersistValue v_a11rC of
                  Left e_a11rD -> Left e_a11rD
                  Right s'_a11rE
                    -> case (reads $ (unpack s'_a11rE)) of
                         ((x_a11rF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a11rF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a11rB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a11rE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a11z6 v_a11z7
             -> case fromPersistValue v_a11z7 of
                  Left e_a11z8 -> Left e_a11z8
                  Right s'_a11z9
                    -> case (reads $ (unpack s'_a11z9)) of
                         ((x_a11za, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a11za
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a11z6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a11z9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a11Hi v_a11Hj
             -> case fromPersistValue v_a11Hj of
                  Left e_a11Hk -> Left e_a11Hk
                  Right s'_a11Hl
                    -> case (reads $ (unpack s'_a11Hl)) of
                         ((x_a11Hm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a11Hm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a11Hi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a11Hl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1d2d v_a1d2e
             -> case fromPersistValue v_a1d2e of
                  Left e_a1d2f -> Left e_a1d2f
                  Right s'_a1d2g
                    -> case (reads $ (unpack s'_a1d2g)) of
                         ((x_a1d2h, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1d2h
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1d2d)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1d2g)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1d9I v_a1d9J
             -> case fromPersistValue v_a1d9J of
                  Left e_a1d9K -> Left e_a1d9K
                  Right s'_a1d9L
                    -> case (reads $ (unpack s'_a1d9L)) of
                         ((x_a1d9M, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1d9M
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1d9I)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1d9L)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1dhU v_a1dhV
             -> case fromPersistValue v_a1dhV of
                  Left e_a1dhW -> Left e_a1dhW
                  Right s'_a1dhX
                    -> case (reads $ (unpack s'_a1dhX)) of
                         ((x_a1dhY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1dhY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1dhU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1dhX)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1eYb v_a1eYc
             -> case fromPersistValue v_a1eYc of
                  Left e_a1eYd -> Left e_a1eYd
                  Right s'_a1eYe
                    -> case (reads $ (unpack s'_a1eYe)) of
                         ((x_a1eYf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1eYf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1eYb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1eYe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1f5G v_a1f5H
             -> case fromPersistValue v_a1f5H of
                  Left e_a1f5I -> Left e_a1f5I
                  Right s'_a1f5J
                    -> case (reads $ (unpack s'_a1f5J)) of
                         ((x_a1f5K, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1f5K
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1f5G)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1f5J)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1fdS v_a1fdT
             -> case fromPersistValue v_a1fdT of
                  Left e_a1fdU -> Left e_a1fdU
                  Right s'_a1fdV
                    -> case (reads $ (unpack s'_a1fdV)) of
                         ((x_a1fdW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1fdW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1fdS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1fdV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1suO v_a1suP
             -> case fromPersistValue v_a1suP of
                  Left e_a1suQ -> Left e_a1suQ
                  Right s'_a1suR
                    -> case (reads $ (unpack s'_a1suR)) of
                         ((x_a1suS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1suS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1suO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1suR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1sCj v_a1sCk
             -> case fromPersistValue v_a1sCk of
                  Left e_a1sCl -> Left e_a1sCl
                  Right s'_a1sCm
                    -> case (reads $ (unpack s'_a1sCm)) of
                         ((x_a1sCn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1sCn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1sCj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1sCm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1sKv v_a1sKw
             -> case fromPersistValue v_a1sKw of
                  Left e_a1sKx -> Left e_a1sKx
                  Right s'_a1sKy
                    -> case (reads $ (unpack s'_a1sKy)) of
                         ((x_a1sKz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1sKz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1sKv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1sKy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1t5F v_a1t5G
             -> case fromPersistValue v_a1t5G of
                  Left e_a1t5H -> Left e_a1t5H
                  Right s'_a1t5I
                    -> case (reads $ (unpack s'_a1t5I)) of
                         ((x_a1t5J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1t5J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1t5F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1t5I)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1tda v_a1tdb
             -> case fromPersistValue v_a1tdb of
                  Left e_a1tdc -> Left e_a1tdc
                  Right s'_a1tdd
                    -> case (reads $ (unpack s'_a1tdd)) of
                         ((x_a1tde, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1tde
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1tda)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1tdd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1tlm v_a1tln
             -> case fromPersistValue v_a1tln of
                  Left e_a1tlo -> Left e_a1tlo
                  Right s'_a1tlp
                    -> case (reads $ (unpack s'_a1tlp)) of
                         ((x_a1tlq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1tlq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1tlm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1tlp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1EJb v_a1EJc
             -> case fromPersistValue v_a1EJc of
                  Left e_a1EJd -> Left e_a1EJd
                  Right s'_a1EJe
                    -> case (reads $ (unpack s'_a1EJe)) of
                         ((x_a1EJf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1EJf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1EJb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1EJe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1EQG v_a1EQH
             -> case fromPersistValue v_a1EQH of
                  Left e_a1EQI -> Left e_a1EQI
                  Right s'_a1EQJ
                    -> case (reads $ (unpack s'_a1EQJ)) of
                         ((x_a1EQK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1EQK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1EQG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1EQJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1EYS v_a1EYT
             -> case fromPersistValue v_a1EYT of
                  Left e_a1EYU -> Left e_a1EYU
                  Right s'_a1EYV
                    -> case (reads $ (unpack s'_a1EYV)) of
                         ((x_a1EYW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1EYW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1EYS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1EYV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1GkZ v_a1Gl0
             -> case fromPersistValue v_a1Gl0 of
                  Left e_a1Gl1 -> Left e_a1Gl1
                  Right s'_a1Gl2
                    -> case (reads $ (unpack s'_a1Gl2)) of
                         ((x_a1Gl3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1Gl3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1GkZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1Gl2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1Gsu v_a1Gsv
             -> case fromPersistValue v_a1Gsv of
                  Left e_a1Gsw -> Left e_a1Gsw
                  Right s'_a1Gsx
                    -> case (reads $ (unpack s'_a1Gsx)) of
                         ((x_a1Gsy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1Gsy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1Gsu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1Gsx)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1GAG v_a1GAH
             -> case fromPersistValue v_a1GAH of
                  Left e_a1GAI -> Left e_a1GAI
                  Right s'_a1GAJ
                    -> case (reads $ (unpack s'_a1GAJ)) of
                         ((x_a1GAK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1GAK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1GAG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1GAJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1RYQ v_a1RYR
             -> case fromPersistValue v_a1RYR of
                  Left e_a1RYS -> Left e_a1RYS
                  Right s'_a1RYT
                    -> case (reads $ (unpack s'_a1RYT)) of
                         ((x_a1RYU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1RYU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1RYQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1RYT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1S6l v_a1S6m
             -> case fromPersistValue v_a1S6m of
                  Left e_a1S6n -> Left e_a1S6n
                  Right s'_a1S6o
                    -> case (reads $ (unpack s'_a1S6o)) of
                         ((x_a1S6p, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1S6p
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1S6l)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1S6o)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1Sex v_a1Sey
             -> case fromPersistValue v_a1Sey of
                  Left e_a1Sez -> Left e_a1Sez
                  Right s'_a1SeA
                    -> case (reads $ (unpack s'_a1SeA)) of
                         ((x_a1SeB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1SeB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1Sex)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1SeA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1Sz5 v_a1Sz6
             -> case fromPersistValue v_a1Sz6 of
                  Left e_a1Sz7 -> Left e_a1Sz7
                  Right s'_a1Sz8
                    -> case (reads $ (unpack s'_a1Sz8)) of
                         ((x_a1Sz9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1Sz9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1Sz5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1Sz8)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1SGA v_a1SGB
             -> case fromPersistValue v_a1SGB of
                  Left e_a1SGC -> Left e_a1SGC
                  Right s'_a1SGD
                    -> case (reads $ (unpack s'_a1SGD)) of
                         ((x_a1SGE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1SGE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1SGA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1SGD)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1SOM v_a1SON
             -> case fromPersistValue v_a1SON of
                  Left e_a1SOO -> Left e_a1SOO
                  Right s'_a1SOP
                    -> case (reads $ (unpack s'_a1SOP)) of
                         ((x_a1SOQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1SOQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1SOM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1SOP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1ZIZ v_a1ZJ0
             -> case fromPersistValue v_a1ZJ0 of
                  Left e_a1ZJ1 -> Left e_a1ZJ1
                  Right s'_a1ZJ2
                    -> case (reads $ (unpack s'_a1ZJ2)) of
                         ((x_a1ZJ3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1ZJ3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1ZIZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1ZJ2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1ZQu v_a1ZQv
             -> case fromPersistValue v_a1ZQv of
                  Left e_a1ZQw -> Left e_a1ZQw
                  Right s'_a1ZQx
                    -> case (reads $ (unpack s'_a1ZQx)) of
                         ((x_a1ZQy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1ZQy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1ZQu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1ZQx)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a1ZYG v_a1ZYH
             -> case fromPersistValue v_a1ZYH of
                  Left e_a1ZYI -> Left e_a1ZYI
                  Right s'_a1ZYJ
                    -> case (reads $ (unpack s'_a1ZYJ)) of
                         ((x_a1ZYK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a1ZYK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a1ZYG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a1ZYJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a26SW v_a26SX
             -> case fromPersistValue v_a26SX of
                  Left e_a26SY -> Left e_a26SY
                  Right s'_a26SZ
                    -> case (reads $ (unpack s'_a26SZ)) of
                         ((x_a26T0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a26T0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a26SW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a26SZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a270r v_a270s
             -> case fromPersistValue v_a270s of
                  Left e_a270t -> Left e_a270t
                  Right s'_a270u
                    -> case (reads $ (unpack s'_a270u)) of
                         ((x_a270v, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a270v
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a270r)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a270u)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a278D v_a278E
             -> case fromPersistValue v_a278E of
                  Left e_a278F -> Left e_a278F
                  Right s'_a278G
                    -> case (reads $ (unpack s'_a278G)) of
                         ((x_a278H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a278H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a278D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a278G)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2ixM v_a2ixN
             -> case fromPersistValue v_a2ixN of
                  Left e_a2ixO -> Left e_a2ixO
                  Right s'_a2ixP
                    -> case (reads $ (unpack s'_a2ixP)) of
                         ((x_a2ixQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2ixQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2ixM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2ixP)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2iFh v_a2iFi
             -> case fromPersistValue v_a2iFi of
                  Left e_a2iFj -> Left e_a2iFj
                  Right s'_a2iFk
                    -> case (reads $ (unpack s'_a2iFk)) of
                         ((x_a2iFl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2iFl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2iFh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2iFk)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2iNt v_a2iNu
             -> case fromPersistValue v_a2iNu of
                  Left e_a2iNv -> Left e_a2iNv
                  Right s'_a2iNw
                    -> case (reads $ (unpack s'_a2iNw)) of
                         ((x_a2iNx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2iNx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2iNt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2iNw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2j81 v_a2j82
             -> case fromPersistValue v_a2j82 of
                  Left e_a2j83 -> Left e_a2j83
                  Right s'_a2j84
                    -> case (reads $ (unpack s'_a2j84)) of
                         ((x_a2j85, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2j85
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2j81)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2j84)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2jfw v_a2jfx
             -> case fromPersistValue v_a2jfx of
                  Left e_a2jfy -> Left e_a2jfy
                  Right s'_a2jfz
                    -> case (reads $ (unpack s'_a2jfz)) of
                         ((x_a2jfA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2jfA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2jfw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2jfz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2jnI v_a2jnJ
             -> case fromPersistValue v_a2jnJ of
                  Left e_a2jnK -> Left e_a2jnK
                  Right s'_a2jnL
                    -> case (reads $ (unpack s'_a2jnL)) of
                         ((x_a2jnM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2jnM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2jnI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2jnL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2uMR v_a2uMS
             -> case fromPersistValue v_a2uMS of
                  Left e_a2uMT -> Left e_a2uMT
                  Right s'_a2uMU
                    -> case (reads $ (unpack s'_a2uMU)) of
                         ((x_a2uMV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2uMV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2uMR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2uMU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2uUm v_a2uUn
             -> case fromPersistValue v_a2uUn of
                  Left e_a2uUo -> Left e_a2uUo
                  Right s'_a2uUp
                    -> case (reads $ (unpack s'_a2uUp)) of
                         ((x_a2uUq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2uUq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2uUm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2uUp)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2v2y v_a2v2z
             -> case fromPersistValue v_a2v2z of
                  Left e_a2v2A -> Left e_a2v2A
                  Right s'_a2v2B
                    -> case (reads $ (unpack s'_a2v2B)) of
                         ((x_a2v2C, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2v2C
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2v2y)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2v2B)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2JHE v_a2JHF
             -> case fromPersistValue v_a2JHF of
                  Left e_a2JHG -> Left e_a2JHG
                  Right s'_a2JHH
                    -> case (reads $ (unpack s'_a2JHH)) of
                         ((x_a2JHI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2JHI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2JHE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2JHH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2JP9 v_a2JPa
             -> case fromPersistValue v_a2JPa of
                  Left e_a2JPb -> Left e_a2JPb
                  Right s'_a2JPc
                    -> case (reads $ (unpack s'_a2JPc)) of
                         ((x_a2JPd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2JPd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2JP9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2JPc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2JXl v_a2JXm
             -> case fromPersistValue v_a2JXm of
                  Left e_a2JXn -> Left e_a2JXn
                  Right s'_a2JXo
                    -> case (reads $ (unpack s'_a2JXo)) of
                         ((x_a2JXp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2JXp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2JXl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2JXo)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2VvF v_a2VvG
             -> case fromPersistValue v_a2VvG of
                  Left e_a2VvH -> Left e_a2VvH
                  Right s'_a2VvI
                    -> case (reads $ (unpack s'_a2VvI)) of
                         ((x_a2VvJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2VvJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2VvF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2VvI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2VDa v_a2VDb
             -> case fromPersistValue v_a2VDb of
                  Left e_a2VDc -> Left e_a2VDc
                  Right s'_a2VDd
                    -> case (reads $ (unpack s'_a2VDd)) of
                         ((x_a2VDe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2VDe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2VDa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2VDd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2VLm v_a2VLn
             -> case fromPersistValue v_a2VLn of
                  Left e_a2VLo -> Left e_a2VLo
                  Right s'_a2VLp
                    -> case (reads $ (unpack s'_a2VLp)) of
                         ((x_a2VLq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2VLq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2VLm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2VLp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2XNT v_a2XNU
             -> case fromPersistValue v_a2XNU of
                  Left e_a2XNV -> Left e_a2XNV
                  Right s'_a2XNW
                    -> case (reads $ (unpack s'_a2XNW)) of
                         ((x_a2XNX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2XNX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2XNT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2XNW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2XVo v_a2XVp
             -> case fromPersistValue v_a2XVp of
                  Left e_a2XVq -> Left e_a2XVq
                  Right s'_a2XVr
                    -> case (reads $ (unpack s'_a2XVr)) of
                         ((x_a2XVs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2XVs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2XVo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2XVr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a2Y3A v_a2Y3B
             -> case fromPersistValue v_a2Y3B of
                  Left e_a2Y3C -> Left e_a2Y3C
                  Right s'_a2Y3D
                    -> case (reads $ (unpack s'_a2Y3D)) of
                         ((x_a2Y3E, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a2Y3E
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a2Y3A)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a2Y3D)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a39Mr v_a39Ms
             -> case fromPersistValue v_a39Ms of
                  Left e_a39Mt -> Left e_a39Mt
                  Right s'_a39Mu
                    -> case (reads $ (unpack s'_a39Mu)) of
                         ((x_a39Mv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a39Mv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a39Mr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a39Mu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a39TW v_a39TX
             -> case fromPersistValue v_a39TX of
                  Left e_a39TY -> Left e_a39TY
                  Right s'_a39TZ
                    -> case (reads $ (unpack s'_a39TZ)) of
                         ((x_a39U0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a39U0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a39TW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a39TZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3a28 v_a3a29
             -> case fromPersistValue v_a3a29 of
                  Left e_a3a2a -> Left e_a3a2a
                  Right s'_a3a2b
                    -> case (reads $ (unpack s'_a3a2b)) of
                         ((x_a3a2c, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3a2c
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3a28)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3a2b)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3ani v_a3anj
             -> case fromPersistValue v_a3anj of
                  Left e_a3ank -> Left e_a3ank
                  Right s'_a3anl
                    -> case (reads $ (unpack s'_a3anl)) of
                         ((x_a3anm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3anm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3ani)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3anl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3auN v_a3auO
             -> case fromPersistValue v_a3auO of
                  Left e_a3auP -> Left e_a3auP
                  Right s'_a3auQ
                    -> case (reads $ (unpack s'_a3auQ)) of
                         ((x_a3auR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3auR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3auN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3auQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3aCZ v_a3aD0
             -> case fromPersistValue v_a3aD0 of
                  Left e_a3aD1 -> Left e_a3aD1
                  Right s'_a3aD2
                    -> case (reads $ (unpack s'_a3aD2)) of
                         ((x_a3aD3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3aD3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3aCZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3aD2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3mlj v_a3mlk
             -> case fromPersistValue v_a3mlk of
                  Left e_a3mll -> Left e_a3mll
                  Right s'_a3mlm
                    -> case (reads $ (unpack s'_a3mlm)) of
                         ((x_a3mln, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3mln
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3mlj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3mlm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3msO v_a3msP
             -> case fromPersistValue v_a3msP of
                  Left e_a3msQ -> Left e_a3msQ
                  Right s'_a3msR
                    -> case (reads $ (unpack s'_a3msR)) of
                         ((x_a3msS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3msS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3msO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3msR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3mB0 v_a3mB1
             -> case fromPersistValue v_a3mB1 of
                  Left e_a3mB2 -> Left e_a3mB2
                  Right s'_a3mB3
                    -> case (reads $ (unpack s'_a3mB3)) of
                         ((x_a3mB4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3mB4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3mB0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3mB3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3mWa v_a3mWb
             -> case fromPersistValue v_a3mWb of
                  Left e_a3mWc -> Left e_a3mWc
                  Right s'_a3mWd
                    -> case (reads $ (unpack s'_a3mWd)) of
                         ((x_a3mWe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3mWe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3mWa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3mWd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3n3F v_a3n3G
             -> case fromPersistValue v_a3n3G of
                  Left e_a3n3H -> Left e_a3n3H
                  Right s'_a3n3I
                    -> case (reads $ (unpack s'_a3n3I)) of
                         ((x_a3n3J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3n3J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3n3F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3n3I)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3nbR v_a3nbS
             -> case fromPersistValue v_a3nbS of
                  Left e_a3nbT -> Left e_a3nbT
                  Right s'_a3nbU
                    -> case (reads $ (unpack s'_a3nbU)) of
                         ((x_a3nbV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3nbV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3nbR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3nbU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3ywM v_a3ywN
             -> case fromPersistValue v_a3ywN of
                  Left e_a3ywO -> Left e_a3ywO
                  Right s'_a3ywP
                    -> case (reads $ (unpack s'_a3ywP)) of
                         ((x_a3ywQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3ywQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3ywM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3ywP)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3yEh v_a3yEi
             -> case fromPersistValue v_a3yEi of
                  Left e_a3yEj -> Left e_a3yEj
                  Right s'_a3yEk
                    -> case (reads $ (unpack s'_a3yEk)) of
                         ((x_a3yEl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3yEl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3yEh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3yEk)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3yMt v_a3yMu
             -> case fromPersistValue v_a3yMu of
                  Left e_a3yMv -> Left e_a3yMv
                  Right s'_a3yMw
                    -> case (reads $ (unpack s'_a3yMw)) of
                         ((x_a3yMx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3yMx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3yMt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3yMw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3ze3 v_a3ze4
             -> case fromPersistValue v_a3ze4 of
                  Left e_a3ze5 -> Left e_a3ze5
                  Right s'_a3ze6
                    -> case (reads $ (unpack s'_a3ze6)) of
                         ((x_a3ze7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3ze7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3ze3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3ze6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3zly v_a3zlz
             -> case fromPersistValue v_a3zlz of
                  Left e_a3zlA -> Left e_a3zlA
                  Right s'_a3zlB
                    -> case (reads $ (unpack s'_a3zlB)) of
                         ((x_a3zlC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3zlC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3zly)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3zlB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3ztK v_a3ztL
             -> case fromPersistValue v_a3ztL of
                  Left e_a3ztM -> Left e_a3ztM
                  Right s'_a3ztN
                    -> case (reads $ (unpack s'_a3ztN)) of
                         ((x_a3ztO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3ztO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3ztK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3ztN)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3KOI v_a3KOJ
             -> case fromPersistValue v_a3KOJ of
                  Left e_a3KOK -> Left e_a3KOK
                  Right s'_a3KOL
                    -> case (reads $ (unpack s'_a3KOL)) of
                         ((x_a3KOM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3KOM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3KOI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3KOL)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3KWd v_a3KWe
             -> case fromPersistValue v_a3KWe of
                  Left e_a3KWf -> Left e_a3KWf
                  Right s'_a3KWg
                    -> case (reads $ (unpack s'_a3KWg)) of
                         ((x_a3KWh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3KWh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3KWd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3KWg)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3L4p v_a3L4q
             -> case fromPersistValue v_a3L4q of
                  Left e_a3L4r -> Left e_a3L4r
                  Right s'_a3L4s
                    -> case (reads $ (unpack s'_a3L4s)) of
                         ((x_a3L4t, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3L4t
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3L4p)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3L4s)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3LoX v_a3LoY
             -> case fromPersistValue v_a3LoY of
                  Left e_a3LoZ -> Left e_a3LoZ
                  Right s'_a3Lp0
                    -> case (reads $ (unpack s'_a3Lp0)) of
                         ((x_a3Lp1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Lp1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3LoX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Lp0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Lws v_a3Lwt
             -> case fromPersistValue v_a3Lwt of
                  Left e_a3Lwu -> Left e_a3Lwu
                  Right s'_a3Lwv
                    -> case (reads $ (unpack s'_a3Lwv)) of
                         ((x_a3Lww, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Lww
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Lws)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Lwv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3LEE v_a3LEF
             -> case fromPersistValue v_a3LEF of
                  Left e_a3LEG -> Left e_a3LEG
                  Right s'_a3LEH
                    -> case (reads $ (unpack s'_a3LEH)) of
                         ((x_a3LEI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3LEI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3LEE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3LEH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3WZz v_a3WZA
             -> case fromPersistValue v_a3WZA of
                  Left e_a3WZB -> Left e_a3WZB
                  Right s'_a3WZC
                    -> case (reads $ (unpack s'_a3WZC)) of
                         ((x_a3WZD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3WZD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3WZz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3WZC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3X74 v_a3X75
             -> case fromPersistValue v_a3X75 of
                  Left e_a3X76 -> Left e_a3X76
                  Right s'_a3X77
                    -> case (reads $ (unpack s'_a3X77)) of
                         ((x_a3X78, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3X78
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3X74)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3X77)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3Xfg v_a3Xfh
             -> case fromPersistValue v_a3Xfh of
                  Left e_a3Xfi -> Left e_a3Xfi
                  Right s'_a3Xfj
                    -> case (reads $ (unpack s'_a3Xfj)) of
                         ((x_a3Xfk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3Xfk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3Xfg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3Xfj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3XzO v_a3XzP
             -> case fromPersistValue v_a3XzP of
                  Left e_a3XzQ -> Left e_a3XzQ
                  Right s'_a3XzR
                    -> case (reads $ (unpack s'_a3XzR)) of
                         ((x_a3XzS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3XzS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3XzO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3XzR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3XHj v_a3XHk
             -> case fromPersistValue v_a3XHk of
                  Left e_a3XHl -> Left e_a3XHl
                  Right s'_a3XHm
                    -> case (reads $ (unpack s'_a3XHm)) of
                         ((x_a3XHn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3XHn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3XHj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3XHm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a3XPv v_a3XPw
             -> case fromPersistValue v_a3XPw of
                  Left e_a3XPx -> Left e_a3XPx
                  Right s'_a3XPy
                    -> case (reads $ (unpack s'_a3XPy)) of
                         ((x_a3XPz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a3XPz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a3XPv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a3XPy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a49aq v_a49ar
             -> case fromPersistValue v_a49ar of
                  Left e_a49as -> Left e_a49as
                  Right s'_a49at
                    -> case (reads $ (unpack s'_a49at)) of
                         ((x_a49au, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a49au
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a49aq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a49at)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a49hV v_a49hW
             -> case fromPersistValue v_a49hW of
                  Left e_a49hX -> Left e_a49hX
                  Right s'_a49hY
                    -> case (reads $ (unpack s'_a49hY)) of
                         ((x_a49hZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a49hZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a49hV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a49hY)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a49q7 v_a49q8
             -> case fromPersistValue v_a49q8 of
                  Left e_a49q9 -> Left e_a49q9
                  Right s'_a49qa
                    -> case (reads $ (unpack s'_a49qa)) of
                         ((x_a49qb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a49qb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a49q7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a49qa)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a49KF v_a49KG
             -> case fromPersistValue v_a49KG of
                  Left e_a49KH -> Left e_a49KH
                  Right s'_a49KI
                    -> case (reads $ (unpack s'_a49KI)) of
                         ((x_a49KJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a49KJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a49KF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a49KI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a49Sa v_a49Sb
             -> case fromPersistValue v_a49Sb of
                  Left e_a49Sc -> Left e_a49Sc
                  Right s'_a49Sd
                    -> case (reads $ (unpack s'_a49Sd)) of
                         ((x_a49Se, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a49Se
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a49Sa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a49Sd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4a0m v_a4a0n
             -> case fromPersistValue v_a4a0n of
                  Left e_a4a0o -> Left e_a4a0o
                  Right s'_a4a0p
                    -> case (reads $ (unpack s'_a4a0p)) of
                         ((x_a4a0q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4a0q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4a0m)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4a0p)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4lpv v_a4lpw
             -> case fromPersistValue v_a4lpw of
                  Left e_a4lpx -> Left e_a4lpx
                  Right s'_a4lpy
                    -> case (reads $ (unpack s'_a4lpy)) of
                         ((x_a4lpz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4lpz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4lpv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4lpy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4lx0 v_a4lx1
             -> case fromPersistValue v_a4lx1 of
                  Left e_a4lx2 -> Left e_a4lx2
                  Right s'_a4lx3
                    -> case (reads $ (unpack s'_a4lx3)) of
                         ((x_a4lx4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4lx4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4lx0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4lx3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4lFc v_a4lFd
             -> case fromPersistValue v_a4lFd of
                  Left e_a4lFe -> Left e_a4lFe
                  Right s'_a4lFf
                    -> case (reads $ (unpack s'_a4lFf)) of
                         ((x_a4lFg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4lFg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4lFc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4lFf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4m47 v_a4m48
             -> case fromPersistValue v_a4m48 of
                  Left e_a4m49 -> Left e_a4m49
                  Right s'_a4m4a
                    -> case (reads $ (unpack s'_a4m4a)) of
                         ((x_a4m4b, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4m4b
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4m47)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4m4a)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4mbC v_a4mbD
             -> case fromPersistValue v_a4mbD of
                  Left e_a4mbE -> Left e_a4mbE
                  Right s'_a4mbF
                    -> case (reads $ (unpack s'_a4mbF)) of
                         ((x_a4mbG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4mbG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4mbC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4mbF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4mjO v_a4mjP
             -> case fromPersistValue v_a4mjP of
                  Left e_a4mjQ -> Left e_a4mjQ
                  Right s'_a4mjR
                    -> case (reads $ (unpack s'_a4mjR)) of
                         ((x_a4mjS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4mjS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4mjO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4mjR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4xIX v_a4xIY
             -> case fromPersistValue v_a4xIY of
                  Left e_a4xIZ -> Left e_a4xIZ
                  Right s'_a4xJ0
                    -> case (reads $ (unpack s'_a4xJ0)) of
                         ((x_a4xJ1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4xJ1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4xIX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4xJ0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4xQs v_a4xQt
             -> case fromPersistValue v_a4xQt of
                  Left e_a4xQu -> Left e_a4xQu
                  Right s'_a4xQv
                    -> case (reads $ (unpack s'_a4xQv)) of
                         ((x_a4xQw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4xQw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4xQs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4xQv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4xYE v_a4xYF
             -> case fromPersistValue v_a4xYF of
                  Left e_a4xYG -> Left e_a4xYG
                  Right s'_a4xYH
                    -> case (reads $ (unpack s'_a4xYH)) of
                         ((x_a4xYI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4xYI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4xYE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4xYH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4ykC v_a4ykD
             -> case fromPersistValue v_a4ykD of
                  Left e_a4ykE -> Left e_a4ykE
                  Right s'_a4ykF
                    -> case (reads $ (unpack s'_a4ykF)) of
                         ((x_a4ykG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4ykG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4ykC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4ykF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4ys7 v_a4ys8
             -> case fromPersistValue v_a4ys8 of
                  Left e_a4ys9 -> Left e_a4ys9
                  Right s'_a4ysa
                    -> case (reads $ (unpack s'_a4ysa)) of
                         ((x_a4ysb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4ysb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4ys7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4ysa)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4yAj v_a4yAk
             -> case fromPersistValue v_a4yAk of
                  Left e_a4yAl -> Left e_a4yAl
                  Right s'_a4yAm
                    -> case (reads $ (unpack s'_a4yAm)) of
                         ((x_a4yAn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4yAn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4yAj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4yAm)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4JZs v_a4JZt
             -> case fromPersistValue v_a4JZt of
                  Left e_a4JZu -> Left e_a4JZu
                  Right s'_a4JZv
                    -> case (reads $ (unpack s'_a4JZv)) of
                         ((x_a4JZw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4JZw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4JZs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4JZv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4K6X v_a4K6Y
             -> case fromPersistValue v_a4K6Y of
                  Left e_a4K6Z -> Left e_a4K6Z
                  Right s'_a4K70
                    -> case (reads $ (unpack s'_a4K70)) of
                         ((x_a4K71, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4K71
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4K6X)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4K70)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Kf9 v_a4Kfa
             -> case fromPersistValue v_a4Kfa of
                  Left e_a4Kfb -> Left e_a4Kfb
                  Right s'_a4Kfc
                    -> case (reads $ (unpack s'_a4Kfc)) of
                         ((x_a4Kfd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Kfd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Kf9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Kfc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4KBV v_a4KBW
             -> case fromPersistValue v_a4KBW of
                  Left e_a4KBX -> Left e_a4KBX
                  Right s'_a4KBY
                    -> case (reads $ (unpack s'_a4KBY)) of
                         ((x_a4KBZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4KBZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4KBV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4KBY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4KJq v_a4KJr
             -> case fromPersistValue v_a4KJr of
                  Left e_a4KJs -> Left e_a4KJs
                  Right s'_a4KJt
                    -> case (reads $ (unpack s'_a4KJt)) of
                         ((x_a4KJu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4KJu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4KJq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4KJt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4KRC v_a4KRD
             -> case fromPersistValue v_a4KRD of
                  Left e_a4KRE -> Left e_a4KRE
                  Right s'_a4KRF
                    -> case (reads $ (unpack s'_a4KRF)) of
                         ((x_a4KRG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4KRG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4KRC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4KRF)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4WgL v_a4WgM
             -> case fromPersistValue v_a4WgM of
                  Left e_a4WgN -> Left e_a4WgN
                  Right s'_a4WgO
                    -> case (reads $ (unpack s'_a4WgO)) of
                         ((x_a4WgP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4WgP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4WgL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4WgO)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Wog v_a4Woh
             -> case fromPersistValue v_a4Woh of
                  Left e_a4Woi -> Left e_a4Woi
                  Right s'_a4Woj
                    -> case (reads $ (unpack s'_a4Woj)) of
                         ((x_a4Wok, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Wok
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Wog)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Woj)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4Wws v_a4Wwt
             -> case fromPersistValue v_a4Wwt of
                  Left e_a4Wwu -> Left e_a4Wwu
                  Right s'_a4Wwv
                    -> case (reads $ (unpack s'_a4Wwv)) of
                         ((x_a4Www, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4Www
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4Wws)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4Wwv)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4WR0 v_a4WR1
             -> case fromPersistValue v_a4WR1 of
                  Left e_a4WR2 -> Left e_a4WR2
                  Right s'_a4WR3
                    -> case (reads $ (unpack s'_a4WR3)) of
                         ((x_a4WR4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4WR4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4WR0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4WR3)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4WYv v_a4WYw
             -> case fromPersistValue v_a4WYw of
                  Left e_a4WYx -> Left e_a4WYx
                  Right s'_a4WYy
                    -> case (reads $ (unpack s'_a4WYy)) of
                         ((x_a4WYz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4WYz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4WYv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4WYy)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a4X6H v_a4X6I
             -> case fromPersistValue v_a4X6I of
                  Left e_a4X6J -> Left e_a4X6J
                  Right s'_a4X6K
                    -> case (reads $ (unpack s'_a4X6K)) of
                         ((x_a4X6L, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a4X6L
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a4X6H)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a4X6K)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a58vQ v_a58vR
             -> case fromPersistValue v_a58vR of
                  Left e_a58vS -> Left e_a58vS
                  Right s'_a58vT
                    -> case (reads $ (unpack s'_a58vT)) of
                         ((x_a58vU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a58vU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a58vQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a58vT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a58Dl v_a58Dm
             -> case fromPersistValue v_a58Dm of
                  Left e_a58Dn -> Left e_a58Dn
                  Right s'_a58Do
                    -> case (reads $ (unpack s'_a58Do)) of
                         ((x_a58Dp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a58Dp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a58Dl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a58Do)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a58Lx v_a58Ly
             -> case fromPersistValue v_a58Ly of
                  Left e_a58Lz -> Left e_a58Lz
                  Right s'_a58LA
                    -> case (reads $ (unpack s'_a58LA)) of
                         ((x_a58LB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a58LB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a58Lx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a58LA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5965 v_a5966
             -> case fromPersistValue v_a5966 of
                  Left e_a5967 -> Left e_a5967
                  Right s'_a5968
                    -> case (reads $ (unpack s'_a5968)) of
                         ((x_a5969, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5969
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5965)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5968)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a59dA v_a59dB
             -> case fromPersistValue v_a59dB of
                  Left e_a59dC -> Left e_a59dC
                  Right s'_a59dD
                    -> case (reads $ (unpack s'_a59dD)) of
                         ((x_a59dE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a59dE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a59dA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a59dD)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a59lM v_a59lN
             -> case fromPersistValue v_a59lN of
                  Left e_a59lO -> Left e_a59lO
                  Right s'_a59lP
                    -> case (reads $ (unpack s'_a59lP)) of
                         ((x_a59lQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a59lQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a59lM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a59lP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5kKV v_a5kKW
             -> case fromPersistValue v_a5kKW of
                  Left e_a5kKX -> Left e_a5kKX
                  Right s'_a5kKY
                    -> case (reads $ (unpack s'_a5kKY)) of
                         ((x_a5kKZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5kKZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5kKV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5kKY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5kSq v_a5kSr
             -> case fromPersistValue v_a5kSr of
                  Left e_a5kSs -> Left e_a5kSs
                  Right s'_a5kSt
                    -> case (reads $ (unpack s'_a5kSt)) of
                         ((x_a5kSu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5kSu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5kSq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5kSt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5l0C v_a5l0D
             -> case fromPersistValue v_a5l0D of
                  Left e_a5l0E -> Left e_a5l0E
                  Right s'_a5l0F
                    -> case (reads $ (unpack s'_a5l0F)) of
                         ((x_a5l0G, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5l0G
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5l0C)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5l0F)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5lla v_a5llb
             -> case fromPersistValue v_a5llb of
                  Left e_a5llc -> Left e_a5llc
                  Right s'_a5lld
                    -> case (reads $ (unpack s'_a5lld)) of
                         ((x_a5lle, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5lle
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5lla)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5lld)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5lsF v_a5lsG
             -> case fromPersistValue v_a5lsG of
                  Left e_a5lsH -> Left e_a5lsH
                  Right s'_a5lsI
                    -> case (reads $ (unpack s'_a5lsI)) of
                         ((x_a5lsJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5lsJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5lsF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5lsI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5lAR v_a5lAS
             -> case fromPersistValue v_a5lAS of
                  Left e_a5lAT -> Left e_a5lAT
                  Right s'_a5lAU
                    -> case (reads $ (unpack s'_a5lAU)) of
                         ((x_a5lAV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5lAV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5lAR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5lAU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5x00 v_a5x01
             -> case fromPersistValue v_a5x01 of
                  Left e_a5x02 -> Left e_a5x02
                  Right s'_a5x03
                    -> case (reads $ (unpack s'_a5x03)) of
                         ((x_a5x04, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5x04
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5x00)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5x03)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5x7v v_a5x7w
             -> case fromPersistValue v_a5x7w of
                  Left e_a5x7x -> Left e_a5x7x
                  Right s'_a5x7y
                    -> case (reads $ (unpack s'_a5x7y)) of
                         ((x_a5x7z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5x7z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5x7v)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5x7y)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5xfH v_a5xfI
             -> case fromPersistValue v_a5xfI of
                  Left e_a5xfJ -> Left e_a5xfJ
                  Right s'_a5xfK
                    -> case (reads $ (unpack s'_a5xfK)) of
                         ((x_a5xfL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5xfL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5xfH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5xfK)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5xAf v_a5xAg
             -> case fromPersistValue v_a5xAg of
                  Left e_a5xAh -> Left e_a5xAh
                  Right s'_a5xAi
                    -> case (reads $ (unpack s'_a5xAi)) of
                         ((x_a5xAj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5xAj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5xAf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5xAi)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5xHK v_a5xHL
             -> case fromPersistValue v_a5xHL of
                  Left e_a5xHM -> Left e_a5xHM
                  Right s'_a5xHN
                    -> case (reads $ (unpack s'_a5xHN)) of
                         ((x_a5xHO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5xHO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5xHK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5xHN)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5xPW v_a5xPX
             -> case fromPersistValue v_a5xPX of
                  Left e_a5xPY -> Left e_a5xPY
                  Right s'_a5xPZ
                    -> case (reads $ (unpack s'_a5xPZ)) of
                         ((x_a5xQ0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5xQ0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5xPW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5xPZ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5Jf5 v_a5Jf6
             -> case fromPersistValue v_a5Jf6 of
                  Left e_a5Jf7 -> Left e_a5Jf7
                  Right s'_a5Jf8
                    -> case (reads $ (unpack s'_a5Jf8)) of
                         ((x_a5Jf9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5Jf9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5Jf5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5Jf8)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5JmA v_a5JmB
             -> case fromPersistValue v_a5JmB of
                  Left e_a5JmC -> Left e_a5JmC
                  Right s'_a5JmD
                    -> case (reads $ (unpack s'_a5JmD)) of
                         ((x_a5JmE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5JmE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5JmA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5JmD)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5JuM v_a5JuN
             -> case fromPersistValue v_a5JuN of
                  Left e_a5JuO -> Left e_a5JuO
                  Right s'_a5JuP
                    -> case (reads $ (unpack s'_a5JuP)) of
                         ((x_a5JuQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5JuQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5JuM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5JuP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5JPk v_a5JPl
             -> case fromPersistValue v_a5JPl of
                  Left e_a5JPm -> Left e_a5JPm
                  Right s'_a5JPn
                    -> case (reads $ (unpack s'_a5JPn)) of
                         ((x_a5JPo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5JPo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5JPk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5JPn)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5JWP v_a5JWQ
             -> case fromPersistValue v_a5JWQ of
                  Left e_a5JWR -> Left e_a5JWR
                  Right s'_a5JWS
                    -> case (reads $ (unpack s'_a5JWS)) of
                         ((x_a5JWT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5JWT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5JWP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5JWS)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5K51 v_a5K52
             -> case fromPersistValue v_a5K52 of
                  Left e_a5K53 -> Left e_a5K53
                  Right s'_a5K54
                    -> case (reads $ (unpack s'_a5K54)) of
                         ((x_a5K55, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5K55
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5K51)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5K54)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5Vua v_a5Vub
             -> case fromPersistValue v_a5Vub of
                  Left e_a5Vuc -> Left e_a5Vuc
                  Right s'_a5Vud
                    -> case (reads $ (unpack s'_a5Vud)) of
                         ((x_a5Vue, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5Vue
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5Vua)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5Vud)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5VBF v_a5VBG
             -> case fromPersistValue v_a5VBG of
                  Left e_a5VBH -> Left e_a5VBH
                  Right s'_a5VBI
                    -> case (reads $ (unpack s'_a5VBI)) of
                         ((x_a5VBJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5VBJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5VBF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5VBI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5VJR v_a5VJS
             -> case fromPersistValue v_a5VJS of
                  Left e_a5VJT -> Left e_a5VJT
                  Right s'_a5VJU
                    -> case (reads $ (unpack s'_a5VJU)) of
                         ((x_a5VJV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5VJV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5VJR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5VJU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5W4p v_a5W4q
             -> case fromPersistValue v_a5W4q of
                  Left e_a5W4r -> Left e_a5W4r
                  Right s'_a5W4s
                    -> case (reads $ (unpack s'_a5W4s)) of
                         ((x_a5W4t, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5W4t
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5W4p)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5W4s)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5WbU v_a5WbV
             -> case fromPersistValue v_a5WbV of
                  Left e_a5WbW -> Left e_a5WbW
                  Right s'_a5WbX
                    -> case (reads $ (unpack s'_a5WbX)) of
                         ((x_a5WbY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5WbY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5WbU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5WbX)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a5Wk6 v_a5Wk7
             -> case fromPersistValue v_a5Wk7 of
                  Left e_a5Wk8 -> Left e_a5Wk8
                  Right s'_a5Wk9
                    -> case (reads $ (unpack s'_a5Wk9)) of
                         ((x_a5Wka, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a5Wka
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a5Wk6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a5Wk9)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a682q v_a682r
             -> case fromPersistValue v_a682r of
                  Left e_a682s -> Left e_a682s
                  Right s'_a682t
                    -> case (reads $ (unpack s'_a682t)) of
                         ((x_a682u, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a682u
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a682q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a682t)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a689V v_a689W
             -> case fromPersistValue v_a689W of
                  Left e_a689X -> Left e_a689X
                  Right s'_a689Y
                    -> case (reads $ (unpack s'_a689Y)) of
                         ((x_a689Z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a689Z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a689V)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a689Y)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a68i7 v_a68i8
             -> case fromPersistValue v_a68i8 of
                  Left e_a68i9 -> Left e_a68i9
                  Right s'_a68ia
                    -> case (reads $ (unpack s'_a68ia)) of
                         ((x_a68ib, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a68ib
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a68i7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a68ia)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a68Dh v_a68Di
             -> case fromPersistValue v_a68Di of
                  Left e_a68Dj -> Left e_a68Dj
                  Right s'_a68Dk
                    -> case (reads $ (unpack s'_a68Dk)) of
                         ((x_a68Dl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a68Dl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a68Dh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a68Dk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a68KM v_a68KN
             -> case fromPersistValue v_a68KN of
                  Left e_a68KO -> Left e_a68KO
                  Right s'_a68KP
                    -> case (reads $ (unpack s'_a68KP)) of
                         ((x_a68KQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a68KQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a68KM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a68KP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a68SY v_a68SZ
             -> case fromPersistValue v_a68SZ of
                  Left e_a68T0 -> Left e_a68T0
                  Right s'_a68T1
                    -> case (reads $ (unpack s'_a68T1)) of
                         ((x_a68T2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a68T2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a68SY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a68T1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6kBi v_a6kBj
             -> case fromPersistValue v_a6kBj of
                  Left e_a6kBk -> Left e_a6kBk
                  Right s'_a6kBl
                    -> case (reads $ (unpack s'_a6kBl)) of
                         ((x_a6kBm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6kBm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6kBi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6kBl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6kIN v_a6kIO
             -> case fromPersistValue v_a6kIO of
                  Left e_a6kIP -> Left e_a6kIP
                  Right s'_a6kIQ
                    -> case (reads $ (unpack s'_a6kIQ)) of
                         ((x_a6kIR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6kIR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6kIN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6kIQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6kQZ v_a6kR0
             -> case fromPersistValue v_a6kR0 of
                  Left e_a6kR1 -> Left e_a6kR1
                  Right s'_a6kR2
                    -> case (reads $ (unpack s'_a6kR2)) of
                         ((x_a6kR3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6kR3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6kQZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6kR2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6lcN v_a6lcO
             -> case fromPersistValue v_a6lcO of
                  Left e_a6lcP -> Left e_a6lcP
                  Right s'_a6lcQ
                    -> case (reads $ (unpack s'_a6lcQ)) of
                         ((x_a6lcR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6lcR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6lcN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6lcQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6lki v_a6lkj
             -> case fromPersistValue v_a6lkj of
                  Left e_a6lkk -> Left e_a6lkk
                  Right s'_a6lkl
                    -> case (reads $ (unpack s'_a6lkl)) of
                         ((x_a6lkm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6lkm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6lki)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6lkl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6lsu v_a6lsv
             -> case fromPersistValue v_a6lsv of
                  Left e_a6lsw -> Left e_a6lsw
                  Right s'_a6lsx
                    -> case (reads $ (unpack s'_a6lsx)) of
                         ((x_a6lsy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6lsy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6lsu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6lsx)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6xaO v_a6xaP
             -> case fromPersistValue v_a6xaP of
                  Left e_a6xaQ -> Left e_a6xaQ
                  Right s'_a6xaR
                    -> case (reads $ (unpack s'_a6xaR)) of
                         ((x_a6xaS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6xaS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6xaO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6xaR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6xij v_a6xik
             -> case fromPersistValue v_a6xik of
                  Left e_a6xil -> Left e_a6xil
                  Right s'_a6xim
                    -> case (reads $ (unpack s'_a6xim)) of
                         ((x_a6xin, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6xin
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6xij)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6xim)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6xqv v_a6xqw
             -> case fromPersistValue v_a6xqw of
                  Left e_a6xqx -> Left e_a6xqx
                  Right s'_a6xqy
                    -> case (reads $ (unpack s'_a6xqy)) of
                         ((x_a6xqz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6xqz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6xqv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6xqy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6xLF v_a6xLG
             -> case fromPersistValue v_a6xLG of
                  Left e_a6xLH -> Left e_a6xLH
                  Right s'_a6xLI
                    -> case (reads $ (unpack s'_a6xLI)) of
                         ((x_a6xLJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6xLJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6xLF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6xLI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6xTa v_a6xTb
             -> case fromPersistValue v_a6xTb of
                  Left e_a6xTc -> Left e_a6xTc
                  Right s'_a6xTd
                    -> case (reads $ (unpack s'_a6xTd)) of
                         ((x_a6xTe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6xTe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6xTa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6xTd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6y1m v_a6y1n
             -> case fromPersistValue v_a6y1n of
                  Left e_a6y1o -> Left e_a6y1o
                  Right s'_a6y1p
                    -> case (reads $ (unpack s'_a6y1p)) of
                         ((x_a6y1q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6y1q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6y1m)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6y1p)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6JJG v_a6JJH
             -> case fromPersistValue v_a6JJH of
                  Left e_a6JJI -> Left e_a6JJI
                  Right s'_a6JJJ
                    -> case (reads $ (unpack s'_a6JJJ)) of
                         ((x_a6JJK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6JJK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6JJG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6JJJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6JRb v_a6JRc
             -> case fromPersistValue v_a6JRc of
                  Left e_a6JRd -> Left e_a6JRd
                  Right s'_a6JRe
                    -> case (reads $ (unpack s'_a6JRe)) of
                         ((x_a6JRf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6JRf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6JRb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6JRe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6JZn v_a6JZo
             -> case fromPersistValue v_a6JZo of
                  Left e_a6JZp -> Left e_a6JZp
                  Right s'_a6JZq
                    -> case (reads $ (unpack s'_a6JZq)) of
                         ((x_a6JZr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6JZr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6JZn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6JZq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Kkx v_a6Kky
             -> case fromPersistValue v_a6Kky of
                  Left e_a6Kkz -> Left e_a6Kkz
                  Right s'_a6KkA
                    -> case (reads $ (unpack s'_a6KkA)) of
                         ((x_a6KkB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6KkB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Kkx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6KkA)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Ks2 v_a6Ks3
             -> case fromPersistValue v_a6Ks3 of
                  Left e_a6Ks4 -> Left e_a6Ks4
                  Right s'_a6Ks5
                    -> case (reads $ (unpack s'_a6Ks5)) of
                         ((x_a6Ks6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6Ks6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Ks2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6Ks5)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6KAe v_a6KAf
             -> case fromPersistValue v_a6KAf of
                  Left e_a6KAg -> Left e_a6KAg
                  Right s'_a6KAh
                    -> case (reads $ (unpack s'_a6KAh)) of
                         ((x_a6KAi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6KAi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6KAe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6KAh)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Wiy v_a6Wiz
             -> case fromPersistValue v_a6Wiz of
                  Left e_a6WiA -> Left e_a6WiA
                  Right s'_a6WiB
                    -> case (reads $ (unpack s'_a6WiB)) of
                         ((x_a6WiC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6WiC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Wiy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6WiB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Wq3 v_a6Wq4
             -> case fromPersistValue v_a6Wq4 of
                  Left e_a6Wq5 -> Left e_a6Wq5
                  Right s'_a6Wq6
                    -> case (reads $ (unpack s'_a6Wq6)) of
                         ((x_a6Wq7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6Wq7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Wq3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6Wq6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6Wyf v_a6Wyg
             -> case fromPersistValue v_a6Wyg of
                  Left e_a6Wyh -> Left e_a6Wyh
                  Right s'_a6Wyi
                    -> case (reads $ (unpack s'_a6Wyi)) of
                         ((x_a6Wyj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6Wyj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6Wyf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6Wyi)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6WTp v_a6WTq
             -> case fromPersistValue v_a6WTq of
                  Left e_a6WTr -> Left e_a6WTr
                  Right s'_a6WTs
                    -> case (reads $ (unpack s'_a6WTs)) of
                         ((x_a6WTt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6WTt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6WTp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6WTs)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6X0U v_a6X0V
             -> case fromPersistValue v_a6X0V of
                  Left e_a6X0W -> Left e_a6X0W
                  Right s'_a6X0X
                    -> case (reads $ (unpack s'_a6X0X)) of
                         ((x_a6X0Y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6X0Y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6X0U)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6X0X)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a6X96 v_a6X97
             -> case fromPersistValue v_a6X97 of
                  Left e_a6X98 -> Left e_a6X98
                  Right s'_a6X99
                    -> case (reads $ (unpack s'_a6X99)) of
                         ((x_a6X9a, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a6X9a
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a6X96)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a6X99)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a78Rq v_a78Rr
             -> case fromPersistValue v_a78Rr of
                  Left e_a78Rs -> Left e_a78Rs
                  Right s'_a78Rt
                    -> case (reads $ (unpack s'_a78Rt)) of
                         ((x_a78Ru, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a78Ru
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a78Rq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a78Rt)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a78YV v_a78YW
             -> case fromPersistValue v_a78YW of
                  Left e_a78YX -> Left e_a78YX
                  Right s'_a78YY
                    -> case (reads $ (unpack s'_a78YY)) of
                         ((x_a78YZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a78YZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a78YV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a78YY)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7977 v_a7978
             -> case fromPersistValue v_a7978 of
                  Left e_a7979 -> Left e_a7979
                  Right s'_a797a
                    -> case (reads $ (unpack s'_a797a)) of
                         ((x_a797b, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a797b
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7977)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a797a)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a79sh v_a79si
             -> case fromPersistValue v_a79si of
                  Left e_a79sj -> Left e_a79sj
                  Right s'_a79sk
                    -> case (reads $ (unpack s'_a79sk)) of
                         ((x_a79sl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a79sl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a79sh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a79sk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a79zM v_a79zN
             -> case fromPersistValue v_a79zN of
                  Left e_a79zO -> Left e_a79zO
                  Right s'_a79zP
                    -> case (reads $ (unpack s'_a79zP)) of
                         ((x_a79zQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a79zQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a79zM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a79zP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a79HY v_a79HZ
             -> case fromPersistValue v_a79HZ of
                  Left e_a79I0 -> Left e_a79I0
                  Right s'_a79I1
                    -> case (reads $ (unpack s'_a79I1)) of
                         ((x_a79I2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a79I2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a79HY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a79I1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7lqi v_a7lqj
             -> case fromPersistValue v_a7lqj of
                  Left e_a7lqk -> Left e_a7lqk
                  Right s'_a7lql
                    -> case (reads $ (unpack s'_a7lql)) of
                         ((x_a7lqm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7lqm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7lqi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7lql)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7lxN v_a7lxO
             -> case fromPersistValue v_a7lxO of
                  Left e_a7lxP -> Left e_a7lxP
                  Right s'_a7lxQ
                    -> case (reads $ (unpack s'_a7lxQ)) of
                         ((x_a7lxR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7lxR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7lxN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7lxQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7lFZ v_a7lG0
             -> case fromPersistValue v_a7lG0 of
                  Left e_a7lG1 -> Left e_a7lG1
                  Right s'_a7lG2
                    -> case (reads $ (unpack s'_a7lG2)) of
                         ((x_a7lG3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7lG3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7lFZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7lG2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7m19 v_a7m1a
             -> case fromPersistValue v_a7m1a of
                  Left e_a7m1b -> Left e_a7m1b
                  Right s'_a7m1c
                    -> case (reads $ (unpack s'_a7m1c)) of
                         ((x_a7m1d, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7m1d
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7m19)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7m1c)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7m8E v_a7m8F
             -> case fromPersistValue v_a7m8F of
                  Left e_a7m8G -> Left e_a7m8G
                  Right s'_a7m8H
                    -> case (reads $ (unpack s'_a7m8H)) of
                         ((x_a7m8I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7m8I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7m8E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7m8H)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7mgQ v_a7mgR
             -> case fromPersistValue v_a7mgR of
                  Left e_a7mgS -> Left e_a7mgS
                  Right s'_a7mgT
                    -> case (reads $ (unpack s'_a7mgT)) of
                         ((x_a7mgU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7mgU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7mgQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7mgT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7xZa v_a7xZb
             -> case fromPersistValue v_a7xZb of
                  Left e_a7xZc -> Left e_a7xZc
                  Right s'_a7xZd
                    -> case (reads $ (unpack s'_a7xZd)) of
                         ((x_a7xZe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7xZe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7xZa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7xZd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7y6F v_a7y6G
             -> case fromPersistValue v_a7y6G of
                  Left e_a7y6H -> Left e_a7y6H
                  Right s'_a7y6I
                    -> case (reads $ (unpack s'_a7y6I)) of
                         ((x_a7y6J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7y6J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7y6F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7y6I)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7yeR v_a7yeS
             -> case fromPersistValue v_a7yeS of
                  Left e_a7yeT -> Left e_a7yeT
                  Right s'_a7yeU
                    -> case (reads $ (unpack s'_a7yeU)) of
                         ((x_a7yeV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7yeV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7yeR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7yeU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7yA1 v_a7yA2
             -> case fromPersistValue v_a7yA2 of
                  Left e_a7yA3 -> Left e_a7yA3
                  Right s'_a7yA4
                    -> case (reads $ (unpack s'_a7yA4)) of
                         ((x_a7yA5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7yA5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7yA1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7yA4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7yHw v_a7yHx
             -> case fromPersistValue v_a7yHx of
                  Left e_a7yHy -> Left e_a7yHy
                  Right s'_a7yHz
                    -> case (reads $ (unpack s'_a7yHz)) of
                         ((x_a7yHA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7yHA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7yHw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7yHz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7yPI v_a7yPJ
             -> case fromPersistValue v_a7yPJ of
                  Left e_a7yPK -> Left e_a7yPK
                  Right s'_a7yPL
                    -> case (reads $ (unpack s'_a7yPL)) of
                         ((x_a7yPM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7yPM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7yPI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7yPL)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Ky2 v_a7Ky3
             -> case fromPersistValue v_a7Ky3 of
                  Left e_a7Ky4 -> Left e_a7Ky4
                  Right s'_a7Ky5
                    -> case (reads $ (unpack s'_a7Ky5)) of
                         ((x_a7Ky6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Ky6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Ky2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Ky5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7KFx v_a7KFy
             -> case fromPersistValue v_a7KFy of
                  Left e_a7KFz -> Left e_a7KFz
                  Right s'_a7KFA
                    -> case (reads $ (unpack s'_a7KFA)) of
                         ((x_a7KFB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7KFB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7KFx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7KFA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7KNJ v_a7KNK
             -> case fromPersistValue v_a7KNK of
                  Left e_a7KNL -> Left e_a7KNL
                  Right s'_a7KNM
                    -> case (reads $ (unpack s'_a7KNM)) of
                         ((x_a7KNN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7KNN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7KNJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7KNM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7L8T v_a7L8U
             -> case fromPersistValue v_a7L8U of
                  Left e_a7L8V -> Left e_a7L8V
                  Right s'_a7L8W
                    -> case (reads $ (unpack s'_a7L8W)) of
                         ((x_a7L8X, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7L8X
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7L8T)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7L8W)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Lgo v_a7Lgp
             -> case fromPersistValue v_a7Lgp of
                  Left e_a7Lgq -> Left e_a7Lgq
                  Right s'_a7Lgr
                    -> case (reads $ (unpack s'_a7Lgr)) of
                         ((x_a7Lgs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Lgs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Lgo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Lgr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7LoA v_a7LoB
             -> case fromPersistValue v_a7LoB of
                  Left e_a7LoC -> Left e_a7LoC
                  Right s'_a7LoD
                    -> case (reads $ (unpack s'_a7LoD)) of
                         ((x_a7LoE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7LoE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7LoA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7LoD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7WNJ v_a7WNK
             -> case fromPersistValue v_a7WNK of
                  Left e_a7WNL -> Left e_a7WNL
                  Right s'_a7WNM
                    -> case (reads $ (unpack s'_a7WNM)) of
                         ((x_a7WNN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7WNN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7WNJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7WNM)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7WVe v_a7WVf
             -> case fromPersistValue v_a7WVf of
                  Left e_a7WVg -> Left e_a7WVg
                  Right s'_a7WVh
                    -> case (reads $ (unpack s'_a7WVh)) of
                         ((x_a7WVi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7WVi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7WVe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7WVh)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7X3q v_a7X3r
             -> case fromPersistValue v_a7X3r of
                  Left e_a7X3s -> Left e_a7X3s
                  Right s'_a7X3t
                    -> case (reads $ (unpack s'_a7X3t)) of
                         ((x_a7X3u, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7X3u
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7X3q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7X3t)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7XnY v_a7XnZ
             -> case fromPersistValue v_a7XnZ of
                  Left e_a7Xo0 -> Left e_a7Xo0
                  Right s'_a7Xo1
                    -> case (reads $ (unpack s'_a7Xo1)) of
                         ((x_a7Xo2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Xo2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7XnY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Xo1)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7Xvt v_a7Xvu
             -> case fromPersistValue v_a7Xvu of
                  Left e_a7Xvv -> Left e_a7Xvv
                  Right s'_a7Xvw
                    -> case (reads $ (unpack s'_a7Xvw)) of
                         ((x_a7Xvx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7Xvx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7Xvt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7Xvw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a7XDF v_a7XDG
             -> case fromPersistValue v_a7XDG of
                  Left e_a7XDH -> Left e_a7XDH
                  Right s'_a7XDI
                    -> case (reads $ (unpack s'_a7XDI)) of
                         ((x_a7XDJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a7XDJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a7XDF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a7XDI)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a89lZ v_a89m0
             -> case fromPersistValue v_a89m0 of
                  Left e_a89m1 -> Left e_a89m1
                  Right s'_a89m2
                    -> case (reads $ (unpack s'_a89m2)) of
                         ((x_a89m3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a89m3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a89lZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a89m2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a89tu v_a89tv
             -> case fromPersistValue v_a89tv of
                  Left e_a89tw -> Left e_a89tw
                  Right s'_a89tx
                    -> case (reads $ (unpack s'_a89tx)) of
                         ((x_a89ty, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a89ty
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a89tu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a89tx)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a89BG v_a89BH
             -> case fromPersistValue v_a89BH of
                  Left e_a89BI -> Left e_a89BI
                  Right s'_a89BJ
                    -> case (reads $ (unpack s'_a89BJ)) of
                         ((x_a89BK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a89BK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a89BG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a89BJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a89WQ v_a89WR
             -> case fromPersistValue v_a89WR of
                  Left e_a89WS -> Left e_a89WS
                  Right s'_a89WT
                    -> case (reads $ (unpack s'_a89WT)) of
                         ((x_a89WU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a89WU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a89WQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a89WT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8a4l v_a8a4m
             -> case fromPersistValue v_a8a4m of
                  Left e_a8a4n -> Left e_a8a4n
                  Right s'_a8a4o
                    -> case (reads $ (unpack s'_a8a4o)) of
                         ((x_a8a4p, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8a4p
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8a4l)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8a4o)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8acx v_a8acy
             -> case fromPersistValue v_a8acy of
                  Left e_a8acz -> Left e_a8acz
                  Right s'_a8acA
                    -> case (reads $ (unpack s'_a8acA)) of
                         ((x_a8acB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8acB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8acx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8acA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8lBG v_a8lBH
             -> case fromPersistValue v_a8lBH of
                  Left e_a8lBI -> Left e_a8lBI
                  Right s'_a8lBJ
                    -> case (reads $ (unpack s'_a8lBJ)) of
                         ((x_a8lBK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8lBK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8lBG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8lBJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8lJb v_a8lJc
             -> case fromPersistValue v_a8lJc of
                  Left e_a8lJd -> Left e_a8lJd
                  Right s'_a8lJe
                    -> case (reads $ (unpack s'_a8lJe)) of
                         ((x_a8lJf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8lJf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8lJb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8lJe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8lRn v_a8lRo
             -> case fromPersistValue v_a8lRo of
                  Left e_a8lRp -> Left e_a8lRp
                  Right s'_a8lRq
                    -> case (reads $ (unpack s'_a8lRq)) of
                         ((x_a8lRr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8lRr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8lRn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8lRq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8mbV v_a8mbW
             -> case fromPersistValue v_a8mbW of
                  Left e_a8mbX -> Left e_a8mbX
                  Right s'_a8mbY
                    -> case (reads $ (unpack s'_a8mbY)) of
                         ((x_a8mbZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8mbZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8mbV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8mbY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8mjq v_a8mjr
             -> case fromPersistValue v_a8mjr of
                  Left e_a8mjs -> Left e_a8mjs
                  Right s'_a8mjt
                    -> case (reads $ (unpack s'_a8mjt)) of
                         ((x_a8mju, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8mju
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8mjq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8mjt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8mrC v_a8mrD
             -> case fromPersistValue v_a8mrD of
                  Left e_a8mrE -> Left e_a8mrE
                  Right s'_a8mrF
                    -> case (reads $ (unpack s'_a8mrF)) of
                         ((x_a8mrG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8mrG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8mrC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8mrF)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8xQv v_a8xQw
             -> case fromPersistValue v_a8xQw of
                  Left e_a8xQx -> Left e_a8xQx
                  Right s'_a8xQy
                    -> case (reads $ (unpack s'_a8xQy)) of
                         ((x_a8xQz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8xQz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8xQv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8xQy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8xY0 v_a8xY1
             -> case fromPersistValue v_a8xY1 of
                  Left e_a8xY2 -> Left e_a8xY2
                  Right s'_a8xY3
                    -> case (reads $ (unpack s'_a8xY3)) of
                         ((x_a8xY4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8xY4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8xY0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8xY3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8y6c v_a8y6d
             -> case fromPersistValue v_a8y6d of
                  Left e_a8y6e -> Left e_a8y6e
                  Right s'_a8y6f
                    -> case (reads $ (unpack s'_a8y6f)) of
                         ((x_a8y6g, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8y6g
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8y6c)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8y6f)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8ytA v_a8ytB
             -> case fromPersistValue v_a8ytB of
                  Left e_a8ytC -> Left e_a8ytC
                  Right s'_a8ytD
                    -> case (reads $ (unpack s'_a8ytD)) of
                         ((x_a8ytE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8ytE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8ytA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8ytD)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8yB5 v_a8yB6
             -> case fromPersistValue v_a8yB6 of
                  Left e_a8yB7 -> Left e_a8yB7
                  Right s'_a8yB8
                    -> case (reads $ (unpack s'_a8yB8)) of
                         ((x_a8yB9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8yB9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8yB5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8yB8)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8yJh v_a8yJi
             -> case fromPersistValue v_a8yJi of
                  Left e_a8yJj -> Left e_a8yJj
                  Right s'_a8yJk
                    -> case (reads $ (unpack s'_a8yJk)) of
                         ((x_a8yJl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8yJl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8yJh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8yJk)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8K7U v_a8K7V
             -> case fromPersistValue v_a8K7V of
                  Left e_a8K7W -> Left e_a8K7W
                  Right s'_a8K7X
                    -> case (reads $ (unpack s'_a8K7X)) of
                         ((x_a8K7Y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8K7Y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8K7U)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8K7X)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8Kfp v_a8Kfq
             -> case fromPersistValue v_a8Kfq of
                  Left e_a8Kfr -> Left e_a8Kfr
                  Right s'_a8Kfs
                    -> case (reads $ (unpack s'_a8Kfs)) of
                         ((x_a8Kft, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8Kft
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8Kfp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8Kfs)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8KnB v_a8KnC
             -> case fromPersistValue v_a8KnC of
                  Left e_a8KnD -> Left e_a8KnD
                  Right s'_a8KnE
                    -> case (reads $ (unpack s'_a8KnE)) of
                         ((x_a8KnF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8KnF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8KnB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8KnE)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8KLz v_a8KLA
             -> case fromPersistValue v_a8KLA of
                  Left e_a8KLB -> Left e_a8KLB
                  Right s'_a8KLC
                    -> case (reads $ (unpack s'_a8KLC)) of
                         ((x_a8KLD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8KLD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8KLz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8KLC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8KT4 v_a8KT5
             -> case fromPersistValue v_a8KT5 of
                  Left e_a8KT6 -> Left e_a8KT6
                  Right s'_a8KT7
                    -> case (reads $ (unpack s'_a8KT7)) of
                         ((x_a8KT8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8KT8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8KT4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8KT7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8L1g v_a8L1h
             -> case fromPersistValue v_a8L1h of
                  Left e_a8L1i -> Left e_a8L1i
                  Right s'_a8L1j
                    -> case (reads $ (unpack s'_a8L1j)) of
                         ((x_a8L1k, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8L1k
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8L1g)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8L1j)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8WpT v_a8WpU
             -> case fromPersistValue v_a8WpU of
                  Left e_a8WpV -> Left e_a8WpV
                  Right s'_a8WpW
                    -> case (reads $ (unpack s'_a8WpW)) of
                         ((x_a8WpX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8WpX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8WpT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8WpW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8Wxo v_a8Wxp
             -> case fromPersistValue v_a8Wxp of
                  Left e_a8Wxq -> Left e_a8Wxq
                  Right s'_a8Wxr
                    -> case (reads $ (unpack s'_a8Wxr)) of
                         ((x_a8Wxs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8Wxs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8Wxo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8Wxr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8WFA v_a8WFB
             -> case fromPersistValue v_a8WFB of
                  Left e_a8WFC -> Left e_a8WFC
                  Right s'_a8WFD
                    -> case (reads $ (unpack s'_a8WFD)) of
                         ((x_a8WFE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8WFE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8WFA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8WFD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8X08 v_a8X09
             -> case fromPersistValue v_a8X09 of
                  Left e_a8X0a -> Left e_a8X0a
                  Right s'_a8X0b
                    -> case (reads $ (unpack s'_a8X0b)) of
                         ((x_a8X0c, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8X0c
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8X08)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8X0b)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8X7D v_a8X7E
             -> case fromPersistValue v_a8X7E of
                  Left e_a8X7F -> Left e_a8X7F
                  Right s'_a8X7G
                    -> case (reads $ (unpack s'_a8X7G)) of
                         ((x_a8X7H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8X7H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8X7D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8X7G)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a8XfP v_a8XfQ
             -> case fromPersistValue v_a8XfQ of
                  Left e_a8XfR -> Left e_a8XfR
                  Right s'_a8XfS
                    -> case (reads $ (unpack s'_a8XfS)) of
                         ((x_a8XfT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a8XfT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a8XfP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a8XfS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a98Es v_a98Et
             -> case fromPersistValue v_a98Et of
                  Left e_a98Eu -> Left e_a98Eu
                  Right s'_a98Ev
                    -> case (reads $ (unpack s'_a98Ev)) of
                         ((x_a98Ew, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a98Ew
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a98Es)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a98Ev)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a98LX v_a98LY
             -> case fromPersistValue v_a98LY of
                  Left e_a98LZ -> Left e_a98LZ
                  Right s'_a98M0
                    -> case (reads $ (unpack s'_a98M0)) of
                         ((x_a98M1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a98M1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a98LX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a98M0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a98U9 v_a98Ua
             -> case fromPersistValue v_a98Ua of
                  Left e_a98Ub -> Left e_a98Ub
                  Right s'_a98Uc
                    -> case (reads $ (unpack s'_a98Uc)) of
                         ((x_a98Ud, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a98Ud
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a98U9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a98Uc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a99eQ v_a99eR
             -> case fromPersistValue v_a99eR of
                  Left e_a99eS -> Left e_a99eS
                  Right s'_a99eT
                    -> case (reads $ (unpack s'_a99eT)) of
                         ((x_a99eU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a99eU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a99eQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a99eT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a99ml v_a99mm
             -> case fromPersistValue v_a99mm of
                  Left e_a99mn -> Left e_a99mn
                  Right s'_a99mo
                    -> case (reads $ (unpack s'_a99mo)) of
                         ((x_a99mp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a99mp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a99ml)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a99mo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a99ux v_a99uy
             -> case fromPersistValue v_a99uy of
                  Left e_a99uz -> Left e_a99uz
                  Right s'_a99uA
                    -> case (reads $ (unpack s'_a99uA)) of
                         ((x_a99uB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a99uB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a99ux)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a99uA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9kTa v_a9kTb
             -> case fromPersistValue v_a9kTb of
                  Left e_a9kTc -> Left e_a9kTc
                  Right s'_a9kTd
                    -> case (reads $ (unpack s'_a9kTd)) of
                         ((x_a9kTe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9kTe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9kTa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9kTd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9l0F v_a9l0G
             -> case fromPersistValue v_a9l0G of
                  Left e_a9l0H -> Left e_a9l0H
                  Right s'_a9l0I
                    -> case (reads $ (unpack s'_a9l0I)) of
                         ((x_a9l0J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9l0J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9l0F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9l0I)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9l8R v_a9l8S
             -> case fromPersistValue v_a9l8S of
                  Left e_a9l8T -> Left e_a9l8T
                  Right s'_a9l8U
                    -> case (reads $ (unpack s'_a9l8U)) of
                         ((x_a9l8V, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9l8V
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9l8R)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9l8U)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9ltu v_a9ltv
             -> case fromPersistValue v_a9ltv of
                  Left e_a9ltw -> Left e_a9ltw
                  Right s'_a9ltx
                    -> case (reads $ (unpack s'_a9ltx)) of
                         ((x_a9lty, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9lty
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9ltu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9ltx)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9lAZ v_a9lB0
             -> case fromPersistValue v_a9lB0 of
                  Left e_a9lB1 -> Left e_a9lB1
                  Right s'_a9lB2
                    -> case (reads $ (unpack s'_a9lB2)) of
                         ((x_a9lB3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9lB3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9lAZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9lB2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9lJb v_a9lJc
             -> case fromPersistValue v_a9lJc of
                  Left e_a9lJd -> Left e_a9lJd
                  Right s'_a9lJe
                    -> case (reads $ (unpack s'_a9lJe)) of
                         ((x_a9lJf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9lJf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9lJb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9lJe)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9sDq v_a9sDr
             -> case fromPersistValue v_a9sDr of
                  Left e_a9sDs -> Left e_a9sDs
                  Right s'_a9sDt
                    -> case (reads $ (unpack s'_a9sDt)) of
                         ((x_a9sDu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9sDu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9sDq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9sDt)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9sKV v_a9sKW
             -> case fromPersistValue v_a9sKW of
                  Left e_a9sKX -> Left e_a9sKX
                  Right s'_a9sKY
                    -> case (reads $ (unpack s'_a9sKY)) of
                         ((x_a9sKZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9sKZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9sKV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9sKY)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9sT7 v_a9sT8
             -> case fromPersistValue v_a9sT8 of
                  Left e_a9sT9 -> Left e_a9sT9
                  Right s'_a9sTa
                    -> case (reads $ (unpack s'_a9sTa)) of
                         ((x_a9sTb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9sTb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9sT7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9sTa)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9zNm v_a9zNn
             -> case fromPersistValue v_a9zNn of
                  Left e_a9zNo -> Left e_a9zNo
                  Right s'_a9zNp
                    -> case (reads $ (unpack s'_a9zNp)) of
                         ((x_a9zNq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9zNq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9zNm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9zNp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9zUR v_a9zUS
             -> case fromPersistValue v_a9zUS of
                  Left e_a9zUT -> Left e_a9zUT
                  Right s'_a9zUU
                    -> case (reads $ (unpack s'_a9zUU)) of
                         ((x_a9zUV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9zUV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9zUR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9zUU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9A33 v_a9A34
             -> case fromPersistValue v_a9A34 of
                  Left e_a9A35 -> Left e_a9A35
                  Right s'_a9A36
                    -> case (reads $ (unpack s'_a9A36)) of
                         ((x_a9A37, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9A37
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9A33)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9A36)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9GXi v_a9GXj
             -> case fromPersistValue v_a9GXj of
                  Left e_a9GXk -> Left e_a9GXk
                  Right s'_a9GXl
                    -> case (reads $ (unpack s'_a9GXl)) of
                         ((x_a9GXm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9GXm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9GXi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9GXl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9H4N v_a9H4O
             -> case fromPersistValue v_a9H4O of
                  Left e_a9H4P -> Left e_a9H4P
                  Right s'_a9H4Q
                    -> case (reads $ (unpack s'_a9H4Q)) of
                         ((x_a9H4R, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9H4R
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9H4N)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9H4Q)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9HcZ v_a9Hd0
             -> case fromPersistValue v_a9Hd0 of
                  Left e_a9Hd1 -> Left e_a9Hd1
                  Right s'_a9Hd2
                    -> case (reads $ (unpack s'_a9Hd2)) of
                         ((x_a9Hd3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9Hd3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9HcZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9Hd2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9O7e v_a9O7f
             -> case fromPersistValue v_a9O7f of
                  Left e_a9O7g -> Left e_a9O7g
                  Right s'_a9O7h
                    -> case (reads $ (unpack s'_a9O7h)) of
                         ((x_a9O7i, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9O7i
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9O7e)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9O7h)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9OeJ v_a9OeK
             -> case fromPersistValue v_a9OeK of
                  Left e_a9OeL -> Left e_a9OeL
                  Right s'_a9OeM
                    -> case (reads $ (unpack s'_a9OeM)) of
                         ((x_a9OeN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9OeN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9OeJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9OeM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9OmV v_a9OmW
             -> case fromPersistValue v_a9OmW of
                  Left e_a9OmX -> Left e_a9OmX
                  Right s'_a9OmY
                    -> case (reads $ (unpack s'_a9OmY)) of
                         ((x_a9OmZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9OmZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9OmV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9OmY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9Vha v_a9Vhb
             -> case fromPersistValue v_a9Vhb of
                  Left e_a9Vhc -> Left e_a9Vhc
                  Right s'_a9Vhd
                    -> case (reads $ (unpack s'_a9Vhd)) of
                         ((x_a9Vhe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9Vhe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9Vha)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9Vhd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9VoF v_a9VoG
             -> case fromPersistValue v_a9VoG of
                  Left e_a9VoH -> Left e_a9VoH
                  Right s'_a9VoI
                    -> case (reads $ (unpack s'_a9VoI)) of
                         ((x_a9VoJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9VoJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9VoF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9VoI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_a9VwR v_a9VwS
             -> case fromPersistValue v_a9VwS of
                  Left e_a9VwT -> Left e_a9VwT
                  Right s'_a9VwU
                    -> case (reads $ (unpack s'_a9VwU)) of
                         ((x_a9VwV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_a9VwV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_a9VwR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_a9VwU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aa2r6 v_aa2r7
             -> case fromPersistValue v_aa2r7 of
                  Left e_aa2r8 -> Left e_aa2r8
                  Right s'_aa2r9
                    -> case (reads $ (unpack s'_aa2r9)) of
                         ((x_aa2ra, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aa2ra
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aa2r6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aa2r9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aa2yB v_aa2yC
             -> case fromPersistValue v_aa2yC of
                  Left e_aa2yD -> Left e_aa2yD
                  Right s'_aa2yE
                    -> case (reads $ (unpack s'_aa2yE)) of
                         ((x_aa2yF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aa2yF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aa2yB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aa2yE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aa2GN v_aa2GO
             -> case fromPersistValue v_aa2GO of
                  Left e_aa2GP -> Left e_aa2GP
                  Right s'_aa2GQ
                    -> case (reads $ (unpack s'_aa2GQ)) of
                         ((x_aa2GR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aa2GR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aa2GN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aa2GQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aa9B2 v_aa9B3
             -> case fromPersistValue v_aa9B3 of
                  Left e_aa9B4 -> Left e_aa9B4
                  Right s'_aa9B5
                    -> case (reads $ (unpack s'_aa9B5)) of
                         ((x_aa9B6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aa9B6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aa9B2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aa9B5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aa9Ix v_aa9Iy
             -> case fromPersistValue v_aa9Iy of
                  Left e_aa9Iz -> Left e_aa9Iz
                  Right s'_aa9IA
                    -> case (reads $ (unpack s'_aa9IA)) of
                         ((x_aa9IB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aa9IB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aa9Ix)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aa9IA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aa9QJ v_aa9QK
             -> case fromPersistValue v_aa9QK of
                  Left e_aa9QL -> Left e_aa9QL
                  Right s'_aa9QM
                    -> case (reads $ (unpack s'_aa9QM)) of
                         ((x_aa9QN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aa9QN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aa9QJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aa9QM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aalbE v_aalbF
             -> case fromPersistValue v_aalbF of
                  Left e_aalbG -> Left e_aalbG
                  Right s'_aalbH
                    -> case (reads $ (unpack s'_aalbH)) of
                         ((x_aalbI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aalbI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aalbE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aalbH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aalj9 v_aalja
             -> case fromPersistValue v_aalja of
                  Left e_aaljb -> Left e_aaljb
                  Right s'_aaljc
                    -> case (reads $ (unpack s'_aaljc)) of
                         ((x_aaljd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaljd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aalj9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaljc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aalrl v_aalrm
             -> case fromPersistValue v_aalrm of
                  Left e_aalrn -> Left e_aalrn
                  Right s'_aalro
                    -> case (reads $ (unpack s'_aalro)) of
                         ((x_aalrp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aalrp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aalrl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aalro)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aalLT v_aalLU
             -> case fromPersistValue v_aalLU of
                  Left e_aalLV -> Left e_aalLV
                  Right s'_aalLW
                    -> case (reads $ (unpack s'_aalLW)) of
                         ((x_aalLX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aalLX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aalLT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aalLW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aalTo v_aalTp
             -> case fromPersistValue v_aalTp of
                  Left e_aalTq -> Left e_aalTq
                  Right s'_aalTr
                    -> case (reads $ (unpack s'_aalTr)) of
                         ((x_aalTs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aalTs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aalTo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aalTr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aam1A v_aam1B
             -> case fromPersistValue v_aam1B of
                  Left e_aam1C -> Left e_aam1C
                  Right s'_aam1D
                    -> case (reads $ (unpack s'_aam1D)) of
                         ((x_aam1E, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aam1E
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aam1A)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aam1D)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aasVP v_aasVQ
             -> case fromPersistValue v_aasVQ of
                  Left e_aasVR -> Left e_aasVR
                  Right s'_aasVS
                    -> case (reads $ (unpack s'_aasVS)) of
                         ((x_aasVT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aasVT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aasVP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aasVS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aat3k v_aat3l
             -> case fromPersistValue v_aat3l of
                  Left e_aat3m -> Left e_aat3m
                  Right s'_aat3n
                    -> case (reads $ (unpack s'_aat3n)) of
                         ((x_aat3o, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aat3o
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aat3k)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aat3n)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aatbw v_aatbx
             -> case fromPersistValue v_aatbx of
                  Left e_aatby -> Left e_aatby
                  Right s'_aatbz
                    -> case (reads $ (unpack s'_aatbz)) of
                         ((x_aatbA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aatbA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aatbw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aatbz)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaA5L v_aaA5M
             -> case fromPersistValue v_aaA5M of
                  Left e_aaA5N -> Left e_aaA5N
                  Right s'_aaA5O
                    -> case (reads $ (unpack s'_aaA5O)) of
                         ((x_aaA5P, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaA5P
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaA5L)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaA5O)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaAdg v_aaAdh
             -> case fromPersistValue v_aaAdh of
                  Left e_aaAdi -> Left e_aaAdi
                  Right s'_aaAdj
                    -> case (reads $ (unpack s'_aaAdj)) of
                         ((x_aaAdk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaAdk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaAdg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaAdj)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaAls v_aaAlt
             -> case fromPersistValue v_aaAlt of
                  Left e_aaAlu -> Left e_aaAlu
                  Right s'_aaAlv
                    -> case (reads $ (unpack s'_aaAlv)) of
                         ((x_aaAlw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaAlw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaAls)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaAlv)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaHfH v_aaHfI
             -> case fromPersistValue v_aaHfI of
                  Left e_aaHfJ -> Left e_aaHfJ
                  Right s'_aaHfK
                    -> case (reads $ (unpack s'_aaHfK)) of
                         ((x_aaHfL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaHfL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaHfH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaHfK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaHnc v_aaHnd
             -> case fromPersistValue v_aaHnd of
                  Left e_aaHne -> Left e_aaHne
                  Right s'_aaHnf
                    -> case (reads $ (unpack s'_aaHnf)) of
                         ((x_aaHng, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaHng
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaHnc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaHnf)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaHvo v_aaHvp
             -> case fromPersistValue v_aaHvp of
                  Left e_aaHvq -> Left e_aaHvq
                  Right s'_aaHvr
                    -> case (reads $ (unpack s'_aaHvr)) of
                         ((x_aaHvs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaHvs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaHvo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaHvr)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaSSX v_aaSSY
             -> case fromPersistValue v_aaSSY of
                  Left e_aaSSZ -> Left e_aaSSZ
                  Right s'_aaST0
                    -> case (reads $ (unpack s'_aaST0)) of
                         ((x_aaST1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaST1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaSSX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaST0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaT0s v_aaT0t
             -> case fromPersistValue v_aaT0t of
                  Left e_aaT0u -> Left e_aaT0u
                  Right s'_aaT0v
                    -> case (reads $ (unpack s'_aaT0v)) of
                         ((x_aaT0w, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaT0w
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaT0s)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaT0v)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaT8E v_aaT8F
             -> case fromPersistValue v_aaT8F of
                  Left e_aaT8G -> Left e_aaT8G
                  Right s'_aaT8H
                    -> case (reads $ (unpack s'_aaT8H)) of
                         ((x_aaT8I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaT8I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaT8E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaT8H)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaTtc v_aaTtd
             -> case fromPersistValue v_aaTtd of
                  Left e_aaTte -> Left e_aaTte
                  Right s'_aaTtf
                    -> case (reads $ (unpack s'_aaTtf)) of
                         ((x_aaTtg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaTtg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaTtc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaTtf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaTAH v_aaTAI
             -> case fromPersistValue v_aaTAI of
                  Left e_aaTAJ -> Left e_aaTAJ
                  Right s'_aaTAK
                    -> case (reads $ (unpack s'_aaTAK)) of
                         ((x_aaTAL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaTAL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaTAH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaTAK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aaTIT v_aaTIU
             -> case fromPersistValue v_aaTIU of
                  Left e_aaTIV -> Left e_aaTIV
                  Right s'_aaTIW
                    -> case (reads $ (unpack s'_aaTIW)) of
                         ((x_aaTIX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aaTIX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aaTIT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aaTIW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ab56s v_ab56t
             -> case fromPersistValue v_ab56t of
                  Left e_ab56u -> Left e_ab56u
                  Right s'_ab56v
                    -> case (reads $ (unpack s'_ab56v)) of
                         ((x_ab56w, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ab56w
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ab56s)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ab56v)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ab5dX v_ab5dY
             -> case fromPersistValue v_ab5dY of
                  Left e_ab5dZ -> Left e_ab5dZ
                  Right s'_ab5e0
                    -> case (reads $ (unpack s'_ab5e0)) of
                         ((x_ab5e1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ab5e1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ab5dX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ab5e0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ab5m9 v_ab5ma
             -> case fromPersistValue v_ab5ma of
                  Left e_ab5mb -> Left e_ab5mb
                  Right s'_ab5mc
                    -> case (reads $ (unpack s'_ab5mc)) of
                         ((x_ab5md, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ab5md
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ab5m9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ab5mc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ab5GH v_ab5GI
             -> case fromPersistValue v_ab5GI of
                  Left e_ab5GJ -> Left e_ab5GJ
                  Right s'_ab5GK
                    -> case (reads $ (unpack s'_ab5GK)) of
                         ((x_ab5GL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ab5GL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ab5GH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ab5GK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ab5Oc v_ab5Od
             -> case fromPersistValue v_ab5Od of
                  Left e_ab5Oe -> Left e_ab5Oe
                  Right s'_ab5Of
                    -> case (reads $ (unpack s'_ab5Of)) of
                         ((x_ab5Og, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ab5Og
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ab5Oc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ab5Of)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ab5Wo v_ab5Wp
             -> case fromPersistValue v_ab5Wp of
                  Left e_ab5Wq -> Left e_ab5Wq
                  Right s'_ab5Wr
                    -> case (reads $ (unpack s'_ab5Wr)) of
                         ((x_ab5Ws, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ab5Ws
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ab5Wo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ab5Wr)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abcRl v_abcRm
             -> case fromPersistValue v_abcRm of
                  Left e_abcRn -> Left e_abcRn
                  Right s'_abcRo
                    -> case (reads $ (unpack s'_abcRo)) of
                         ((x_abcRp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abcRp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abcRl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abcRo)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abcYQ v_abcYR
             -> case fromPersistValue v_abcYR of
                  Left e_abcYS -> Left e_abcYS
                  Right s'_abcYT
                    -> case (reads $ (unpack s'_abcYT)) of
                         ((x_abcYU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abcYU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abcYQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abcYT)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abd72 v_abd73
             -> case fromPersistValue v_abd73 of
                  Left e_abd74 -> Left e_abd74
                  Right s'_abd75
                    -> case (reads $ (unpack s'_abd75)) of
                         ((x_abd76, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abd76
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abd72)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abd75)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abk1Z v_abk20
             -> case fromPersistValue v_abk20 of
                  Left e_abk21 -> Left e_abk21
                  Right s'_abk22
                    -> case (reads $ (unpack s'_abk22)) of
                         ((x_abk23, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abk23
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abk1Z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abk22)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abk9u v_abk9v
             -> case fromPersistValue v_abk9v of
                  Left e_abk9w -> Left e_abk9w
                  Right s'_abk9x
                    -> case (reads $ (unpack s'_abk9x)) of
                         ((x_abk9y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abk9y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abk9u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abk9x)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abkhG v_abkhH
             -> case fromPersistValue v_abkhH of
                  Left e_abkhI -> Left e_abkhI
                  Right s'_abkhJ
                    -> case (reads $ (unpack s'_abkhJ)) of
                         ((x_abkhK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abkhK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abkhG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abkhJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abrbV v_abrbW
             -> case fromPersistValue v_abrbW of
                  Left e_abrbX -> Left e_abrbX
                  Right s'_abrbY
                    -> case (reads $ (unpack s'_abrbY)) of
                         ((x_abrbZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abrbZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abrbV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abrbY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abrjq v_abrjr
             -> case fromPersistValue v_abrjr of
                  Left e_abrjs -> Left e_abrjs
                  Right s'_abrjt
                    -> case (reads $ (unpack s'_abrjt)) of
                         ((x_abrju, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abrju
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abrjq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abrjt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abrrC v_abrrD
             -> case fromPersistValue v_abrrD of
                  Left e_abrrE -> Left e_abrrE
                  Right s'_abrrF
                    -> case (reads $ (unpack s'_abrrF)) of
                         ((x_abrrG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abrrG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abrrC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abrrF)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abylR v_abylS
             -> case fromPersistValue v_abylS of
                  Left e_abylT -> Left e_abylT
                  Right s'_abylU
                    -> case (reads $ (unpack s'_abylU)) of
                         ((x_abylV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abylV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abylR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abylU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abytm v_abytn
             -> case fromPersistValue v_abytn of
                  Left e_abyto -> Left e_abyto
                  Right s'_abytp
                    -> case (reads $ (unpack s'_abytp)) of
                         ((x_abytq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abytq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abytm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abytp)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abyBy v_abyBz
             -> case fromPersistValue v_abyBz of
                  Left e_abyBA -> Left e_abyBA
                  Right s'_abyBB
                    -> case (reads $ (unpack s'_abyBB)) of
                         ((x_abyBC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abyBC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abyBy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abyBB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abJZb v_abJZc
             -> case fromPersistValue v_abJZc of
                  Left e_abJZd -> Left e_abJZd
                  Right s'_abJZe
                    -> case (reads $ (unpack s'_abJZe)) of
                         ((x_abJZf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abJZf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abJZb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abJZe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abK6G v_abK6H
             -> case fromPersistValue v_abK6H of
                  Left e_abK6I -> Left e_abK6I
                  Right s'_abK6J
                    -> case (reads $ (unpack s'_abK6J)) of
                         ((x_abK6K, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abK6K
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abK6G)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abK6J)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abKeS v_abKeT
             -> case fromPersistValue v_abKeT of
                  Left e_abKeU -> Left e_abKeU
                  Right s'_abKeV
                    -> case (reads $ (unpack s'_abKeV)) of
                         ((x_abKeW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abKeW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abKeS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abKeV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abKzz v_abKzA
             -> case fromPersistValue v_abKzA of
                  Left e_abKzB -> Left e_abKzB
                  Right s'_abKzC
                    -> case (reads $ (unpack s'_abKzC)) of
                         ((x_abKzD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abKzD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abKzz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abKzC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abKH4 v_abKH5
             -> case fromPersistValue v_abKH5 of
                  Left e_abKH6 -> Left e_abKH6
                  Right s'_abKH7
                    -> case (reads $ (unpack s'_abKH7)) of
                         ((x_abKH8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abKH8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abKH4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abKH7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abKPg v_abKPh
             -> case fromPersistValue v_abKPh of
                  Left e_abKPi -> Left e_abKPi
                  Right s'_abKPj
                    -> case (reads $ (unpack s'_abKPj)) of
                         ((x_abKPk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abKPk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abKPg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abKPj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWcT v_abWcU
             -> case fromPersistValue v_abWcU of
                  Left e_abWcV -> Left e_abWcV
                  Right s'_abWcW
                    -> case (reads $ (unpack s'_abWcW)) of
                         ((x_abWcX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWcX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWcT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWcW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWko v_abWkp
             -> case fromPersistValue v_abWkp of
                  Left e_abWkq -> Left e_abWkq
                  Right s'_abWkr
                    -> case (reads $ (unpack s'_abWkr)) of
                         ((x_abWks, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWks
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWko)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWkr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWsA v_abWsB
             -> case fromPersistValue v_abWsB of
                  Left e_abWsC -> Left e_abWsC
                  Right s'_abWsD
                    -> case (reads $ (unpack s'_abWsD)) of
                         ((x_abWsE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWsE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWsA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWsD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWN8 v_abWN9
             -> case fromPersistValue v_abWN9 of
                  Left e_abWNa -> Left e_abWNa
                  Right s'_abWNb
                    -> case (reads $ (unpack s'_abWNb)) of
                         ((x_abWNc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWNc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWN8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWNb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abWUD v_abWUE
             -> case fromPersistValue v_abWUE of
                  Left e_abWUF -> Left e_abWUF
                  Right s'_abWUG
                    -> case (reads $ (unpack s'_abWUG)) of
                         ((x_abWUH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abWUH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abWUD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abWUG)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_abX2P v_abX2Q
             -> case fromPersistValue v_abX2Q of
                  Left e_abX2R -> Left e_abX2R
                  Right s'_abX2S
                    -> case (reads $ (unpack s'_abX2S)) of
                         ((x_abX2T, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_abX2T
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_abX2P)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_abX2S)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac8qs v_ac8qt
             -> case fromPersistValue v_ac8qt of
                  Left e_ac8qu -> Left e_ac8qu
                  Right s'_ac8qv
                    -> case (reads $ (unpack s'_ac8qv)) of
                         ((x_ac8qw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac8qw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac8qs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac8qv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac8xX v_ac8xY
             -> case fromPersistValue v_ac8xY of
                  Left e_ac8xZ -> Left e_ac8xZ
                  Right s'_ac8y0
                    -> case (reads $ (unpack s'_ac8y0)) of
                         ((x_ac8y1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac8y1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac8xX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac8y0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac8G9 v_ac8Ga
             -> case fromPersistValue v_ac8Ga of
                  Left e_ac8Gb -> Left e_ac8Gb
                  Right s'_ac8Gc
                    -> case (reads $ (unpack s'_ac8Gc)) of
                         ((x_ac8Gd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac8Gd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac8G9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac8Gc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac90Z v_ac910
             -> case fromPersistValue v_ac910 of
                  Left e_ac911 -> Left e_ac911
                  Right s'_ac912
                    -> case (reads $ (unpack s'_ac912)) of
                         ((x_ac913, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac913
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac90Z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac912)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac98u v_ac98v
             -> case fromPersistValue v_ac98v of
                  Left e_ac98w -> Left e_ac98w
                  Right s'_ac98x
                    -> case (reads $ (unpack s'_ac98x)) of
                         ((x_ac98y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac98y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac98u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac98x)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ac9gG v_ac9gH
             -> case fromPersistValue v_ac9gH of
                  Left e_ac9gI -> Left e_ac9gI
                  Right s'_ac9gJ
                    -> case (reads $ (unpack s'_ac9gJ)) of
                         ((x_ac9gK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ac9gK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ac9gG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ac9gJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ackEj v_ackEk
             -> case fromPersistValue v_ackEk of
                  Left e_ackEl -> Left e_ackEl
                  Right s'_ackEm
                    -> case (reads $ (unpack s'_ackEm)) of
                         ((x_ackEn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ackEn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ackEj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ackEm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ackLO v_ackLP
             -> case fromPersistValue v_ackLP of
                  Left e_ackLQ -> Left e_ackLQ
                  Right s'_ackLR
                    -> case (reads $ (unpack s'_ackLR)) of
                         ((x_ackLS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ackLS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ackLO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ackLR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ackU0 v_ackU1
             -> case fromPersistValue v_ackU1 of
                  Left e_ackU2 -> Left e_ackU2
                  Right s'_ackU3
                    -> case (reads $ (unpack s'_ackU3)) of
                         ((x_ackU4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ackU4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ackU0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ackU3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acleH v_acleI
             -> case fromPersistValue v_acleI of
                  Left e_acleJ -> Left e_acleJ
                  Right s'_acleK
                    -> case (reads $ (unpack s'_acleK)) of
                         ((x_acleL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acleL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acleH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acleK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aclmc v_aclmd
             -> case fromPersistValue v_aclmd of
                  Left e_aclme -> Left e_aclme
                  Right s'_aclmf
                    -> case (reads $ (unpack s'_aclmf)) of
                         ((x_aclmg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aclmg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aclmc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aclmf)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acluo v_aclup
             -> case fromPersistValue v_aclup of
                  Left e_acluq -> Left e_acluq
                  Right s'_aclur
                    -> case (reads $ (unpack s'_aclur)) of
                         ((x_aclus, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aclus
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acluo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aclur)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acwS1 v_acwS2
             -> case fromPersistValue v_acwS2 of
                  Left e_acwS3 -> Left e_acwS3
                  Right s'_acwS4
                    -> case (reads $ (unpack s'_acwS4)) of
                         ((x_acwS5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acwS5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acwS1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acwS4)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acwZw v_acwZx
             -> case fromPersistValue v_acwZx of
                  Left e_acwZy -> Left e_acwZy
                  Right s'_acwZz
                    -> case (reads $ (unpack s'_acwZz)) of
                         ((x_acwZA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acwZA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acwZw)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acwZz)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acx7I v_acx7J
             -> case fromPersistValue v_acx7J of
                  Left e_acx7K -> Left e_acx7K
                  Right s'_acx7L
                    -> case (reads $ (unpack s'_acx7L)) of
                         ((x_acx7M, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acx7M
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acx7I)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acx7L)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acxsE v_acxsF
             -> case fromPersistValue v_acxsF of
                  Left e_acxsG -> Left e_acxsG
                  Right s'_acxsH
                    -> case (reads $ (unpack s'_acxsH)) of
                         ((x_acxsI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acxsI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acxsE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acxsH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acxA9 v_acxAa
             -> case fromPersistValue v_acxAa of
                  Left e_acxAb -> Left e_acxAb
                  Right s'_acxAc
                    -> case (reads $ (unpack s'_acxAc)) of
                         ((x_acxAd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acxAd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acxA9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acxAc)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acxIl v_acxIm
             -> case fromPersistValue v_acxIm of
                  Left e_acxIn -> Left e_acxIn
                  Right s'_acxIo
                    -> case (reads $ (unpack s'_acxIo)) of
                         ((x_acxIp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acxIp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acxIl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acxIo)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acJ5Y v_acJ5Z
             -> case fromPersistValue v_acJ5Z of
                  Left e_acJ60 -> Left e_acJ60
                  Right s'_acJ61
                    -> case (reads $ (unpack s'_acJ61)) of
                         ((x_acJ62, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acJ62
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acJ5Y)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acJ61)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acJdt v_acJdu
             -> case fromPersistValue v_acJdu of
                  Left e_acJdv -> Left e_acJdv
                  Right s'_acJdw
                    -> case (reads $ (unpack s'_acJdw)) of
                         ((x_acJdx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acJdx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acJdt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acJdw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acJlF v_acJlG
             -> case fromPersistValue v_acJlG of
                  Left e_acJlH -> Left e_acJlH
                  Right s'_acJlI
                    -> case (reads $ (unpack s'_acJlI)) of
                         ((x_acJlJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acJlJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acJlF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acJlI)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acJGm v_acJGn
             -> case fromPersistValue v_acJGn of
                  Left e_acJGo -> Left e_acJGo
                  Right s'_acJGp
                    -> case (reads $ (unpack s'_acJGp)) of
                         ((x_acJGq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acJGq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acJGm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acJGp)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acJNR v_acJNS
             -> case fromPersistValue v_acJNS of
                  Left e_acJNT -> Left e_acJNT
                  Right s'_acJNU
                    -> case (reads $ (unpack s'_acJNU)) of
                         ((x_acJNV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acJNV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acJNR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acJNU)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acJW3 v_acJW4
             -> case fromPersistValue v_acJW4 of
                  Left e_acJW5 -> Left e_acJW5
                  Right s'_acJW6
                    -> case (reads $ (unpack s'_acJW6)) of
                         ((x_acJW7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acJW7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acJW3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acJW6)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVjG v_acVjH
             -> case fromPersistValue v_acVjH of
                  Left e_acVjI -> Left e_acVjI
                  Right s'_acVjJ
                    -> case (reads $ (unpack s'_acVjJ)) of
                         ((x_acVjK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVjK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVjG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVjJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVrb v_acVrc
             -> case fromPersistValue v_acVrc of
                  Left e_acVrd -> Left e_acVrd
                  Right s'_acVre
                    -> case (reads $ (unpack s'_acVre)) of
                         ((x_acVrf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVrf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVrb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVre)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVzn v_acVzo
             -> case fromPersistValue v_acVzo of
                  Left e_acVzp -> Left e_acVzp
                  Right s'_acVzq
                    -> case (reads $ (unpack s'_acVzq)) of
                         ((x_acVzr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVzr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVzn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVzq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acVU4 v_acVU5
             -> case fromPersistValue v_acVU5 of
                  Left e_acVU6 -> Left e_acVU6
                  Right s'_acVU7
                    -> case (reads $ (unpack s'_acVU7)) of
                         ((x_acVU8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acVU8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acVU4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acVU7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acW1z v_acW1A
             -> case fromPersistValue v_acW1A of
                  Left e_acW1B -> Left e_acW1B
                  Right s'_acW1C
                    -> case (reads $ (unpack s'_acW1C)) of
                         ((x_acW1D, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acW1D
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acW1z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acW1C)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_acW9L v_acW9M
             -> case fromPersistValue v_acW9M of
                  Left e_acW9N -> Left e_acW9N
                  Right s'_acW9O
                    -> case (reads $ (unpack s'_acW9O)) of
                         ((x_acW9P, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_acW9P
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_acW9L)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_acW9O)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad7xo v_ad7xp
             -> case fromPersistValue v_ad7xp of
                  Left e_ad7xq -> Left e_ad7xq
                  Right s'_ad7xr
                    -> case (reads $ (unpack s'_ad7xr)) of
                         ((x_ad7xs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad7xs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad7xo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad7xr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad7ET v_ad7EU
             -> case fromPersistValue v_ad7EU of
                  Left e_ad7EV -> Left e_ad7EV
                  Right s'_ad7EW
                    -> case (reads $ (unpack s'_ad7EW)) of
                         ((x_ad7EX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad7EX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad7ET)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad7EW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad7N5 v_ad7N6
             -> case fromPersistValue v_ad7N6 of
                  Left e_ad7N7 -> Left e_ad7N7
                  Right s'_ad7N8
                    -> case (reads $ (unpack s'_ad7N8)) of
                         ((x_ad7N9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad7N9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad7N5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad7N8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad87M v_ad87N
             -> case fromPersistValue v_ad87N of
                  Left e_ad87O -> Left e_ad87O
                  Right s'_ad87P
                    -> case (reads $ (unpack s'_ad87P)) of
                         ((x_ad87Q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad87Q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad87M)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad87P)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad8fh v_ad8fi
             -> case fromPersistValue v_ad8fi of
                  Left e_ad8fj -> Left e_ad8fj
                  Right s'_ad8fk
                    -> case (reads $ (unpack s'_ad8fk)) of
                         ((x_ad8fl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad8fl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad8fh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad8fk)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ad8nt v_ad8nu
             -> case fromPersistValue v_ad8nu of
                  Left e_ad8nv -> Left e_ad8nv
                  Right s'_ad8nw
                    -> case (reads $ (unpack s'_ad8nw)) of
                         ((x_ad8nx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ad8nx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ad8nt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ad8nw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adjL6 v_adjL7
             -> case fromPersistValue v_adjL7 of
                  Left e_adjL8 -> Left e_adjL8
                  Right s'_adjL9
                    -> case (reads $ (unpack s'_adjL9)) of
                         ((x_adjLa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adjLa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adjL6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adjL9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adjSB v_adjSC
             -> case fromPersistValue v_adjSC of
                  Left e_adjSD -> Left e_adjSD
                  Right s'_adjSE
                    -> case (reads $ (unpack s'_adjSE)) of
                         ((x_adjSF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adjSF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adjSB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adjSE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adk0N v_adk0O
             -> case fromPersistValue v_adk0O of
                  Left e_adk0P -> Left e_adk0P
                  Right s'_adk0Q
                    -> case (reads $ (unpack s'_adk0Q)) of
                         ((x_adk0R, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adk0R
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adk0N)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adk0Q)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adkll v_adklm
             -> case fromPersistValue v_adklm of
                  Left e_adkln -> Left e_adkln
                  Right s'_adklo
                    -> case (reads $ (unpack s'_adklo)) of
                         ((x_adklp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adklp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adkll)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adklo)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adksQ v_adksR
             -> case fromPersistValue v_adksR of
                  Left e_adksS -> Left e_adksS
                  Right s'_adksT
                    -> case (reads $ (unpack s'_adksT)) of
                         ((x_adksU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adksU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adksQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adksT)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adkB2 v_adkB3
             -> case fromPersistValue v_adkB3 of
                  Left e_adkB4 -> Left e_adkB4
                  Right s'_adkB5
                    -> case (reads $ (unpack s'_adkB5)) of
                         ((x_adkB6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adkB6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adkB2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adkB5)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_advYF v_advYG
             -> case fromPersistValue v_advYG of
                  Left e_advYH -> Left e_advYH
                  Right s'_advYI
                    -> case (reads $ (unpack s'_advYI)) of
                         ((x_advYJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_advYJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_advYF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_advYI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adw6a v_adw6b
             -> case fromPersistValue v_adw6b of
                  Left e_adw6c -> Left e_adw6c
                  Right s'_adw6d
                    -> case (reads $ (unpack s'_adw6d)) of
                         ((x_adw6e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adw6e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adw6a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adw6d)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adwem v_adwen
             -> case fromPersistValue v_adwen of
                  Left e_adweo -> Left e_adweo
                  Right s'_adwep
                    -> case (reads $ (unpack s'_adwep)) of
                         ((x_adweq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adweq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adwem)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adwep)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adwyU v_adwyV
             -> case fromPersistValue v_adwyV of
                  Left e_adwyW -> Left e_adwyW
                  Right s'_adwyX
                    -> case (reads $ (unpack s'_adwyX)) of
                         ((x_adwyY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adwyY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adwyU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adwyX)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adwGp v_adwGq
             -> case fromPersistValue v_adwGq of
                  Left e_adwGr -> Left e_adwGr
                  Right s'_adwGs
                    -> case (reads $ (unpack s'_adwGs)) of
                         ((x_adwGt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adwGt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adwGp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adwGs)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adwOB v_adwOC
             -> case fromPersistValue v_adwOC of
                  Left e_adwOD -> Left e_adwOD
                  Right s'_adwOE
                    -> case (reads $ (unpack s'_adwOE)) of
                         ((x_adwOF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adwOF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adwOB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adwOE)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adIce v_adIcf
             -> case fromPersistValue v_adIcf of
                  Left e_adIcg -> Left e_adIcg
                  Right s'_adIch
                    -> case (reads $ (unpack s'_adIch)) of
                         ((x_adIci, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adIci
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adIce)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adIch)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adIjJ v_adIjK
             -> case fromPersistValue v_adIjK of
                  Left e_adIjL -> Left e_adIjL
                  Right s'_adIjM
                    -> case (reads $ (unpack s'_adIjM)) of
                         ((x_adIjN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adIjN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adIjJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adIjM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adIrV v_adIrW
             -> case fromPersistValue v_adIrW of
                  Left e_adIrX -> Left e_adIrX
                  Right s'_adIrY
                    -> case (reads $ (unpack s'_adIrY)) of
                         ((x_adIrZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adIrZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adIrV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adIrY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adIMC v_adIMD
             -> case fromPersistValue v_adIMD of
                  Left e_adIME -> Left e_adIME
                  Right s'_adIMF
                    -> case (reads $ (unpack s'_adIMF)) of
                         ((x_adIMG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adIMG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adIMC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adIMF)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adIU7 v_adIU8
             -> case fromPersistValue v_adIU8 of
                  Left e_adIU9 -> Left e_adIU9
                  Right s'_adIUa
                    -> case (reads $ (unpack s'_adIUa)) of
                         ((x_adIUb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adIUb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adIU7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adIUa)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adJ2j v_adJ2k
             -> case fromPersistValue v_adJ2k of
                  Left e_adJ2l -> Left e_adJ2l
                  Right s'_adJ2m
                    -> case (reads $ (unpack s'_adJ2m)) of
                         ((x_adJ2n, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adJ2n
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adJ2j)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adJ2m)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adUpW v_adUpX
             -> case fromPersistValue v_adUpX of
                  Left e_adUpY -> Left e_adUpY
                  Right s'_adUpZ
                    -> case (reads $ (unpack s'_adUpZ)) of
                         ((x_adUq0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adUq0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adUpW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adUpZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adUxr v_adUxs
             -> case fromPersistValue v_adUxs of
                  Left e_adUxt -> Left e_adUxt
                  Right s'_adUxu
                    -> case (reads $ (unpack s'_adUxu)) of
                         ((x_adUxv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adUxv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adUxr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adUxu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adUFD v_adUFE
             -> case fromPersistValue v_adUFE of
                  Left e_adUFF -> Left e_adUFF
                  Right s'_adUFG
                    -> case (reads $ (unpack s'_adUFG)) of
                         ((x_adUFH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adUFH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adUFD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adUFG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adV0b v_adV0c
             -> case fromPersistValue v_adV0c of
                  Left e_adV0d -> Left e_adV0d
                  Right s'_adV0e
                    -> case (reads $ (unpack s'_adV0e)) of
                         ((x_adV0f, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adV0f
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adV0b)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adV0e)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adV7G v_adV7H
             -> case fromPersistValue v_adV7H of
                  Left e_adV7I -> Left e_adV7I
                  Right s'_adV7J
                    -> case (reads $ (unpack s'_adV7J)) of
                         ((x_adV7K, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adV7K
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adV7G)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adV7J)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_adVfS v_adVfT
             -> case fromPersistValue v_adVfT of
                  Left e_adVfU -> Left e_adVfU
                  Right s'_adVfV
                    -> case (reads $ (unpack s'_adVfV)) of
                         ((x_adVfW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_adVfW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_adVfS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_adVfV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae6Dv v_ae6Dw
             -> case fromPersistValue v_ae6Dw of
                  Left e_ae6Dx -> Left e_ae6Dx
                  Right s'_ae6Dy
                    -> case (reads $ (unpack s'_ae6Dy)) of
                         ((x_ae6Dz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae6Dz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae6Dv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae6Dy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae6L0 v_ae6L1
             -> case fromPersistValue v_ae6L1 of
                  Left e_ae6L2 -> Left e_ae6L2
                  Right s'_ae6L3
                    -> case (reads $ (unpack s'_ae6L3)) of
                         ((x_ae6L4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae6L4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae6L0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae6L3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae6Tc v_ae6Td
             -> case fromPersistValue v_ae6Td of
                  Left e_ae6Te -> Left e_ae6Te
                  Right s'_ae6Tf
                    -> case (reads $ (unpack s'_ae6Tf)) of
                         ((x_ae6Tg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae6Tg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae6Tc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae6Tf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae7dT v_ae7dU
             -> case fromPersistValue v_ae7dU of
                  Left e_ae7dV -> Left e_ae7dV
                  Right s'_ae7dW
                    -> case (reads $ (unpack s'_ae7dW)) of
                         ((x_ae7dX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae7dX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae7dT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae7dW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae7lo v_ae7lp
             -> case fromPersistValue v_ae7lp of
                  Left e_ae7lq -> Left e_ae7lq
                  Right s'_ae7lr
                    -> case (reads $ (unpack s'_ae7lr)) of
                         ((x_ae7ls, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae7ls
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae7lo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae7lr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ae7tA v_ae7tB
             -> case fromPersistValue v_ae7tB of
                  Left e_ae7tC -> Left e_ae7tC
                  Right s'_ae7tD
                    -> case (reads $ (unpack s'_ae7tD)) of
                         ((x_ae7tE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ae7tE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ae7tA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ae7tD)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeiRd v_aeiRe
             -> case fromPersistValue v_aeiRe of
                  Left e_aeiRf -> Left e_aeiRf
                  Right s'_aeiRg
                    -> case (reads $ (unpack s'_aeiRg)) of
                         ((x_aeiRh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeiRh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeiRd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeiRg)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeiYI v_aeiYJ
             -> case fromPersistValue v_aeiYJ of
                  Left e_aeiYK -> Left e_aeiYK
                  Right s'_aeiYL
                    -> case (reads $ (unpack s'_aeiYL)) of
                         ((x_aeiYM, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeiYM
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeiYI)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeiYL)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aej6U v_aej6V
             -> case fromPersistValue v_aej6V of
                  Left e_aej6W -> Left e_aej6W
                  Right s'_aej6X
                    -> case (reads $ (unpack s'_aej6X)) of
                         ((x_aej6Y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aej6Y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aej6U)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aej6X)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aejrs v_aejrt
             -> case fromPersistValue v_aejrt of
                  Left e_aejru -> Left e_aejru
                  Right s'_aejrv
                    -> case (reads $ (unpack s'_aejrv)) of
                         ((x_aejrw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aejrw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aejrs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aejrv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aejyX v_aejyY
             -> case fromPersistValue v_aejyY of
                  Left e_aejyZ -> Left e_aejyZ
                  Right s'_aejz0
                    -> case (reads $ (unpack s'_aejz0)) of
                         ((x_aejz1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aejz1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aejyX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aejz0)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aejH9 v_aejHa
             -> case fromPersistValue v_aejHa of
                  Left e_aejHb -> Left e_aejHb
                  Right s'_aejHc
                    -> case (reads $ (unpack s'_aejHc)) of
                         ((x_aejHd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aejHd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aejH9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aejHc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aev4M v_aev4N
             -> case fromPersistValue v_aev4N of
                  Left e_aev4O -> Left e_aev4O
                  Right s'_aev4P
                    -> case (reads $ (unpack s'_aev4P)) of
                         ((x_aev4Q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aev4Q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aev4M)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aev4P)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aevch v_aevci
             -> case fromPersistValue v_aevci of
                  Left e_aevcj -> Left e_aevcj
                  Right s'_aevck
                    -> case (reads $ (unpack s'_aevck)) of
                         ((x_aevcl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aevcl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aevch)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aevck)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aevkt v_aevku
             -> case fromPersistValue v_aevku of
                  Left e_aevkv -> Left e_aevkv
                  Right s'_aevkw
                    -> case (reads $ (unpack s'_aevkw)) of
                         ((x_aevkx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aevkx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aevkt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aevkw)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aevFa v_aevFb
             -> case fromPersistValue v_aevFb of
                  Left e_aevFc -> Left e_aevFc
                  Right s'_aevFd
                    -> case (reads $ (unpack s'_aevFd)) of
                         ((x_aevFe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aevFe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aevFa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aevFd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aevMF v_aevMG
             -> case fromPersistValue v_aevMG of
                  Left e_aevMH -> Left e_aevMH
                  Right s'_aevMI
                    -> case (reads $ (unpack s'_aevMI)) of
                         ((x_aevMJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aevMJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aevMF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aevMI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aevUR v_aevUS
             -> case fromPersistValue v_aevUS of
                  Left e_aevUT -> Left e_aevUT
                  Right s'_aevUU
                    -> case (reads $ (unpack s'_aevUU)) of
                         ((x_aevUV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aevUV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aevUR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aevUU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeHiu v_aeHiv
             -> case fromPersistValue v_aeHiv of
                  Left e_aeHiw -> Left e_aeHiw
                  Right s'_aeHix
                    -> case (reads $ (unpack s'_aeHix)) of
                         ((x_aeHiy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeHiy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeHiu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeHix)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeHpZ v_aeHq0
             -> case fromPersistValue v_aeHq0 of
                  Left e_aeHq1 -> Left e_aeHq1
                  Right s'_aeHq2
                    -> case (reads $ (unpack s'_aeHq2)) of
                         ((x_aeHq3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeHq3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeHpZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeHq2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeHyb v_aeHyc
             -> case fromPersistValue v_aeHyc of
                  Left e_aeHyd -> Left e_aeHyd
                  Right s'_aeHye
                    -> case (reads $ (unpack s'_aeHye)) of
                         ((x_aeHyf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeHyf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeHyb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeHye)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeHSJ v_aeHSK
             -> case fromPersistValue v_aeHSK of
                  Left e_aeHSL -> Left e_aeHSL
                  Right s'_aeHSM
                    -> case (reads $ (unpack s'_aeHSM)) of
                         ((x_aeHSN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeHSN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeHSJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeHSM)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeI0e v_aeI0f
             -> case fromPersistValue v_aeI0f of
                  Left e_aeI0g -> Left e_aeI0g
                  Right s'_aeI0h
                    -> case (reads $ (unpack s'_aeI0h)) of
                         ((x_aeI0i, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeI0i
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeI0e)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeI0h)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeI8q v_aeI8r
             -> case fromPersistValue v_aeI8r of
                  Left e_aeI8s -> Left e_aeI8s
                  Right s'_aeI8t
                    -> case (reads $ (unpack s'_aeI8t)) of
                         ((x_aeI8u, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeI8u
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeI8q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeI8t)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeTw3 v_aeTw4
             -> case fromPersistValue v_aeTw4 of
                  Left e_aeTw5 -> Left e_aeTw5
                  Right s'_aeTw6
                    -> case (reads $ (unpack s'_aeTw6)) of
                         ((x_aeTw7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeTw7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeTw3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeTw6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeTDy v_aeTDz
             -> case fromPersistValue v_aeTDz of
                  Left e_aeTDA -> Left e_aeTDA
                  Right s'_aeTDB
                    -> case (reads $ (unpack s'_aeTDB)) of
                         ((x_aeTDC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeTDC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeTDy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeTDB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeTLK v_aeTLL
             -> case fromPersistValue v_aeTLL of
                  Left e_aeTLM -> Left e_aeTLM
                  Right s'_aeTLN
                    -> case (reads $ (unpack s'_aeTLN)) of
                         ((x_aeTLO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeTLO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeTLK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeTLN)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeU6r v_aeU6s
             -> case fromPersistValue v_aeU6s of
                  Left e_aeU6t -> Left e_aeU6t
                  Right s'_aeU6u
                    -> case (reads $ (unpack s'_aeU6u)) of
                         ((x_aeU6v, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeU6v
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeU6r)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeU6u)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeUdW v_aeUdX
             -> case fromPersistValue v_aeUdX of
                  Left e_aeUdY -> Left e_aeUdY
                  Right s'_aeUdZ
                    -> case (reads $ (unpack s'_aeUdZ)) of
                         ((x_aeUe0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeUe0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeUdW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeUdZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aeUm8 v_aeUm9
             -> case fromPersistValue v_aeUm9 of
                  Left e_aeUma -> Left e_aeUma
                  Right s'_aeUmb
                    -> case (reads $ (unpack s'_aeUmb)) of
                         ((x_aeUmc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aeUmc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aeUm8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aeUmb)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af5Jz v_af5JA
             -> case fromPersistValue v_af5JA of
                  Left e_af5JB -> Left e_af5JB
                  Right s'_af5JC
                    -> case (reads $ (unpack s'_af5JC)) of
                         ((x_af5JD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af5JD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af5Jz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af5JC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af5R4 v_af5R5
             -> case fromPersistValue v_af5R5 of
                  Left e_af5R6 -> Left e_af5R6
                  Right s'_af5R7
                    -> case (reads $ (unpack s'_af5R7)) of
                         ((x_af5R8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af5R8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af5R4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af5R7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af5Zg v_af5Zh
             -> case fromPersistValue v_af5Zh of
                  Left e_af5Zi -> Left e_af5Zi
                  Right s'_af5Zj
                    -> case (reads $ (unpack s'_af5Zj)) of
                         ((x_af5Zk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af5Zk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af5Zg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af5Zj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af6kb v_af6kc
             -> case fromPersistValue v_af6kc of
                  Left e_af6kd -> Left e_af6kd
                  Right s'_af6ke
                    -> case (reads $ (unpack s'_af6ke)) of
                         ((x_af6kf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af6kf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af6kb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af6ke)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af6rG v_af6rH
             -> case fromPersistValue v_af6rH of
                  Left e_af6rI -> Left e_af6rI
                  Right s'_af6rJ
                    -> case (reads $ (unpack s'_af6rJ)) of
                         ((x_af6rK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af6rK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af6rG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af6rJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_af6zS v_af6zT
             -> case fromPersistValue v_af6zT of
                  Left e_af6zU -> Left e_af6zU
                  Right s'_af6zV
                    -> case (reads $ (unpack s'_af6zV)) of
                         ((x_af6zW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_af6zW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_af6zS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_af6zV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afhXv v_afhXw
             -> case fromPersistValue v_afhXw of
                  Left e_afhXx -> Left e_afhXx
                  Right s'_afhXy
                    -> case (reads $ (unpack s'_afhXy)) of
                         ((x_afhXz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afhXz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afhXv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afhXy)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afi50 v_afi51
             -> case fromPersistValue v_afi51 of
                  Left e_afi52 -> Left e_afi52
                  Right s'_afi53
                    -> case (reads $ (unpack s'_afi53)) of
                         ((x_afi54, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afi54
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afi50)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afi53)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afidc v_afidd
             -> case fromPersistValue v_afidd of
                  Left e_afide -> Left e_afide
                  Right s'_afidf
                    -> case (reads $ (unpack s'_afidf)) of
                         ((x_afidg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afidg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afidc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afidf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afiBe v_afiBf
             -> case fromPersistValue v_afiBf of
                  Left e_afiBg -> Left e_afiBg
                  Right s'_afiBh
                    -> case (reads $ (unpack s'_afiBh)) of
                         ((x_afiBi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afiBi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afiBe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afiBh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afiIJ v_afiIK
             -> case fromPersistValue v_afiIK of
                  Left e_afiIL -> Left e_afiIL
                  Right s'_afiIM
                    -> case (reads $ (unpack s'_afiIM)) of
                         ((x_afiIN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afiIN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afiIJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afiIM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afiQV v_afiQW
             -> case fromPersistValue v_afiQW of
                  Left e_afiQX -> Left e_afiQX
                  Right s'_afiQY
                    -> case (reads $ (unpack s'_afiQY)) of
                         ((x_afiQZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afiQZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afiQV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afiQY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afuey v_afuez
             -> case fromPersistValue v_afuez of
                  Left e_afueA -> Left e_afueA
                  Right s'_afueB
                    -> case (reads $ (unpack s'_afueB)) of
                         ((x_afueC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afueC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afuey)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afueB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afum3 v_afum4
             -> case fromPersistValue v_afum4 of
                  Left e_afum5 -> Left e_afum5
                  Right s'_afum6
                    -> case (reads $ (unpack s'_afum6)) of
                         ((x_afum7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afum7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afum3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afum6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afuuf v_afuug
             -> case fromPersistValue v_afuug of
                  Left e_afuuh -> Left e_afuuh
                  Right s'_afuui
                    -> case (reads $ (unpack s'_afuui)) of
                         ((x_afuuj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afuuj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afuuf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afuui)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afuON v_afuOO
             -> case fromPersistValue v_afuOO of
                  Left e_afuOP -> Left e_afuOP
                  Right s'_afuOQ
                    -> case (reads $ (unpack s'_afuOQ)) of
                         ((x_afuOR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afuOR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afuON)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afuOQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afuWi v_afuWj
             -> case fromPersistValue v_afuWj of
                  Left e_afuWk -> Left e_afuWk
                  Right s'_afuWl
                    -> case (reads $ (unpack s'_afuWl)) of
                         ((x_afuWm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afuWm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afuWi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afuWl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afv4u v_afv4v
             -> case fromPersistValue v_afv4v of
                  Left e_afv4w -> Left e_afv4w
                  Right s'_afv4x
                    -> case (reads $ (unpack s'_afv4x)) of
                         ((x_afv4y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afv4y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afv4u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afv4x)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afGs7 v_afGs8
             -> case fromPersistValue v_afGs8 of
                  Left e_afGs9 -> Left e_afGs9
                  Right s'_afGsa
                    -> case (reads $ (unpack s'_afGsa)) of
                         ((x_afGsb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afGsb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afGs7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afGsa)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afGzC v_afGzD
             -> case fromPersistValue v_afGzD of
                  Left e_afGzE -> Left e_afGzE
                  Right s'_afGzF
                    -> case (reads $ (unpack s'_afGzF)) of
                         ((x_afGzG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afGzG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afGzC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afGzF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afGHO v_afGHP
             -> case fromPersistValue v_afGHP of
                  Left e_afGHQ -> Left e_afGHQ
                  Right s'_afGHR
                    -> case (reads $ (unpack s'_afGHR)) of
                         ((x_afGHS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afGHS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afGHO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afGHR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afH5Q v_afH5R
             -> case fromPersistValue v_afH5R of
                  Left e_afH5S -> Left e_afH5S
                  Right s'_afH5T
                    -> case (reads $ (unpack s'_afH5T)) of
                         ((x_afH5U, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afH5U
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afH5Q)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afH5T)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afHdl v_afHdm
             -> case fromPersistValue v_afHdm of
                  Left e_afHdn -> Left e_afHdn
                  Right s'_afHdo
                    -> case (reads $ (unpack s'_afHdo)) of
                         ((x_afHdp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afHdp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afHdl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afHdo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afHlx v_afHly
             -> case fromPersistValue v_afHly of
                  Left e_afHlz -> Left e_afHlz
                  Right s'_afHlA
                    -> case (reads $ (unpack s'_afHlA)) of
                         ((x_afHlB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afHlB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afHlx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afHlA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afOjk v_afOjl
             -> case fromPersistValue v_afOjl of
                  Left e_afOjm -> Left e_afOjm
                  Right s'_afOjn
                    -> case (reads $ (unpack s'_afOjn)) of
                         ((x_afOjo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afOjo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afOjk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afOjn)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afOqP v_afOqQ
             -> case fromPersistValue v_afOqQ of
                  Left e_afOqR -> Left e_afOqR
                  Right s'_afOqS
                    -> case (reads $ (unpack s'_afOqS)) of
                         ((x_afOqT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afOqT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afOqP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afOqS)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afOz1 v_afOz2
             -> case fromPersistValue v_afOz2 of
                  Left e_afOz3 -> Left e_afOz3
                  Right s'_afOz4
                    -> case (reads $ (unpack s'_afOz4)) of
                         ((x_afOz5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afOz5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afOz1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afOz4)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afVwO v_afVwP
             -> case fromPersistValue v_afVwP of
                  Left e_afVwQ -> Left e_afVwQ
                  Right s'_afVwR
                    -> case (reads $ (unpack s'_afVwR)) of
                         ((x_afVwS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afVwS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afVwO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afVwR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afVEj v_afVEk
             -> case fromPersistValue v_afVEk of
                  Left e_afVEl -> Left e_afVEl
                  Right s'_afVEm
                    -> case (reads $ (unpack s'_afVEm)) of
                         ((x_afVEn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afVEn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afVEj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afVEm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_afVMv v_afVMw
             -> case fromPersistValue v_afVMw of
                  Left e_afVMx -> Left e_afVMx
                  Right s'_afVMy
                    -> case (reads $ (unpack s'_afVMy)) of
                         ((x_afVMz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_afVMz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_afVMv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_afVMy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ag2Ki v_ag2Kj
             -> case fromPersistValue v_ag2Kj of
                  Left e_ag2Kk -> Left e_ag2Kk
                  Right s'_ag2Kl
                    -> case (reads $ (unpack s'_ag2Kl)) of
                         ((x_ag2Km, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ag2Km
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ag2Ki)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ag2Kl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ag2RN v_ag2RO
             -> case fromPersistValue v_ag2RO of
                  Left e_ag2RP -> Left e_ag2RP
                  Right s'_ag2RQ
                    -> case (reads $ (unpack s'_ag2RQ)) of
                         ((x_ag2RR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ag2RR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ag2RN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ag2RQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ag2ZZ v_ag300
             -> case fromPersistValue v_ag300 of
                  Left e_ag301 -> Left e_ag301
                  Right s'_ag302
                    -> case (reads $ (unpack s'_ag302)) of
                         ((x_ag303, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ag303
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ag2ZZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ag302)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ag9XN v_ag9XO
             -> case fromPersistValue v_ag9XO of
                  Left e_ag9XP -> Left e_ag9XP
                  Right s'_ag9XQ
                    -> case (reads $ (unpack s'_ag9XQ)) of
                         ((x_ag9XR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ag9XR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ag9XN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ag9XQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aga5i v_aga5j
             -> case fromPersistValue v_aga5j of
                  Left e_aga5k -> Left e_aga5k
                  Right s'_aga5l
                    -> case (reads $ (unpack s'_aga5l)) of
                         ((x_aga5m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aga5m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aga5i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aga5l)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agadu v_agadv
             -> case fromPersistValue v_agadv of
                  Left e_agadw -> Left e_agadw
                  Right s'_agadx
                    -> case (reads $ (unpack s'_agadx)) of
                         ((x_agady, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agady
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agadu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agadx)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aghbh v_aghbi
             -> case fromPersistValue v_aghbi of
                  Left e_aghbj -> Left e_aghbj
                  Right s'_aghbk
                    -> case (reads $ (unpack s'_aghbk)) of
                         ((x_aghbl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aghbl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aghbh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aghbk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aghiM v_aghiN
             -> case fromPersistValue v_aghiN of
                  Left e_aghiO -> Left e_aghiO
                  Right s'_aghiP
                    -> case (reads $ (unpack s'_aghiP)) of
                         ((x_aghiQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aghiQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aghiM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aghiP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aghqY v_aghqZ
             -> case fromPersistValue v_aghqZ of
                  Left e_aghr0 -> Left e_aghr0
                  Right s'_aghr1
                    -> case (reads $ (unpack s'_aghr1)) of
                         ((x_aghr2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aghr2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aghqY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aghr1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agos6 v_agos7
             -> case fromPersistValue v_agos7 of
                  Left e_agos8 -> Left e_agos8
                  Right s'_agos9
                    -> case (reads $ (unpack s'_agos9)) of
                         ((x_agosa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agosa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agos6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agos9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agozB v_agozC
             -> case fromPersistValue v_agozC of
                  Left e_agozD -> Left e_agozD
                  Right s'_agozE
                    -> case (reads $ (unpack s'_agozE)) of
                         ((x_agozF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agozF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agozB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agozE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agoHN v_agoHO
             -> case fromPersistValue v_agoHO of
                  Left e_agoHP -> Left e_agoHP
                  Right s'_agoHQ
                    -> case (reads $ (unpack s'_agoHQ)) of
                         ((x_agoHR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agoHR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agoHN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agoHQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agvFz v_agvFA
             -> case fromPersistValue v_agvFA of
                  Left e_agvFB -> Left e_agvFB
                  Right s'_agvFC
                    -> case (reads $ (unpack s'_agvFC)) of
                         ((x_agvFD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agvFD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agvFz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agvFC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agvN4 v_agvN5
             -> case fromPersistValue v_agvN5 of
                  Left e_agvN6 -> Left e_agvN6
                  Right s'_agvN7
                    -> case (reads $ (unpack s'_agvN7)) of
                         ((x_agvN8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agvN8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agvN4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agvN7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agvVg v_agvVh
             -> case fromPersistValue v_agvVh of
                  Left e_agvVi -> Left e_agvVi
                  Right s'_agvVj
                    -> case (reads $ (unpack s'_agvVj)) of
                         ((x_agvVk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agvVk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agvVg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agvVj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agCT2 v_agCT3
             -> case fromPersistValue v_agCT3 of
                  Left e_agCT4 -> Left e_agCT4
                  Right s'_agCT5
                    -> case (reads $ (unpack s'_agCT5)) of
                         ((x_agCT6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agCT6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agCT2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agCT5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agD0x v_agD0y
             -> case fromPersistValue v_agD0y of
                  Left e_agD0z -> Left e_agD0z
                  Right s'_agD0A
                    -> case (reads $ (unpack s'_agD0A)) of
                         ((x_agD0B, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agD0B
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agD0x)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agD0A)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agD8J v_agD8K
             -> case fromPersistValue v_agD8K of
                  Left e_agD8L -> Left e_agD8L
                  Right s'_agD8M
                    -> case (reads $ (unpack s'_agD8M)) of
                         ((x_agD8N, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agD8N
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agD8J)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agD8M)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agK6v v_agK6w
             -> case fromPersistValue v_agK6w of
                  Left e_agK6x -> Left e_agK6x
                  Right s'_agK6y
                    -> case (reads $ (unpack s'_agK6y)) of
                         ((x_agK6z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agK6z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agK6v)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agK6y)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agKe0 v_agKe1
             -> case fromPersistValue v_agKe1 of
                  Left e_agKe2 -> Left e_agKe2
                  Right s'_agKe3
                    -> case (reads $ (unpack s'_agKe3)) of
                         ((x_agKe4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agKe4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agKe0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agKe3)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agKmc v_agKmd
             -> case fromPersistValue v_agKmd of
                  Left e_agKme -> Left e_agKme
                  Right s'_agKmf
                    -> case (reads $ (unpack s'_agKmf)) of
                         ((x_agKmg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agKmg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agKmc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agKmf)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agRjY v_agRjZ
             -> case fromPersistValue v_agRjZ of
                  Left e_agRk0 -> Left e_agRk0
                  Right s'_agRk1
                    -> case (reads $ (unpack s'_agRk1)) of
                         ((x_agRk2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agRk2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agRjY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agRk1)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agRrt v_agRru
             -> case fromPersistValue v_agRru of
                  Left e_agRrv -> Left e_agRrv
                  Right s'_agRrw
                    -> case (reads $ (unpack s'_agRrw)) of
                         ((x_agRrx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agRrx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agRrt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agRrw)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agRzF v_agRzG
             -> case fromPersistValue v_agRzG of
                  Left e_agRzH -> Left e_agRzH
                  Right s'_agRzI
                    -> case (reads $ (unpack s'_agRzI)) of
                         ((x_agRzJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agRzJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agRzF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agRzI)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agYx2 v_agYx3
             -> case fromPersistValue v_agYx3 of
                  Left e_agYx4 -> Left e_agYx4
                  Right s'_agYx5
                    -> case (reads $ (unpack s'_agYx5)) of
                         ((x_agYx6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agYx6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agYx2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agYx5)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agYEx v_agYEy
             -> case fromPersistValue v_agYEy of
                  Left e_agYEz -> Left e_agYEz
                  Right s'_agYEA
                    -> case (reads $ (unpack s'_agYEA)) of
                         ((x_agYEB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agYEB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agYEx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agYEA)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_agYMJ v_agYMK
             -> case fromPersistValue v_agYMK of
                  Left e_agYML -> Left e_agYML
                  Right s'_agYMM
                    -> case (reads $ (unpack s'_agYMM)) of
                         ((x_agYMN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_agYMN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_agYMJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_agYMM)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ah5K5 v_ah5K6
             -> case fromPersistValue v_ah5K6 of
                  Left e_ah5K7 -> Left e_ah5K7
                  Right s'_ah5K8
                    -> case (reads $ (unpack s'_ah5K8)) of
                         ((x_ah5K9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ah5K9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ah5K5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ah5K8)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ah5RA v_ah5RB
             -> case fromPersistValue v_ah5RB of
                  Left e_ah5RC -> Left e_ah5RC
                  Right s'_ah5RD
                    -> case (reads $ (unpack s'_ah5RD)) of
                         ((x_ah5RE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ah5RE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ah5RA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ah5RD)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ah5ZM v_ah5ZN
             -> case fromPersistValue v_ah5ZN of
                  Left e_ah5ZO -> Left e_ah5ZO
                  Right s'_ah5ZP
                    -> case (reads $ (unpack s'_ah5ZP)) of
                         ((x_ah5ZQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ah5ZQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ah5ZM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ah5ZP)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahcX8 v_ahcX9
             -> case fromPersistValue v_ahcX9 of
                  Left e_ahcXa -> Left e_ahcXa
                  Right s'_ahcXb
                    -> case (reads $ (unpack s'_ahcXb)) of
                         ((x_ahcXc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahcXc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahcX8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahcXb)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahd4D v_ahd4E
             -> case fromPersistValue v_ahd4E of
                  Left e_ahd4F -> Left e_ahd4F
                  Right s'_ahd4G
                    -> case (reads $ (unpack s'_ahd4G)) of
                         ((x_ahd4H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahd4H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahd4D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahd4G)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahdcP v_ahdcQ
             -> case fromPersistValue v_ahdcQ of
                  Left e_ahdcR -> Left e_ahdcR
                  Right s'_ahdcS
                    -> case (reads $ (unpack s'_ahdcS)) of
                         ((x_ahdcT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahdcT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahdcP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahdcS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahkaB v_ahkaC
             -> case fromPersistValue v_ahkaC of
                  Left e_ahkaD -> Left e_ahkaD
                  Right s'_ahkaE
                    -> case (reads $ (unpack s'_ahkaE)) of
                         ((x_ahkaF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahkaF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahkaB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahkaE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahki6 v_ahki7
             -> case fromPersistValue v_ahki7 of
                  Left e_ahki8 -> Left e_ahki8
                  Right s'_ahki9
                    -> case (reads $ (unpack s'_ahki9)) of
                         ((x_ahkia, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahkia
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahki6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahki9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahkqi v_ahkqj
             -> case fromPersistValue v_ahkqj of
                  Left e_ahkqk -> Left e_ahkqk
                  Right s'_ahkql
                    -> case (reads $ (unpack s'_ahkql)) of
                         ((x_ahkqm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahkqm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahkqi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahkql)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahro4 v_ahro5
             -> case fromPersistValue v_ahro5 of
                  Left e_ahro6 -> Left e_ahro6
                  Right s'_ahro7
                    -> case (reads $ (unpack s'_ahro7)) of
                         ((x_ahro8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahro8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahro4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahro7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahrvz v_ahrvA
             -> case fromPersistValue v_ahrvA of
                  Left e_ahrvB -> Left e_ahrvB
                  Right s'_ahrvC
                    -> case (reads $ (unpack s'_ahrvC)) of
                         ((x_ahrvD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahrvD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahrvz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahrvC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahrDL v_ahrDM
             -> case fromPersistValue v_ahrDM of
                  Left e_ahrDN -> Left e_ahrDN
                  Right s'_ahrDO
                    -> case (reads $ (unpack s'_ahrDO)) of
                         ((x_ahrDP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahrDP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahrDL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahrDO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahyBx v_ahyBy
             -> case fromPersistValue v_ahyBy of
                  Left e_ahyBz -> Left e_ahyBz
                  Right s'_ahyBA
                    -> case (reads $ (unpack s'_ahyBA)) of
                         ((x_ahyBB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahyBB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahyBx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahyBA)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahyJ2 v_ahyJ3
             -> case fromPersistValue v_ahyJ3 of
                  Left e_ahyJ4 -> Left e_ahyJ4
                  Right s'_ahyJ5
                    -> case (reads $ (unpack s'_ahyJ5)) of
                         ((x_ahyJ6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahyJ6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahyJ2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahyJ5)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahyRe v_ahyRf
             -> case fromPersistValue v_ahyRf of
                  Left e_ahyRg -> Left e_ahyRg
                  Right s'_ahyRh
                    -> case (reads $ (unpack s'_ahyRh)) of
                         ((x_ahyRi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahyRi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahyRe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahyRh)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahFOB v_ahFOC
             -> case fromPersistValue v_ahFOC of
                  Left e_ahFOD -> Left e_ahFOD
                  Right s'_ahFOE
                    -> case (reads $ (unpack s'_ahFOE)) of
                         ((x_ahFOF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahFOF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahFOB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahFOE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahFW6 v_ahFW7
             -> case fromPersistValue v_ahFW7 of
                  Left e_ahFW8 -> Left e_ahFW8
                  Right s'_ahFW9
                    -> case (reads $ (unpack s'_ahFW9)) of
                         ((x_ahFWa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahFWa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahFW6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahFW9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahG4i v_ahG4j
             -> case fromPersistValue v_ahG4j of
                  Left e_ahG4k -> Left e_ahG4k
                  Right s'_ahG4l
                    -> case (reads $ (unpack s'_ahG4l)) of
                         ((x_ahG4m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahG4m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahG4i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahG4l)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahN1F v_ahN1G
             -> case fromPersistValue v_ahN1G of
                  Left e_ahN1H -> Left e_ahN1H
                  Right s'_ahN1I
                    -> case (reads $ (unpack s'_ahN1I)) of
                         ((x_ahN1J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahN1J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahN1F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahN1I)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahN9a v_ahN9b
             -> case fromPersistValue v_ahN9b of
                  Left e_ahN9c -> Left e_ahN9c
                  Right s'_ahN9d
                    -> case (reads $ (unpack s'_ahN9d)) of
                         ((x_ahN9e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahN9e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahN9a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahN9d)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahNhm v_ahNhn
             -> case fromPersistValue v_ahNhn of
                  Left e_ahNho -> Left e_ahNho
                  Right s'_ahNhp
                    -> case (reads $ (unpack s'_ahNhp)) of
                         ((x_ahNhq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahNhq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahNhm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahNhp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahUfa v_ahUfb
             -> case fromPersistValue v_ahUfb of
                  Left e_ahUfc -> Left e_ahUfc
                  Right s'_ahUfd
                    -> case (reads $ (unpack s'_ahUfd)) of
                         ((x_ahUfe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahUfe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahUfa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahUfd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahUmF v_ahUmG
             -> case fromPersistValue v_ahUmG of
                  Left e_ahUmH -> Left e_ahUmH
                  Right s'_ahUmI
                    -> case (reads $ (unpack s'_ahUmI)) of
                         ((x_ahUmJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahUmJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahUmF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahUmI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ahUuR v_ahUuS
             -> case fromPersistValue v_ahUuS of
                  Left e_ahUuT -> Left e_ahUuT
                  Right s'_ahUuU
                    -> case (reads $ (unpack s'_ahUuU)) of
                         ((x_ahUuV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ahUuV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ahUuR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ahUuU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai1sE v_ai1sF
             -> case fromPersistValue v_ai1sF of
                  Left e_ai1sG -> Left e_ai1sG
                  Right s'_ai1sH
                    -> case (reads $ (unpack s'_ai1sH)) of
                         ((x_ai1sI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai1sI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai1sE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai1sH)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai1A9 v_ai1Aa
             -> case fromPersistValue v_ai1Aa of
                  Left e_ai1Ab -> Left e_ai1Ab
                  Right s'_ai1Ac
                    -> case (reads $ (unpack s'_ai1Ac)) of
                         ((x_ai1Ad, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai1Ad
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai1A9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai1Ac)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai1Il v_ai1Im
             -> case fromPersistValue v_ai1Im of
                  Left e_ai1In -> Left e_ai1In
                  Right s'_ai1Io
                    -> case (reads $ (unpack s'_ai1Io)) of
                         ((x_ai1Ip, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai1Ip
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai1Il)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai1Io)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai8G7 v_ai8G8
             -> case fromPersistValue v_ai8G8 of
                  Left e_ai8G9 -> Left e_ai8G9
                  Right s'_ai8Ga
                    -> case (reads $ (unpack s'_ai8Ga)) of
                         ((x_ai8Gb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai8Gb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai8G7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai8Ga)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai8NC v_ai8ND
             -> case fromPersistValue v_ai8ND of
                  Left e_ai8NE -> Left e_ai8NE
                  Right s'_ai8NF
                    -> case (reads $ (unpack s'_ai8NF)) of
                         ((x_ai8NG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai8NG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai8NC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai8NF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ai8VO v_ai8VP
             -> case fromPersistValue v_ai8VP of
                  Left e_ai8VQ -> Left e_ai8VQ
                  Right s'_ai8VR
                    -> case (reads $ (unpack s'_ai8VR)) of
                         ((x_ai8VS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ai8VS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ai8VO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ai8VR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aifZ6 v_aifZ7
             -> case fromPersistValue v_aifZ7 of
                  Left e_aifZ8 -> Left e_aifZ8
                  Right s'_aifZ9
                    -> case (reads $ (unpack s'_aifZ9)) of
                         ((x_aifZa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aifZa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aifZ6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aifZ9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aig6B v_aig6C
             -> case fromPersistValue v_aig6C of
                  Left e_aig6D -> Left e_aig6D
                  Right s'_aig6E
                    -> case (reads $ (unpack s'_aig6E)) of
                         ((x_aig6F, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aig6F
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aig6B)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aig6E)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aigeN v_aigeO
             -> case fromPersistValue v_aigeO of
                  Left e_aigeP -> Left e_aigeP
                  Right s'_aigeQ
                    -> case (reads $ (unpack s'_aigeQ)) of
                         ((x_aigeR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aigeR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aigeN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aigeQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ainhX v_ainhY
             -> case fromPersistValue v_ainhY of
                  Left e_ainhZ -> Left e_ainhZ
                  Right s'_aini0
                    -> case (reads $ (unpack s'_aini0)) of
                         ((x_aini1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aini1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ainhX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aini0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ainps v_ainpt
             -> case fromPersistValue v_ainpt of
                  Left e_ainpu -> Left e_ainpu
                  Right s'_ainpv
                    -> case (reads $ (unpack s'_ainpv)) of
                         ((x_ainpw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ainpw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ainps)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ainpv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ainxE v_ainxF
             -> case fromPersistValue v_ainxF of
                  Left e_ainxG -> Left e_ainxG
                  Right s'_ainxH
                    -> case (reads $ (unpack s'_ainxH)) of
                         ((x_ainxI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ainxI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ainxE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ainxH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiuv0 v_aiuv1
             -> case fromPersistValue v_aiuv1 of
                  Left e_aiuv2 -> Left e_aiuv2
                  Right s'_aiuv3
                    -> case (reads $ (unpack s'_aiuv3)) of
                         ((x_aiuv4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiuv4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiuv0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiuv3)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiuCv v_aiuCw
             -> case fromPersistValue v_aiuCw of
                  Left e_aiuCx -> Left e_aiuCx
                  Right s'_aiuCy
                    -> case (reads $ (unpack s'_aiuCy)) of
                         ((x_aiuCz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiuCz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiuCv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiuCy)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiuKH v_aiuKI
             -> case fromPersistValue v_aiuKI of
                  Left e_aiuKJ -> Left e_aiuKJ
                  Right s'_aiuKK
                    -> case (reads $ (unpack s'_aiuKK)) of
                         ((x_aiuKL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiuKL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiuKH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiuKK)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiBI3 v_aiBI4
             -> case fromPersistValue v_aiBI4 of
                  Left e_aiBI5 -> Left e_aiBI5
                  Right s'_aiBI6
                    -> case (reads $ (unpack s'_aiBI6)) of
                         ((x_aiBI7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiBI7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiBI3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiBI6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiBPy v_aiBPz
             -> case fromPersistValue v_aiBPz of
                  Left e_aiBPA -> Left e_aiBPA
                  Right s'_aiBPB
                    -> case (reads $ (unpack s'_aiBPB)) of
                         ((x_aiBPC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiBPC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiBPy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiBPB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiBXK v_aiBXL
             -> case fromPersistValue v_aiBXL of
                  Left e_aiBXM -> Left e_aiBXM
                  Right s'_aiBXN
                    -> case (reads $ (unpack s'_aiBXN)) of
                         ((x_aiBXO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiBXO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiBXK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiBXN)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiJ10 v_aiJ11
             -> case fromPersistValue v_aiJ11 of
                  Left e_aiJ12 -> Left e_aiJ12
                  Right s'_aiJ13
                    -> case (reads $ (unpack s'_aiJ13)) of
                         ((x_aiJ14, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiJ14
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiJ10)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiJ13)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiJ8v v_aiJ8w
             -> case fromPersistValue v_aiJ8w of
                  Left e_aiJ8x -> Left e_aiJ8x
                  Right s'_aiJ8y
                    -> case (reads $ (unpack s'_aiJ8y)) of
                         ((x_aiJ8z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiJ8z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiJ8v)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiJ8y)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiJgH v_aiJgI
             -> case fromPersistValue v_aiJgI of
                  Left e_aiJgJ -> Left e_aiJgJ
                  Right s'_aiJgK
                    -> case (reads $ (unpack s'_aiJgK)) of
                         ((x_aiJgL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiJgL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiJgH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiJgK)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiUEk v_aiUEl
             -> case fromPersistValue v_aiUEl of
                  Left e_aiUEm -> Left e_aiUEm
                  Right s'_aiUEn
                    -> case (reads $ (unpack s'_aiUEn)) of
                         ((x_aiUEo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiUEo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiUEk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiUEn)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiULP v_aiULQ
             -> case fromPersistValue v_aiULQ of
                  Left e_aiULR -> Left e_aiULR
                  Right s'_aiULS
                    -> case (reads $ (unpack s'_aiULS)) of
                         ((x_aiULT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiULT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiULP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiULS)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiUU1 v_aiUU2
             -> case fromPersistValue v_aiUU2 of
                  Left e_aiUU3 -> Left e_aiUU3
                  Right s'_aiUU4
                    -> case (reads $ (unpack s'_aiUU4)) of
                         ((x_aiUU5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiUU5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiUU1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiUU4)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiVfe v_aiVff
             -> case fromPersistValue v_aiVff of
                  Left e_aiVfg -> Left e_aiVfg
                  Right s'_aiVfh
                    -> case (reads $ (unpack s'_aiVfh)) of
                         ((x_aiVfi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiVfi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiVfe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiVfh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiVmJ v_aiVmK
             -> case fromPersistValue v_aiVmK of
                  Left e_aiVmL -> Left e_aiVmL
                  Right s'_aiVmM
                    -> case (reads $ (unpack s'_aiVmM)) of
                         ((x_aiVmN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiVmN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiVmJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiVmM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aiVuV v_aiVuW
             -> case fromPersistValue v_aiVuW of
                  Left e_aiVuX -> Left e_aiVuX
                  Right s'_aiVuY
                    -> case (reads $ (unpack s'_aiVuY)) of
                         ((x_aiVuZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aiVuZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aiVuV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aiVuY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj2zj v_aj2zk
             -> case fromPersistValue v_aj2zk of
                  Left e_aj2zl -> Left e_aj2zl
                  Right s'_aj2zm
                    -> case (reads $ (unpack s'_aj2zm)) of
                         ((x_aj2zn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj2zn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj2zj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj2zm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj2GO v_aj2GP
             -> case fromPersistValue v_aj2GP of
                  Left e_aj2GQ -> Left e_aj2GQ
                  Right s'_aj2GR
                    -> case (reads $ (unpack s'_aj2GR)) of
                         ((x_aj2GS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj2GS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj2GO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj2GR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj2P0 v_aj2P1
             -> case fromPersistValue v_aj2P1 of
                  Left e_aj2P2 -> Left e_aj2P2
                  Right s'_aj2P3
                    -> case (reads $ (unpack s'_aj2P3)) of
                         ((x_aj2P4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj2P4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj2P0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj2P3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj9Ot v_aj9Ou
             -> case fromPersistValue v_aj9Ou of
                  Left e_aj9Ov -> Left e_aj9Ov
                  Right s'_aj9Ow
                    -> case (reads $ (unpack s'_aj9Ow)) of
                         ((x_aj9Ox, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj9Ox
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj9Ot)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj9Ow)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aj9VY v_aj9VZ
             -> case fromPersistValue v_aj9VZ of
                  Left e_aj9W0 -> Left e_aj9W0
                  Right s'_aj9W1
                    -> case (reads $ (unpack s'_aj9W1)) of
                         ((x_aj9W2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aj9W2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aj9VY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aj9W1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aja4a v_aja4b
             -> case fromPersistValue v_aja4b of
                  Left e_aja4c -> Left e_aja4c
                  Right s'_aja4d
                    -> case (reads $ (unpack s'_aja4d)) of
                         ((x_aja4e, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aja4e
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aja4a)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aja4d)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajh7p v_ajh7q
             -> case fromPersistValue v_ajh7q of
                  Left e_ajh7r -> Left e_ajh7r
                  Right s'_ajh7s
                    -> case (reads $ (unpack s'_ajh7s)) of
                         ((x_ajh7t, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajh7t
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajh7p)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajh7s)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajheU v_ajheV
             -> case fromPersistValue v_ajheV of
                  Left e_ajheW -> Left e_ajheW
                  Right s'_ajheX
                    -> case (reads $ (unpack s'_ajheX)) of
                         ((x_ajheY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajheY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajheU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajheX)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajhn6 v_ajhn7
             -> case fromPersistValue v_ajhn7 of
                  Left e_ajhn8 -> Left e_ajhn8
                  Right s'_ajhn9
                    -> case (reads $ (unpack s'_ajhn9)) of
                         ((x_ajhna, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajhna
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajhn6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajhn9)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajoqo v_ajoqp
             -> case fromPersistValue v_ajoqp of
                  Left e_ajoqq -> Left e_ajoqq
                  Right s'_ajoqr
                    -> case (reads $ (unpack s'_ajoqr)) of
                         ((x_ajoqs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajoqs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajoqo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajoqr)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajoxT v_ajoxU
             -> case fromPersistValue v_ajoxU of
                  Left e_ajoxV -> Left e_ajoxV
                  Right s'_ajoxW
                    -> case (reads $ (unpack s'_ajoxW)) of
                         ((x_ajoxX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajoxX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajoxT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajoxW)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajoG5 v_ajoG6
             -> case fromPersistValue v_ajoG6 of
                  Left e_ajoG7 -> Left e_ajoG7
                  Right s'_ajoG8
                    -> case (reads $ (unpack s'_ajoG8)) of
                         ((x_ajoG9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajoG9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajoG5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajoG8)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajvJj v_ajvJk
             -> case fromPersistValue v_ajvJk of
                  Left e_ajvJl -> Left e_ajvJl
                  Right s'_ajvJm
                    -> case (reads $ (unpack s'_ajvJm)) of
                         ((x_ajvJn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajvJn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajvJj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajvJm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajvQO v_ajvQP
             -> case fromPersistValue v_ajvQP of
                  Left e_ajvQQ -> Left e_ajvQQ
                  Right s'_ajvQR
                    -> case (reads $ (unpack s'_ajvQR)) of
                         ((x_ajvQS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajvQS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajvQO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajvQR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajvZ0 v_ajvZ1
             -> case fromPersistValue v_ajvZ1 of
                  Left e_ajvZ2 -> Left e_ajvZ2
                  Right s'_ajvZ3
                    -> case (reads $ (unpack s'_ajvZ3)) of
                         ((x_ajvZ4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajvZ4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajvZ0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajvZ3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajHmD v_ajHmE
             -> case fromPersistValue v_ajHmE of
                  Left e_ajHmF -> Left e_ajHmF
                  Right s'_ajHmG
                    -> case (reads $ (unpack s'_ajHmG)) of
                         ((x_ajHmH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajHmH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajHmD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajHmG)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajHu8 v_ajHu9
             -> case fromPersistValue v_ajHu9 of
                  Left e_ajHua -> Left e_ajHua
                  Right s'_ajHub
                    -> case (reads $ (unpack s'_ajHub)) of
                         ((x_ajHuc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajHuc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajHu8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajHub)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajHCk v_ajHCl
             -> case fromPersistValue v_ajHCl of
                  Left e_ajHCm -> Left e_ajHCm
                  Right s'_ajHCn
                    -> case (reads $ (unpack s'_ajHCn)) of
                         ((x_ajHCo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajHCo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajHCk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajHCn)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajHXa v_ajHXb
             -> case fromPersistValue v_ajHXb of
                  Left e_ajHXc -> Left e_ajHXc
                  Right s'_ajHXd
                    -> case (reads $ (unpack s'_ajHXd)) of
                         ((x_ajHXe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajHXe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajHXa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajHXd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajI4F v_ajI4G
             -> case fromPersistValue v_ajI4G of
                  Left e_ajI4H -> Left e_ajI4H
                  Right s'_ajI4I
                    -> case (reads $ (unpack s'_ajI4I)) of
                         ((x_ajI4J, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajI4J
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajI4F)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajI4I)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajIcR v_ajIcS
             -> case fromPersistValue v_ajIcS of
                  Left e_ajIcT -> Left e_ajIcT
                  Right s'_ajIcU
                    -> case (reads $ (unpack s'_ajIcU)) of
                         ((x_ajIcV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajIcV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajIcR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajIcU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajPjh v_ajPji
             -> case fromPersistValue v_ajPji of
                  Left e_ajPjj -> Left e_ajPjj
                  Right s'_ajPjk
                    -> case (reads $ (unpack s'_ajPjk)) of
                         ((x_ajPjl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajPjl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajPjh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajPjk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajPqM v_ajPqN
             -> case fromPersistValue v_ajPqN of
                  Left e_ajPqO -> Left e_ajPqO
                  Right s'_ajPqP
                    -> case (reads $ (unpack s'_ajPqP)) of
                         ((x_ajPqQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajPqQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajPqM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajPqP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ajPyY v_ajPyZ
             -> case fromPersistValue v_ajPyZ of
                  Left e_ajPz0 -> Left e_ajPz0
                  Right s'_ajPz1
                    -> case (reads $ (unpack s'_ajPz1)) of
                         ((x_ajPz2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ajPz2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ajPyY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ajPz1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak0WB v_ak0WC
             -> case fromPersistValue v_ak0WC of
                  Left e_ak0WD -> Left e_ak0WD
                  Right s'_ak0WE
                    -> case (reads $ (unpack s'_ak0WE)) of
                         ((x_ak0WF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak0WF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak0WB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak0WE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak146 v_ak147
             -> case fromPersistValue v_ak147 of
                  Left e_ak148 -> Left e_ak148
                  Right s'_ak149
                    -> case (reads $ (unpack s'_ak149)) of
                         ((x_ak14a, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak14a
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak146)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak149)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1ci v_ak1cj
             -> case fromPersistValue v_ak1cj of
                  Left e_ak1ck -> Left e_ak1ck
                  Right s'_ak1cl
                    -> case (reads $ (unpack s'_ak1cl)) of
                         ((x_ak1cm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1cm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1ci)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1cl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1wQ v_ak1wR
             -> case fromPersistValue v_ak1wR of
                  Left e_ak1wS -> Left e_ak1wS
                  Right s'_ak1wT
                    -> case (reads $ (unpack s'_ak1wT)) of
                         ((x_ak1wU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1wU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1wQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1wT)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1El v_ak1Em
             -> case fromPersistValue v_ak1Em of
                  Left e_ak1En -> Left e_ak1En
                  Right s'_ak1Eo
                    -> case (reads $ (unpack s'_ak1Eo)) of
                         ((x_ak1Ep, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1Ep
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1El)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1Eo)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ak1Mx v_ak1My
             -> case fromPersistValue v_ak1My of
                  Left e_ak1Mz -> Left e_ak1Mz
                  Right s'_ak1MA
                    -> case (reads $ (unpack s'_ak1MA)) of
                         ((x_ak1MB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ak1MB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ak1Mx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ak1MA)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akdaa v_akdab
             -> case fromPersistValue v_akdab of
                  Left e_akdac -> Left e_akdac
                  Right s'_akdad
                    -> case (reads $ (unpack s'_akdad)) of
                         ((x_akdae, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akdae
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akdaa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akdad)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akdhF v_akdhG
             -> case fromPersistValue v_akdhG of
                  Left e_akdhH -> Left e_akdhH
                  Right s'_akdhI
                    -> case (reads $ (unpack s'_akdhI)) of
                         ((x_akdhJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akdhJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akdhF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akdhI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akdpR v_akdpS
             -> case fromPersistValue v_akdpS of
                  Left e_akdpT -> Left e_akdpT
                  Right s'_akdpU
                    -> case (reads $ (unpack s'_akdpU)) of
                         ((x_akdpV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akdpV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akdpR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akdpU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akdNT v_akdNU
             -> case fromPersistValue v_akdNU of
                  Left e_akdNV -> Left e_akdNV
                  Right s'_akdNW
                    -> case (reads $ (unpack s'_akdNW)) of
                         ((x_akdNX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akdNX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akdNT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akdNW)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akdVo v_akdVp
             -> case fromPersistValue v_akdVp of
                  Left e_akdVq -> Left e_akdVq
                  Right s'_akdVr
                    -> case (reads $ (unpack s'_akdVr)) of
                         ((x_akdVs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akdVs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akdVo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akdVr)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ake3A v_ake3B
             -> case fromPersistValue v_ake3B of
                  Left e_ake3C -> Left e_ake3C
                  Right s'_ake3D
                    -> case (reads $ (unpack s'_ake3D)) of
                         ((x_ake3E, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ake3E
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ake3A)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ake3D)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akl6O v_akl6P
             -> case fromPersistValue v_akl6P of
                  Left e_akl6Q -> Left e_akl6Q
                  Right s'_akl6R
                    -> case (reads $ (unpack s'_akl6R)) of
                         ((x_akl6S, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akl6S
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akl6O)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akl6R)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aklej v_aklek
             -> case fromPersistValue v_aklek of
                  Left e_aklel -> Left e_aklel
                  Right s'_aklem
                    -> case (reads $ (unpack s'_aklem)) of
                         ((x_aklen, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aklen
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aklej)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aklem)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aklmv v_aklmw
             -> case fromPersistValue v_aklmw of
                  Left e_aklmx -> Left e_aklmx
                  Right s'_aklmy
                    -> case (reads $ (unpack s'_aklmy)) of
                         ((x_aklmz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aklmz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aklmv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aklmy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akski v_akskj
             -> case fromPersistValue v_akskj of
                  Left e_akskk -> Left e_akskk
                  Right s'_akskl
                    -> case (reads $ (unpack s'_akskl)) of
                         ((x_akskm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akskm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akski)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akskl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aksrN v_aksrO
             -> case fromPersistValue v_aksrO of
                  Left e_aksrP -> Left e_aksrP
                  Right s'_aksrQ
                    -> case (reads $ (unpack s'_aksrQ)) of
                         ((x_aksrR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aksrR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aksrN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aksrQ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akszZ v_aksA0
             -> case fromPersistValue v_aksA0 of
                  Left e_aksA1 -> Left e_aksA1
                  Right s'_aksA2
                    -> case (reads $ (unpack s'_aksA2)) of
                         ((x_aksA3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aksA3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akszZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aksA2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akzxL v_akzxM
             -> case fromPersistValue v_akzxM of
                  Left e_akzxN -> Left e_akzxN
                  Right s'_akzxO
                    -> case (reads $ (unpack s'_akzxO)) of
                         ((x_akzxP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akzxP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akzxL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akzxO)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akzFg v_akzFh
             -> case fromPersistValue v_akzFh of
                  Left e_akzFi -> Left e_akzFi
                  Right s'_akzFj
                    -> case (reads $ (unpack s'_akzFj)) of
                         ((x_akzFk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akzFk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akzFg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akzFj)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akzNs v_akzNt
             -> case fromPersistValue v_akzNt of
                  Left e_akzNu -> Left e_akzNu
                  Right s'_akzNv
                    -> case (reads $ (unpack s'_akzNv)) of
                         ((x_akzNw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akzNw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akzNs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akzNv)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akGLe v_akGLf
             -> case fromPersistValue v_akGLf of
                  Left e_akGLg -> Left e_akGLg
                  Right s'_akGLh
                    -> case (reads $ (unpack s'_akGLh)) of
                         ((x_akGLi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akGLi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akGLe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akGLh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akGSJ v_akGSK
             -> case fromPersistValue v_akGSK of
                  Left e_akGSL -> Left e_akGSL
                  Right s'_akGSM
                    -> case (reads $ (unpack s'_akGSM)) of
                         ((x_akGSN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akGSN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akGSJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akGSM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akH0V v_akH0W
             -> case fromPersistValue v_akH0W of
                  Left e_akH0X -> Left e_akH0X
                  Right s'_akH0Y
                    -> case (reads $ (unpack s'_akH0Y)) of
                         ((x_akH0Z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akH0Z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akH0V)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akH0Y)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akO49 v_akO4a
             -> case fromPersistValue v_akO4a of
                  Left e_akO4b -> Left e_akO4b
                  Right s'_akO4c
                    -> case (reads $ (unpack s'_akO4c)) of
                         ((x_akO4d, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akO4d
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akO49)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akO4c)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akObE v_akObF
             -> case fromPersistValue v_akObF of
                  Left e_akObG -> Left e_akObG
                  Right s'_akObH
                    -> case (reads $ (unpack s'_akObH)) of
                         ((x_akObI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akObI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akObE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akObH)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akOjQ v_akOjR
             -> case fromPersistValue v_akOjR of
                  Left e_akOjS -> Left e_akOjS
                  Right s'_akOjT
                    -> case (reads $ (unpack s'_akOjT)) of
                         ((x_akOjU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akOjU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akOjQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akOjT)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akVn6 v_akVn7
             -> case fromPersistValue v_akVn7 of
                  Left e_akVn8 -> Left e_akVn8
                  Right s'_akVn9
                    -> case (reads $ (unpack s'_akVn9)) of
                         ((x_akVna, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akVna
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akVn6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akVn9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akVuB v_akVuC
             -> case fromPersistValue v_akVuC of
                  Left e_akVuD -> Left e_akVuD
                  Right s'_akVuE
                    -> case (reads $ (unpack s'_akVuE)) of
                         ((x_akVuF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akVuF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akVuB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akVuE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_akVCN v_akVCO
             -> case fromPersistValue v_akVCO of
                  Left e_akVCP -> Left e_akVCP
                  Right s'_akVCQ
                    -> case (reads $ (unpack s'_akVCQ)) of
                         ((x_akVCR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_akVCR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_akVCN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_akVCQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2G3 v_al2G4
             -> case fromPersistValue v_al2G4 of
                  Left e_al2G5 -> Left e_al2G5
                  Right s'_al2G6
                    -> case (reads $ (unpack s'_al2G6)) of
                         ((x_al2G7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2G7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2G3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2G6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2Ny v_al2Nz
             -> case fromPersistValue v_al2Nz of
                  Left e_al2NA -> Left e_al2NA
                  Right s'_al2NB
                    -> case (reads $ (unpack s'_al2NB)) of
                         ((x_al2NC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2NC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2Ny)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2NB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al2VK v_al2VL
             -> case fromPersistValue v_al2VL of
                  Left e_al2VM -> Left e_al2VM
                  Right s'_al2VN
                    -> case (reads $ (unpack s'_al2VN)) of
                         ((x_al2VO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al2VO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al2VK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al2VN)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_al9Zc v_al9Zd
             -> case fromPersistValue v_al9Zd of
                  Left e_al9Ze -> Left e_al9Ze
                  Right s'_al9Zf
                    -> case (reads $ (unpack s'_al9Zf)) of
                         ((x_al9Zg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_al9Zg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_al9Zc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_al9Zf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ala6H v_ala6I
             -> case fromPersistValue v_ala6I of
                  Left e_ala6J -> Left e_ala6J
                  Right s'_ala6K
                    -> case (reads $ (unpack s'_ala6K)) of
                         ((x_ala6L, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ala6L
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ala6H)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ala6K)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alaeT v_alaeU
             -> case fromPersistValue v_alaeU of
                  Left e_alaeV -> Left e_alaeV
                  Right s'_alaeW
                    -> case (reads $ (unpack s'_alaeW)) of
                         ((x_alaeX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alaeX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alaeT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alaeW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alhi7 v_alhi8
             -> case fromPersistValue v_alhi8 of
                  Left e_alhi9 -> Left e_alhi9
                  Right s'_alhia
                    -> case (reads $ (unpack s'_alhia)) of
                         ((x_alhib, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alhib
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alhi7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alhia)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alhpC v_alhpD
             -> case fromPersistValue v_alhpD of
                  Left e_alhpE -> Left e_alhpE
                  Right s'_alhpF
                    -> case (reads $ (unpack s'_alhpF)) of
                         ((x_alhpG, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alhpG
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alhpC)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alhpF)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alhxO v_alhxP
             -> case fromPersistValue v_alhxP of
                  Left e_alhxQ -> Left e_alhxQ
                  Right s'_alhxR
                    -> case (reads $ (unpack s'_alhxR)) of
                         ((x_alhxS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alhxS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alhxO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alhxR)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aloBb v_aloBc
             -> case fromPersistValue v_aloBc of
                  Left e_aloBd -> Left e_aloBd
                  Right s'_aloBe
                    -> case (reads $ (unpack s'_aloBe)) of
                         ((x_aloBf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aloBf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aloBb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aloBe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aloIG v_aloIH
             -> case fromPersistValue v_aloIH of
                  Left e_aloII -> Left e_aloII
                  Right s'_aloIJ
                    -> case (reads $ (unpack s'_aloIJ)) of
                         ((x_aloIK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aloIK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aloIG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aloIJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aloQS v_aloQT
             -> case fromPersistValue v_aloQT of
                  Left e_aloQU -> Left e_aloQU
                  Right s'_aloQV
                    -> case (reads $ (unpack s'_aloQV)) of
                         ((x_aloQW, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aloQW
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aloQS)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aloQV)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alvUi v_alvUj
             -> case fromPersistValue v_alvUj of
                  Left e_alvUk -> Left e_alvUk
                  Right s'_alvUl
                    -> case (reads $ (unpack s'_alvUl)) of
                         ((x_alvUm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alvUm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alvUi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alvUl)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alw1N v_alw1O
             -> case fromPersistValue v_alw1O of
                  Left e_alw1P -> Left e_alw1P
                  Right s'_alw1Q
                    -> case (reads $ (unpack s'_alw1Q)) of
                         ((x_alw1R, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alw1R
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alw1N)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alw1Q)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alw9Z v_alwa0
             -> case fromPersistValue v_alwa0 of
                  Left e_alwa1 -> Left e_alwa1
                  Right s'_alwa2
                    -> case (reads $ (unpack s'_alwa2)) of
                         ((x_alwa3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alwa3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alw9Z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alwa2)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDdu v_alDdv
             -> case fromPersistValue v_alDdv of
                  Left e_alDdw -> Left e_alDdw
                  Right s'_alDdx
                    -> case (reads $ (unpack s'_alDdx)) of
                         ((x_alDdy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDdy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDdu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDdx)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDkZ v_alDl0
             -> case fromPersistValue v_alDl0 of
                  Left e_alDl1 -> Left e_alDl1
                  Right s'_alDl2
                    -> case (reads $ (unpack s'_alDl2)) of
                         ((x_alDl3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDl3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDkZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDl2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alDtb v_alDtc
             -> case fromPersistValue v_alDtc of
                  Left e_alDtd -> Left e_alDtd
                  Right s'_alDte
                    -> case (reads $ (unpack s'_alDte)) of
                         ((x_alDtf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alDtf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alDtb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alDte)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alKwG v_alKwH
             -> case fromPersistValue v_alKwH of
                  Left e_alKwI -> Left e_alKwI
                  Right s'_alKwJ
                    -> case (reads $ (unpack s'_alKwJ)) of
                         ((x_alKwK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alKwK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alKwG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alKwJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alKEb v_alKEc
             -> case fromPersistValue v_alKEc of
                  Left e_alKEd -> Left e_alKEd
                  Right s'_alKEe
                    -> case (reads $ (unpack s'_alKEe)) of
                         ((x_alKEf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alKEf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alKEb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alKEe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alKMn v_alKMo
             -> case fromPersistValue v_alKMo of
                  Left e_alKMp -> Left e_alKMp
                  Right s'_alKMq
                    -> case (reads $ (unpack s'_alKMq)) of
                         ((x_alKMr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alKMr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alKMn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alKMq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alRPP v_alRPQ
             -> case fromPersistValue v_alRPQ of
                  Left e_alRPR -> Left e_alRPR
                  Right s'_alRPS
                    -> case (reads $ (unpack s'_alRPS)) of
                         ((x_alRPT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alRPT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alRPP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alRPS)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alRXk v_alRXl
             -> case fromPersistValue v_alRXl of
                  Left e_alRXm -> Left e_alRXm
                  Right s'_alRXn
                    -> case (reads $ (unpack s'_alRXn)) of
                         ((x_alRXo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alRXo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alRXk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alRXn)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alS5w v_alS5x
             -> case fromPersistValue v_alS5x of
                  Left e_alS5y -> Left e_alS5y
                  Right s'_alS5z
                    -> case (reads $ (unpack s'_alS5z)) of
                         ((x_alS5A, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alS5A
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alS5w)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alS5z)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alZ8Z v_alZ90
             -> case fromPersistValue v_alZ90 of
                  Left e_alZ91 -> Left e_alZ91
                  Right s'_alZ92
                    -> case (reads $ (unpack s'_alZ92)) of
                         ((x_alZ93, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alZ93
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alZ8Z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alZ92)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alZgu v_alZgv
             -> case fromPersistValue v_alZgv of
                  Left e_alZgw -> Left e_alZgw
                  Right s'_alZgx
                    -> case (reads $ (unpack s'_alZgx)) of
                         ((x_alZgy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alZgy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alZgu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alZgx)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_alZoG v_alZoH
             -> case fromPersistValue v_alZoH of
                  Left e_alZoI -> Left e_alZoI
                  Right s'_alZoJ
                    -> case (reads $ (unpack s'_alZoJ)) of
                         ((x_alZoK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_alZoK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_alZoG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_alZoJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am6sa v_am6sb
             -> case fromPersistValue v_am6sb of
                  Left e_am6sc -> Left e_am6sc
                  Right s'_am6sd
                    -> case (reads $ (unpack s'_am6sd)) of
                         ((x_am6se, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am6se
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am6sa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am6sd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am6zF v_am6zG
             -> case fromPersistValue v_am6zG of
                  Left e_am6zH -> Left e_am6zH
                  Right s'_am6zI
                    -> case (reads $ (unpack s'_am6zI)) of
                         ((x_am6zJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am6zJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am6zF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am6zI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_am6HR v_am6HS
             -> case fromPersistValue v_am6HS of
                  Left e_am6HT -> Left e_am6HT
                  Right s'_am6HU
                    -> case (reads $ (unpack s'_am6HU)) of
                         ((x_am6HV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_am6HV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_am6HR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_am6HU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amdLl v_amdLm
             -> case fromPersistValue v_amdLm of
                  Left e_amdLn -> Left e_amdLn
                  Right s'_amdLo
                    -> case (reads $ (unpack s'_amdLo)) of
                         ((x_amdLp, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amdLp
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amdLl)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amdLo)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amdSQ v_amdSR
             -> case fromPersistValue v_amdSR of
                  Left e_amdSS -> Left e_amdSS
                  Right s'_amdST
                    -> case (reads $ (unpack s'_amdST)) of
                         ((x_amdSU, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amdSU
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amdSQ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amdST)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ame12 v_ame13
             -> case fromPersistValue v_ame13 of
                  Left e_ame14 -> Left e_ame14
                  Right s'_ame15
                    -> case (reads $ (unpack s'_ame15)) of
                         ((x_ame16, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ame16
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ame12)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ame15)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aml4u v_aml4v
             -> case fromPersistValue v_aml4v of
                  Left e_aml4w -> Left e_aml4w
                  Right s'_aml4x
                    -> case (reads $ (unpack s'_aml4x)) of
                         ((x_aml4y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aml4y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aml4u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aml4x)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amlbZ v_amlc0
             -> case fromPersistValue v_amlc0 of
                  Left e_amlc1 -> Left e_amlc1
                  Right s'_amlc2
                    -> case (reads $ (unpack s'_amlc2)) of
                         ((x_amlc3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amlc3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amlbZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amlc2)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amlkb v_amlkc
             -> case fromPersistValue v_amlkc of
                  Left e_amlkd -> Left e_amlkd
                  Right s'_amlke
                    -> case (reads $ (unpack s'_amlke)) of
                         ((x_amlkf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amlkf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amlkb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amlke)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amsnD v_amsnE
             -> case fromPersistValue v_amsnE of
                  Left e_amsnF -> Left e_amsnF
                  Right s'_amsnG
                    -> case (reads $ (unpack s'_amsnG)) of
                         ((x_amsnH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amsnH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amsnD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amsnG)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amsv8 v_amsv9
             -> case fromPersistValue v_amsv9 of
                  Left e_amsva -> Left e_amsva
                  Right s'_amsvb
                    -> case (reads $ (unpack s'_amsvb)) of
                         ((x_amsvc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amsvc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amsv8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amsvb)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amsDk v_amsDl
             -> case fromPersistValue v_amsDl of
                  Left e_amsDm -> Left e_amsDm
                  Right s'_amsDn
                    -> case (reads $ (unpack s'_amsDn)) of
                         ((x_amsDo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amsDo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amsDk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amsDn)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amzGj v_amzGk
             -> case fromPersistValue v_amzGk of
                  Left e_amzGl -> Left e_amzGl
                  Right s'_amzGm
                    -> case (reads $ (unpack s'_amzGm)) of
                         ((x_amzGn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amzGn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amzGj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amzGm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amzNO v_amzNP
             -> case fromPersistValue v_amzNP of
                  Left e_amzNQ -> Left e_amzNQ
                  Right s'_amzNR
                    -> case (reads $ (unpack s'_amzNR)) of
                         ((x_amzNS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amzNS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amzNO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amzNR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amzW0 v_amzW1
             -> case fromPersistValue v_amzW1 of
                  Left e_amzW2 -> Left e_amzW2
                  Right s'_amzW3
                    -> case (reads $ (unpack s'_amzW3)) of
                         ((x_amzW4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amzW4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amzW0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amzW3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amGYZ v_amGZ0
             -> case fromPersistValue v_amGZ0 of
                  Left e_amGZ1 -> Left e_amGZ1
                  Right s'_amGZ2
                    -> case (reads $ (unpack s'_amGZ2)) of
                         ((x_amGZ3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amGZ3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amGYZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amGZ2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amH6u v_amH6v
             -> case fromPersistValue v_amH6v of
                  Left e_amH6w -> Left e_amH6w
                  Right s'_amH6x
                    -> case (reads $ (unpack s'_amH6x)) of
                         ((x_amH6y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amH6y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amH6u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amH6x)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amHeG v_amHeH
             -> case fromPersistValue v_amHeH of
                  Left e_amHeI -> Left e_amHeI
                  Right s'_amHeJ
                    -> case (reads $ (unpack s'_amHeJ)) of
                         ((x_amHeK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amHeK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amHeG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amHeJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amOhF v_amOhG
             -> case fromPersistValue v_amOhG of
                  Left e_amOhH -> Left e_amOhH
                  Right s'_amOhI
                    -> case (reads $ (unpack s'_amOhI)) of
                         ((x_amOhJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amOhJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amOhF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amOhI)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amOpa v_amOpb
             -> case fromPersistValue v_amOpb of
                  Left e_amOpc -> Left e_amOpc
                  Right s'_amOpd
                    -> case (reads $ (unpack s'_amOpd)) of
                         ((x_amOpe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amOpe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amOpa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amOpd)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amOxm v_amOxn
             -> case fromPersistValue v_amOxn of
                  Left e_amOxo -> Left e_amOxo
                  Right s'_amOxp
                    -> case (reads $ (unpack s'_amOxp)) of
                         ((x_amOxq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amOxq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amOxm)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amOxp)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_amZUZ v_amZV0
             -> case fromPersistValue v_amZV0 of
                  Left e_amZV1 -> Left e_amZV1
                  Right s'_amZV2
                    -> case (reads $ (unpack s'_amZV2)) of
                         ((x_amZV3, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_amZV3
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_amZUZ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_amZV2)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an02u v_an02v
             -> case fromPersistValue v_an02v of
                  Left e_an02w -> Left e_an02w
                  Right s'_an02x
                    -> case (reads $ (unpack s'_an02x)) of
                         ((x_an02y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an02y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an02u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an02x)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0aG v_an0aH
             -> case fromPersistValue v_an0aH of
                  Left e_an0aI -> Left e_an0aI
                  Right s'_an0aJ
                    -> case (reads $ (unpack s'_an0aJ)) of
                         ((x_an0aK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0aK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0aG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0aJ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0ve v_an0vf
             -> case fromPersistValue v_an0vf of
                  Left e_an0vg -> Left e_an0vg
                  Right s'_an0vh
                    -> case (reads $ (unpack s'_an0vh)) of
                         ((x_an0vi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0vi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0ve)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0vh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0CJ v_an0CK
             -> case fromPersistValue v_an0CK of
                  Left e_an0CL -> Left e_an0CL
                  Right s'_an0CM
                    -> case (reads $ (unpack s'_an0CM)) of
                         ((x_an0CN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0CN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0CJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0CM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_an0KV v_an0KW
             -> case fromPersistValue v_an0KW of
                  Left e_an0KX -> Left e_an0KX
                  Right s'_an0KY
                    -> case (reads $ (unpack s'_an0KY)) of
                         ((x_an0KZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_an0KZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_an0KV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_an0KY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anc8y v_anc8z
             -> case fromPersistValue v_anc8z of
                  Left e_anc8A -> Left e_anc8A
                  Right s'_anc8B
                    -> case (reads $ (unpack s'_anc8B)) of
                         ((x_anc8C, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anc8C
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anc8y)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anc8B)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ancg3 v_ancg4
             -> case fromPersistValue v_ancg4 of
                  Left e_ancg5 -> Left e_ancg5
                  Right s'_ancg6
                    -> case (reads $ (unpack s'_ancg6)) of
                         ((x_ancg7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ancg7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ancg3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ancg6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ancof v_ancog
             -> case fromPersistValue v_ancog of
                  Left e_ancoh -> Left e_ancoh
                  Right s'_ancoi
                    -> case (reads $ (unpack s'_ancoi)) of
                         ((x_ancoj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ancoj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ancof)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ancoi)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ancIN v_ancIO
             -> case fromPersistValue v_ancIO of
                  Left e_ancIP -> Left e_ancIP
                  Right s'_ancIQ
                    -> case (reads $ (unpack s'_ancIQ)) of
                         ((x_ancIR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ancIR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ancIN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ancIQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ancQi v_ancQj
             -> case fromPersistValue v_ancQj of
                  Left e_ancQk -> Left e_ancQk
                  Right s'_ancQl
                    -> case (reads $ (unpack s'_ancQl)) of
                         ((x_ancQm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ancQm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ancQi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ancQl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ancYu v_ancYv
             -> case fromPersistValue v_ancYv of
                  Left e_ancYw -> Left e_ancYw
                  Right s'_ancYx
                    -> case (reads $ (unpack s'_ancYx)) of
                         ((x_ancYy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ancYy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ancYu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ancYx)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ank4X v_ank4Y
             -> case fromPersistValue v_ank4Y of
                  Left e_ank4Z -> Left e_ank4Z
                  Right s'_ank50
                    -> case (reads $ (unpack s'_ank50)) of
                         ((x_ank51, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ank51
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ank4X)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ank50)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ankcs v_ankct
             -> case fromPersistValue v_ankct of
                  Left e_ankcu -> Left e_ankcu
                  Right s'_ankcv
                    -> case (reads $ (unpack s'_ankcv)) of
                         ((x_ankcw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ankcw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ankcs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ankcv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ankkE v_ankkF
             -> case fromPersistValue v_ankkF of
                  Left e_ankkG -> Left e_ankkG
                  Right s'_ankkH
                    -> case (reads $ (unpack s'_ankkH)) of
                         ((x_ankkI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ankkI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ankkE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ankkH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anrnD v_anrnE
             -> case fromPersistValue v_anrnE of
                  Left e_anrnF -> Left e_anrnF
                  Right s'_anrnG
                    -> case (reads $ (unpack s'_anrnG)) of
                         ((x_anrnH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anrnH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anrnD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anrnG)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anrv8 v_anrv9
             -> case fromPersistValue v_anrv9 of
                  Left e_anrva -> Left e_anrva
                  Right s'_anrvb
                    -> case (reads $ (unpack s'_anrvb)) of
                         ((x_anrvc, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anrvc
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anrv8)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anrvb)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anrDk v_anrDl
             -> case fromPersistValue v_anrDl of
                  Left e_anrDm -> Left e_anrDm
                  Right s'_anrDn
                    -> case (reads $ (unpack s'_anrDn)) of
                         ((x_anrDo, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anrDo
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anrDk)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anrDn)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anD0X v_anD0Y
             -> case fromPersistValue v_anD0Y of
                  Left e_anD0Z -> Left e_anD0Z
                  Right s'_anD10
                    -> case (reads $ (unpack s'_anD10)) of
                         ((x_anD11, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anD11
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anD0X)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anD10)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anD8s v_anD8t
             -> case fromPersistValue v_anD8t of
                  Left e_anD8u -> Left e_anD8u
                  Right s'_anD8v
                    -> case (reads $ (unpack s'_anD8v)) of
                         ((x_anD8w, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anD8w
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anD8s)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anD8v)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anDgE v_anDgF
             -> case fromPersistValue v_anDgF of
                  Left e_anDgG -> Left e_anDgG
                  Right s'_anDgH
                    -> case (reads $ (unpack s'_anDgH)) of
                         ((x_anDgI, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anDgI
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anDgE)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anDgH)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anDBc v_anDBd
             -> case fromPersistValue v_anDBd of
                  Left e_anDBe -> Left e_anDBe
                  Right s'_anDBf
                    -> case (reads $ (unpack s'_anDBf)) of
                         ((x_anDBg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anDBg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anDBc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anDBf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anDIH v_anDII
             -> case fromPersistValue v_anDII of
                  Left e_anDIJ -> Left e_anDIJ
                  Right s'_anDIK
                    -> case (reads $ (unpack s'_anDIK)) of
                         ((x_anDIL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anDIL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anDIH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anDIK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anDQT v_anDQU
             -> case fromPersistValue v_anDQU of
                  Left e_anDQV -> Left e_anDQV
                  Right s'_anDQW
                    -> case (reads $ (unpack s'_anDQW)) of
                         ((x_anDQX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anDQX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anDQT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anDQW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anPew v_anPex
             -> case fromPersistValue v_anPex of
                  Left e_anPey -> Left e_anPey
                  Right s'_anPez
                    -> case (reads $ (unpack s'_anPez)) of
                         ((x_anPeA, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anPeA
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anPew)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anPez)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anPm1 v_anPm2
             -> case fromPersistValue v_anPm2 of
                  Left e_anPm3 -> Left e_anPm3
                  Right s'_anPm4
                    -> case (reads $ (unpack s'_anPm4)) of
                         ((x_anPm5, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anPm5
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anPm1)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anPm4)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anPud v_anPue
             -> case fromPersistValue v_anPue of
                  Left e_anPuf -> Left e_anPuf
                  Right s'_anPug
                    -> case (reads $ (unpack s'_anPug)) of
                         ((x_anPuh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anPuh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anPud)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anPug)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anPSf v_anPSg
             -> case fromPersistValue v_anPSg of
                  Left e_anPSh -> Left e_anPSh
                  Right s'_anPSi
                    -> case (reads $ (unpack s'_anPSi)) of
                         ((x_anPSj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anPSj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anPSf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anPSi)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anPZK v_anPZL
             -> case fromPersistValue v_anPZL of
                  Left e_anPZM -> Left e_anPZM
                  Right s'_anPZN
                    -> case (reads $ (unpack s'_anPZN)) of
                         ((x_anPZO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anPZO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anPZK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anPZN)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_anQ7W v_anQ7X
             -> case fromPersistValue v_anQ7X of
                  Left e_anQ7Y -> Left e_anQ7Y
                  Right s'_anQ7Z
                    -> case (reads $ (unpack s'_anQ7Z)) of
                         ((x_anQ80, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_anQ80
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_anQ7W)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_anQ7Z)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao1vz v_ao1vA
             -> case fromPersistValue v_ao1vA of
                  Left e_ao1vB -> Left e_ao1vB
                  Right s'_ao1vC
                    -> case (reads $ (unpack s'_ao1vC)) of
                         ((x_ao1vD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao1vD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao1vz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao1vC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao1D4 v_ao1D5
             -> case fromPersistValue v_ao1D5 of
                  Left e_ao1D6 -> Left e_ao1D6
                  Right s'_ao1D7
                    -> case (reads $ (unpack s'_ao1D7)) of
                         ((x_ao1D8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao1D8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao1D4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao1D7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao1Lg v_ao1Lh
             -> case fromPersistValue v_ao1Lh of
                  Left e_ao1Li -> Left e_ao1Li
                  Right s'_ao1Lj
                    -> case (reads $ (unpack s'_ao1Lj)) of
                         ((x_ao1Lk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao1Lk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao1Lg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao1Lj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao25O v_ao25P
             -> case fromPersistValue v_ao25P of
                  Left e_ao25Q -> Left e_ao25Q
                  Right s'_ao25R
                    -> case (reads $ (unpack s'_ao25R)) of
                         ((x_ao25S, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao25S
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao25O)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao25R)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao2dj v_ao2dk
             -> case fromPersistValue v_ao2dk of
                  Left e_ao2dl -> Left e_ao2dl
                  Right s'_ao2dm
                    -> case (reads $ (unpack s'_ao2dm)) of
                         ((x_ao2dn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao2dn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao2dj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao2dm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao2lv v_ao2lw
             -> case fromPersistValue v_ao2lw of
                  Left e_ao2lx -> Left e_ao2lx
                  Right s'_ao2ly
                    -> case (reads $ (unpack s'_ao2ly)) of
                         ((x_ao2lz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao2lz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao2lv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao2ly)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao9oO v_ao9oP
             -> case fromPersistValue v_ao9oP of
                  Left e_ao9oQ -> Left e_ao9oQ
                  Right s'_ao9oR
                    -> case (reads $ (unpack s'_ao9oR)) of
                         ((x_ao9oS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao9oS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao9oO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao9oR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao9wj v_ao9wk
             -> case fromPersistValue v_ao9wk of
                  Left e_ao9wl -> Left e_ao9wl
                  Right s'_ao9wm
                    -> case (reads $ (unpack s'_ao9wm)) of
                         ((x_ao9wn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao9wn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao9wj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao9wm)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ao9Ev v_ao9Ew
             -> case fromPersistValue v_ao9Ew of
                  Left e_ao9Ex -> Left e_ao9Ex
                  Right s'_ao9Ey
                    -> case (reads $ (unpack s'_ao9Ey)) of
                         ((x_ao9Ez, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ao9Ez
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ao9Ev)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ao9Ey)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aol28 v_aol29
             -> case fromPersistValue v_aol29 of
                  Left e_aol2a -> Left e_aol2a
                  Right s'_aol2b
                    -> case (reads $ (unpack s'_aol2b)) of
                         ((x_aol2c, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aol2c
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aol28)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aol2b)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aol9D v_aol9E
             -> case fromPersistValue v_aol9E of
                  Left e_aol9F -> Left e_aol9F
                  Right s'_aol9G
                    -> case (reads $ (unpack s'_aol9G)) of
                         ((x_aol9H, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aol9H
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aol9D)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aol9G)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aolhP v_aolhQ
             -> case fromPersistValue v_aolhQ of
                  Left e_aolhR -> Left e_aolhR
                  Right s'_aolhS
                    -> case (reads $ (unpack s'_aolhS)) of
                         ((x_aolhT, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aolhT
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aolhP)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aolhS)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aolDz v_aolDA
             -> case fromPersistValue v_aolDA of
                  Left e_aolDB -> Left e_aolDB
                  Right s'_aolDC
                    -> case (reads $ (unpack s'_aolDC)) of
                         ((x_aolDD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aolDD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aolDz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aolDC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aolL4 v_aolL5
             -> case fromPersistValue v_aolL5 of
                  Left e_aolL6 -> Left e_aolL6
                  Right s'_aolL7
                    -> case (reads $ (unpack s'_aolL7)) of
                         ((x_aolL8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aolL8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aolL4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aolL7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aolTg v_aolTh
             -> case fromPersistValue v_aolTh of
                  Left e_aolTi -> Left e_aolTi
                  Right s'_aolTj
                    -> case (reads $ (unpack s'_aolTj)) of
                         ((x_aolTk, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aolTk
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aolTg)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aolTj)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aosWh v_aosWi
             -> case fromPersistValue v_aosWi of
                  Left e_aosWj -> Left e_aosWj
                  Right s'_aosWk
                    -> case (reads $ (unpack s'_aosWk)) of
                         ((x_aosWl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aosWl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aosWh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aosWk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aot3M v_aot3N
             -> case fromPersistValue v_aot3N of
                  Left e_aot3O -> Left e_aot3O
                  Right s'_aot3P
                    -> case (reads $ (unpack s'_aot3P)) of
                         ((x_aot3Q, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aot3Q
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aot3M)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aot3P)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aotbY v_aotbZ
             -> case fromPersistValue v_aotbZ of
                  Left e_aotc0 -> Left e_aotc0
                  Right s'_aotc1
                    -> case (reads $ (unpack s'_aotc1)) of
                         ((x_aotc2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aotc2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aotbY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aotc1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoEzB v_aoEzC
             -> case fromPersistValue v_aoEzC of
                  Left e_aoEzD -> Left e_aoEzD
                  Right s'_aoEzE
                    -> case (reads $ (unpack s'_aoEzE)) of
                         ((x_aoEzF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoEzF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoEzB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoEzE)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoEH6 v_aoEH7
             -> case fromPersistValue v_aoEH7 of
                  Left e_aoEH8 -> Left e_aoEH8
                  Right s'_aoEH9
                    -> case (reads $ (unpack s'_aoEH9)) of
                         ((x_aoEHa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoEHa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoEH6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoEH9)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoEPi v_aoEPj
             -> case fromPersistValue v_aoEPj of
                  Left e_aoEPk -> Left e_aoEPk
                  Right s'_aoEPl
                    -> case (reads $ (unpack s'_aoEPl)) of
                         ((x_aoEPm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoEPm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoEPi)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoEPl)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoFbU v_aoFbV
             -> case fromPersistValue v_aoFbV of
                  Left e_aoFbW -> Left e_aoFbW
                  Right s'_aoFbX
                    -> case (reads $ (unpack s'_aoFbX)) of
                         ((x_aoFbY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoFbY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoFbU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoFbX)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoFjp v_aoFjq
             -> case fromPersistValue v_aoFjq of
                  Left e_aoFjr -> Left e_aoFjr
                  Right s'_aoFjs
                    -> case (reads $ (unpack s'_aoFjs)) of
                         ((x_aoFjt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoFjt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoFjp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoFjs)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoFrB v_aoFrC
             -> case fromPersistValue v_aoFrC of
                  Left e_aoFrD -> Left e_aoFrD
                  Right s'_aoFrE
                    -> case (reads $ (unpack s'_aoFrE)) of
                         ((x_aoFrF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoFrF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoFrB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoFrE)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoQPe v_aoQPf
             -> case fromPersistValue v_aoQPf of
                  Left e_aoQPg -> Left e_aoQPg
                  Right s'_aoQPh
                    -> case (reads $ (unpack s'_aoQPh)) of
                         ((x_aoQPi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoQPi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoQPe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoQPh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoQWJ v_aoQWK
             -> case fromPersistValue v_aoQWK of
                  Left e_aoQWL -> Left e_aoQWL
                  Right s'_aoQWM
                    -> case (reads $ (unpack s'_aoQWM)) of
                         ((x_aoQWN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoQWN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoQWJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoQWM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoR4V v_aoR4W
             -> case fromPersistValue v_aoR4W of
                  Left e_aoR4X -> Left e_aoR4X
                  Right s'_aoR4Y
                    -> case (reads $ (unpack s'_aoR4Y)) of
                         ((x_aoR4Z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoR4Z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoR4V)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoR4Y)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoRpt v_aoRpu
             -> case fromPersistValue v_aoRpu of
                  Left e_aoRpv -> Left e_aoRpv
                  Right s'_aoRpw
                    -> case (reads $ (unpack s'_aoRpw)) of
                         ((x_aoRpx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoRpx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoRpt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoRpw)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoRwY v_aoRwZ
             -> case fromPersistValue v_aoRwZ of
                  Left e_aoRx0 -> Left e_aoRx0
                  Right s'_aoRx1
                    -> case (reads $ (unpack s'_aoRx1)) of
                         ((x_aoRx2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoRx2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoRwY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoRx1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoRFa v_aoRFb
             -> case fromPersistValue v_aoRFb of
                  Left e_aoRFc -> Left e_aoRFc
                  Right s'_aoRFd
                    -> case (reads $ (unpack s'_aoRFd)) of
                         ((x_aoRFe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoRFe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoRFa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoRFd)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoYJx v_aoYJy
             -> case fromPersistValue v_aoYJy of
                  Left e_aoYJz -> Left e_aoYJz
                  Right s'_aoYJA
                    -> case (reads $ (unpack s'_aoYJA)) of
                         ((x_aoYJB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoYJB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoYJx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoYJA)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoYR2 v_aoYR3
             -> case fromPersistValue v_aoYR3 of
                  Left e_aoYR4 -> Left e_aoYR4
                  Right s'_aoYR5
                    -> case (reads $ (unpack s'_aoYR5)) of
                         ((x_aoYR6, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoYR6
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoYR2)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoYR5)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aoYZe v_aoYZf
             -> case fromPersistValue v_aoYZf of
                  Left e_aoYZg -> Left e_aoYZg
                  Right s'_aoYZh
                    -> case (reads $ (unpack s'_aoYZh)) of
                         ((x_aoYZi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aoYZi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aoYZe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aoYZh)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apamR v_apamS
             -> case fromPersistValue v_apamS of
                  Left e_apamT -> Left e_apamT
                  Right s'_apamU
                    -> case (reads $ (unpack s'_apamU)) of
                         ((x_apamV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apamV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apamR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apamU)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apaum v_apaun
             -> case fromPersistValue v_apaun of
                  Left e_apauo -> Left e_apauo
                  Right s'_apaup
                    -> case (reads $ (unpack s'_apaup)) of
                         ((x_apauq, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apauq
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apaum)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apaup)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apaCy v_apaCz
             -> case fromPersistValue v_apaCz of
                  Left e_apaCA -> Left e_apaCA
                  Right s'_apaCB
                    -> case (reads $ (unpack s'_apaCB)) of
                         ((x_apaCC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apaCC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apaCy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apaCB)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apaX6 v_apaX7
             -> case fromPersistValue v_apaX7 of
                  Left e_apaX8 -> Left e_apaX8
                  Right s'_apaX9
                    -> case (reads $ (unpack s'_apaX9)) of
                         ((x_apaXa, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apaXa
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apaX6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apaX9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apb4B v_apb4C
             -> case fromPersistValue v_apb4C of
                  Left e_apb4D -> Left e_apb4D
                  Right s'_apb4E
                    -> case (reads $ (unpack s'_apb4E)) of
                         ((x_apb4F, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apb4F
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apb4B)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apb4E)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apbcN v_apbcO
             -> case fromPersistValue v_apbcO of
                  Left e_apbcP -> Left e_apbcP
                  Right s'_apbcQ
                    -> case (reads $ (unpack s'_apbcQ)) of
                         ((x_apbcR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apbcR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apbcN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apbcQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apihK v_apihL
             -> case fromPersistValue v_apihL of
                  Left e_apihM -> Left e_apihM
                  Right s'_apihN
                    -> case (reads $ (unpack s'_apihN)) of
                         ((x_apihO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apihO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apihK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apihN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apipf v_apipg
             -> case fromPersistValue v_apipg of
                  Left e_apiph -> Left e_apiph
                  Right s'_apipi
                    -> case (reads $ (unpack s'_apipi)) of
                         ((x_apipj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apipj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apipf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apipi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apixr v_apixs
             -> case fromPersistValue v_apixs of
                  Left e_apixt -> Left e_apixt
                  Right s'_apixu
                    -> case (reads $ (unpack s'_apixu)) of
                         ((x_apixv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apixv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apixr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apixu)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aptV4 v_aptV5
             -> case fromPersistValue v_aptV5 of
                  Left e_aptV6 -> Left e_aptV6
                  Right s'_aptV7
                    -> case (reads $ (unpack s'_aptV7)) of
                         ((x_aptV8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aptV8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aptV4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aptV7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apu2z v_apu2A
             -> case fromPersistValue v_apu2A of
                  Left e_apu2B -> Left e_apu2B
                  Right s'_apu2C
                    -> case (reads $ (unpack s'_apu2C)) of
                         ((x_apu2D, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apu2D
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apu2z)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apu2C)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apuaL v_apuaM
             -> case fromPersistValue v_apuaM of
                  Left e_apuaN -> Left e_apuaN
                  Right s'_apuaO
                    -> case (reads $ (unpack s'_apuaO)) of
                         ((x_apuaP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apuaP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apuaL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apuaO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apuvj v_apuvk
             -> case fromPersistValue v_apuvk of
                  Left e_apuvl -> Left e_apuvl
                  Right s'_apuvm
                    -> case (reads $ (unpack s'_apuvm)) of
                         ((x_apuvn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apuvn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apuvj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apuvm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apuCO v_apuCP
             -> case fromPersistValue v_apuCP of
                  Left e_apuCQ -> Left e_apuCQ
                  Right s'_apuCR
                    -> case (reads $ (unpack s'_apuCR)) of
                         ((x_apuCS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apuCS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apuCO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apuCR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apuL0 v_apuL1
             -> case fromPersistValue v_apuL1 of
                  Left e_apuL2 -> Left e_apuL2
                  Right s'_apuL3
                    -> case (reads $ (unpack s'_apuL3)) of
                         ((x_apuL4, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apuL4
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apuL0)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apuL3)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apBNX v_apBNY
             -> case fromPersistValue v_apBNY of
                  Left e_apBNZ -> Left e_apBNZ
                  Right s'_apBO0
                    -> case (reads $ (unpack s'_apBO0)) of
                         ((x_apBO1, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apBO1
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apBNX)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apBO0)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apBVs v_apBVt
             -> case fromPersistValue v_apBVt of
                  Left e_apBVu -> Left e_apBVu
                  Right s'_apBVv
                    -> case (reads $ (unpack s'_apBVv)) of
                         ((x_apBVw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apBVw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apBVs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apBVv)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apC3E v_apC3F
             -> case fromPersistValue v_apC3F of
                  Left e_apC3G -> Left e_apC3G
                  Right s'_apC3H
                    -> case (reads $ (unpack s'_apC3H)) of
                         ((x_apC3I, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apC3I
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apC3E)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apC3H)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apNrh v_apNri
             -> case fromPersistValue v_apNri of
                  Left e_apNrj -> Left e_apNrj
                  Right s'_apNrk
                    -> case (reads $ (unpack s'_apNrk)) of
                         ((x_apNrl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apNrl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apNrh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apNrk)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apNyM v_apNyN
             -> case fromPersistValue v_apNyN of
                  Left e_apNyO -> Left e_apNyO
                  Right s'_apNyP
                    -> case (reads $ (unpack s'_apNyP)) of
                         ((x_apNyQ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apNyQ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apNyM)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apNyP)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apNGY v_apNGZ
             -> case fromPersistValue v_apNGZ of
                  Left e_apNH0 -> Left e_apNH0
                  Right s'_apNH1
                    -> case (reads $ (unpack s'_apNH1)) of
                         ((x_apNH2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apNH2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apNGY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apNH1)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apO1w v_apO1x
             -> case fromPersistValue v_apO1x of
                  Left e_apO1y -> Left e_apO1y
                  Right s'_apO1z
                    -> case (reads $ (unpack s'_apO1z)) of
                         ((x_apO1A, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apO1A
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apO1w)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apO1z)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apO91 v_apO92
             -> case fromPersistValue v_apO92 of
                  Left e_apO93 -> Left e_apO93
                  Right s'_apO94
                    -> case (reads $ (unpack s'_apO94)) of
                         ((x_apO95, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apO95
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apO91)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apO94)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apOhd v_apOhe
             -> case fromPersistValue v_apOhe of
                  Left e_apOhf -> Left e_apOhf
                  Right s'_apOhg
                    -> case (reads $ (unpack s'_apOhg)) of
                         ((x_apOhh, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apOhh
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apOhd)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apOhg)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apVka v_apVkb
             -> case fromPersistValue v_apVkb of
                  Left e_apVkc -> Left e_apVkc
                  Right s'_apVkd
                    -> case (reads $ (unpack s'_apVkd)) of
                         ((x_apVke, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apVke
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apVka)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apVkd)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apVrF v_apVrG
             -> case fromPersistValue v_apVrG of
                  Left e_apVrH -> Left e_apVrH
                  Right s'_apVrI
                    -> case (reads $ (unpack s'_apVrI)) of
                         ((x_apVrJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apVrJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apVrF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apVrI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_apVzR v_apVzS
             -> case fromPersistValue v_apVzS of
                  Left e_apVzT -> Left e_apVzT
                  Right s'_apVzU
                    -> case (reads $ (unpack s'_apVzU)) of
                         ((x_apVzV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_apVzV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_apVzR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_apVzU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aq2CO v_aq2CP
             -> case fromPersistValue v_aq2CP of
                  Left e_aq2CQ -> Left e_aq2CQ
                  Right s'_aq2CR
                    -> case (reads $ (unpack s'_aq2CR)) of
                         ((x_aq2CS, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aq2CS
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aq2CO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aq2CR)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aq2Kj v_aq2Kk
             -> case fromPersistValue v_aq2Kk of
                  Left e_aq2Kl -> Left e_aq2Kl
                  Right s'_aq2Km
                    -> case (reads $ (unpack s'_aq2Km)) of
                         ((x_aq2Kn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aq2Kn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aq2Kj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aq2Km)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aq2Sv v_aq2Sw
             -> case fromPersistValue v_aq2Sw of
                  Left e_aq2Sx -> Left e_aq2Sx
                  Right s'_aq2Sy
                    -> case (reads $ (unpack s'_aq2Sy)) of
                         ((x_aq2Sz, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aq2Sz
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aq2Sv)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aq2Sy)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aq9Vs v_aq9Vt
             -> case fromPersistValue v_aq9Vt of
                  Left e_aq9Vu -> Left e_aq9Vu
                  Right s'_aq9Vv
                    -> case (reads $ (unpack s'_aq9Vv)) of
                         ((x_aq9Vw, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aq9Vw
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aq9Vs)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aq9Vv)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqa2X v_aqa2Y
             -> case fromPersistValue v_aqa2Y of
                  Left e_aqa2Z -> Left e_aqa2Z
                  Right s'_aqa30
                    -> case (reads $ (unpack s'_aqa30)) of
                         ((x_aqa31, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqa31
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqa2X)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqa30)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqab9 v_aqaba
             -> case fromPersistValue v_aqaba of
                  Left e_aqabb -> Left e_aqabb
                  Right s'_aqabc
                    -> case (reads $ (unpack s'_aqabc)) of
                         ((x_aqabd, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqabd
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqab9)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqabc)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqhe6 v_aqhe7
             -> case fromPersistValue v_aqhe7 of
                  Left e_aqhe8 -> Left e_aqhe8
                  Right s'_aqhe9
                    -> case (reads $ (unpack s'_aqhe9)) of
                         ((x_aqhea, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqhea
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqhe6)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqhe9)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqhlB v_aqhlC
             -> case fromPersistValue v_aqhlC of
                  Left e_aqhlD -> Left e_aqhlD
                  Right s'_aqhlE
                    -> case (reads $ (unpack s'_aqhlE)) of
                         ((x_aqhlF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqhlF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqhlB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqhlE)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqhtN v_aqhtO
             -> case fromPersistValue v_aqhtO of
                  Left e_aqhtP -> Left e_aqhtP
                  Right s'_aqhtQ
                    -> case (reads $ (unpack s'_aqhtQ)) of
                         ((x_aqhtR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqhtR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqhtN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqhtQ)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqt8S v_aqt8T
             -> case fromPersistValue v_aqt8T of
                  Left e_aqt8U -> Left e_aqt8U
                  Right s'_aqt8V
                    -> case (reads $ (unpack s'_aqt8V)) of
                         ((x_aqt8W, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqt8W
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqt8S)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqt8V)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqtgn v_aqtgo
             -> case fromPersistValue v_aqtgo of
                  Left e_aqtgp -> Left e_aqtgp
                  Right s'_aqtgq
                    -> case (reads $ (unpack s'_aqtgq)) of
                         ((x_aqtgr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqtgr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqtgn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqtgq)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqtoz v_aqtoA
             -> case fromPersistValue v_aqtoA of
                  Left e_aqtoB -> Left e_aqtoB
                  Right s'_aqtoC
                    -> case (reads $ (unpack s'_aqtoC)) of
                         ((x_aqtoD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqtoD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqtoz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqtoC)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqtJJ v_aqtJK
             -> case fromPersistValue v_aqtJK of
                  Left e_aqtJL -> Left e_aqtJL
                  Right s'_aqtJM
                    -> case (reads $ (unpack s'_aqtJM)) of
                         ((x_aqtJN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqtJN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqtJJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqtJM)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqtRe v_aqtRf
             -> case fromPersistValue v_aqtRf of
                  Left e_aqtRg -> Left e_aqtRg
                  Right s'_aqtRh
                    -> case (reads $ (unpack s'_aqtRh)) of
                         ((x_aqtRi, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqtRi
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqtRe)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqtRh)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqtZq v_aqtZr
             -> case fromPersistValue v_aqtZr of
                  Left e_aqtZs -> Left e_aqtZs
                  Right s'_aqtZt
                    -> case (reads $ (unpack s'_aqtZt)) of
                         ((x_aqtZu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqtZu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqtZq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqtZt)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqB2n v_aqB2o
             -> case fromPersistValue v_aqB2o of
                  Left e_aqB2p -> Left e_aqB2p
                  Right s'_aqB2q
                    -> case (reads $ (unpack s'_aqB2q)) of
                         ((x_aqB2r, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqB2r
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqB2n)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqB2q)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqB9S v_aqB9T
             -> case fromPersistValue v_aqB9T of
                  Left e_aqB9U -> Left e_aqB9U
                  Right s'_aqB9V
                    -> case (reads $ (unpack s'_aqB9V)) of
                         ((x_aqB9W, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqB9W
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqB9S)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqB9V)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqBi4 v_aqBi5
             -> case fromPersistValue v_aqBi5 of
                  Left e_aqBi6 -> Left e_aqBi6
                  Right s'_aqBi7
                    -> case (reads $ (unpack s'_aqBi7)) of
                         ((x_aqBi8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqBi8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqBi4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqBi7)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqMFH v_aqMFI
             -> case fromPersistValue v_aqMFI of
                  Left e_aqMFJ -> Left e_aqMFJ
                  Right s'_aqMFK
                    -> case (reads $ (unpack s'_aqMFK)) of
                         ((x_aqMFL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqMFL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqMFH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqMFK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqMNc v_aqMNd
             -> case fromPersistValue v_aqMNd of
                  Left e_aqMNe -> Left e_aqMNe
                  Right s'_aqMNf
                    -> case (reads $ (unpack s'_aqMNf)) of
                         ((x_aqMNg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqMNg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqMNc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqMNf)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqMVo v_aqMVp
             -> case fromPersistValue v_aqMVp of
                  Left e_aqMVq -> Left e_aqMVq
                  Right s'_aqMVr
                    -> case (reads $ (unpack s'_aqMVr)) of
                         ((x_aqMVs, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqMVs
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqMVo)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqMVr)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqNfW v_aqNfX
             -> case fromPersistValue v_aqNfX of
                  Left e_aqNfY -> Left e_aqNfY
                  Right s'_aqNfZ
                    -> case (reads $ (unpack s'_aqNfZ)) of
                         ((x_aqNg0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqNg0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqNfW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqNfZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqNnr v_aqNns
             -> case fromPersistValue v_aqNns of
                  Left e_aqNnt -> Left e_aqNnt
                  Right s'_aqNnu
                    -> case (reads $ (unpack s'_aqNnu)) of
                         ((x_aqNnv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqNnv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqNnr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqNnu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqNvD v_aqNvE
             -> case fromPersistValue v_aqNvE of
                  Left e_aqNvF -> Left e_aqNvF
                  Right s'_aqNvG
                    -> case (reads $ (unpack s'_aqNvG)) of
                         ((x_aqNvH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqNvH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqNvD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqNvG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqUyA v_aqUyB
             -> case fromPersistValue v_aqUyB of
                  Left e_aqUyC -> Left e_aqUyC
                  Right s'_aqUyD
                    -> case (reads $ (unpack s'_aqUyD)) of
                         ((x_aqUyE, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqUyE
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqUyA)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqUyD)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqUG5 v_aqUG6
             -> case fromPersistValue v_aqUG6 of
                  Left e_aqUG7 -> Left e_aqUG7
                  Right s'_aqUG8
                    -> case (reads $ (unpack s'_aqUG8)) of
                         ((x_aqUG9, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqUG9
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqUG5)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqUG8)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aqUOh v_aqUOi
             -> case fromPersistValue v_aqUOi of
                  Left e_aqUOj -> Left e_aqUOj
                  Right s'_aqUOk
                    -> case (reads $ (unpack s'_aqUOk)) of
                         ((x_aqUOl, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aqUOl
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aqUOh)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aqUOk)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar1Re v_ar1Rf
             -> case fromPersistValue v_ar1Rf of
                  Left e_ar1Rg -> Left e_ar1Rg
                  Right s'_ar1Rh
                    -> case (reads $ (unpack s'_ar1Rh)) of
                         ((x_ar1Ri, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar1Ri
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar1Re)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar1Rh)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar1YJ v_ar1YK
             -> case fromPersistValue v_ar1YK of
                  Left e_ar1YL -> Left e_ar1YL
                  Right s'_ar1YM
                    -> case (reads $ (unpack s'_ar1YM)) of
                         ((x_ar1YN, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar1YN
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar1YJ)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar1YM)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ar26V v_ar26W
             -> case fromPersistValue v_ar26W of
                  Left e_ar26X -> Left e_ar26X
                  Right s'_ar26Y
                    -> case (reads $ (unpack s'_ar26Y)) of
                         ((x_ar26Z, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ar26Z
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ar26V)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ar26Y)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ardLK v_ardLL
             -> case fromPersistValue v_ardLL of
                  Left e_ardLM -> Left e_ardLM
                  Right s'_ardLN
                    -> case (reads $ (unpack s'_ardLN)) of
                         ((x_ardLO, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ardLO
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ardLK)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ardLN)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ardTf v_ardTg
             -> case fromPersistValue v_ardTg of
                  Left e_ardTh -> Left e_ardTh
                  Right s'_ardTi
                    -> case (reads $ (unpack s'_ardTi)) of
                         ((x_ardTj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ardTj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ardTf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ardTi)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_are1r v_are1s
             -> case fromPersistValue v_are1s of
                  Left e_are1t -> Left e_are1t
                  Right s'_are1u
                    -> case (reads $ (unpack s'_are1u)) of
                         ((x_are1v, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_are1v
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_are1r)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_are1u)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aremG v_aremH
             -> case fromPersistValue v_aremH of
                  Left e_aremI -> Left e_aremI
                  Right s'_aremJ
                    -> case (reads $ (unpack s'_aremJ)) of
                         ((x_aremK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aremK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aremG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aremJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_areub v_areuc
             -> case fromPersistValue v_areuc of
                  Left e_areud -> Left e_areud
                  Right s'_areue
                    -> case (reads $ (unpack s'_areue)) of
                         ((x_areuf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_areuf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_areub)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_areue)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_areCn v_areCo
             -> case fromPersistValue v_areCo of
                  Left e_areCp -> Left e_areCp
                  Right s'_areCq
                    -> case (reads $ (unpack s'_areCq)) of
                         ((x_areCr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_areCr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_areCn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_areCq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arqhc v_arqhd
             -> case fromPersistValue v_arqhd of
                  Left e_arqhe -> Left e_arqhe
                  Right s'_arqhf
                    -> case (reads $ (unpack s'_arqhf)) of
                         ((x_arqhg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arqhg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arqhc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arqhf)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arqoH v_arqoI
             -> case fromPersistValue v_arqoI of
                  Left e_arqoJ -> Left e_arqoJ
                  Right s'_arqoK
                    -> case (reads $ (unpack s'_arqoK)) of
                         ((x_arqoL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arqoL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arqoH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arqoK)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arqwT v_arqwU
             -> case fromPersistValue v_arqwU of
                  Left e_arqwV -> Left e_arqwV
                  Right s'_arqwW
                    -> case (reads $ (unpack s'_arqwW)) of
                         ((x_arqwX, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arqwX
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arqwT)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arqwW)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arqS3 v_arqS4
             -> case fromPersistValue v_arqS4 of
                  Left e_arqS5 -> Left e_arqS5
                  Right s'_arqS6
                    -> case (reads $ (unpack s'_arqS6)) of
                         ((x_arqS7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arqS7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arqS3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arqS6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arqZy v_arqZz
             -> case fromPersistValue v_arqZz of
                  Left e_arqZA -> Left e_arqZA
                  Right s'_arqZB
                    -> case (reads $ (unpack s'_arqZB)) of
                         ((x_arqZC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arqZC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arqZy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arqZB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arr7K v_arr7L
             -> case fromPersistValue v_arr7L of
                  Left e_arr7M -> Left e_arr7M
                  Right s'_arr7N
                    -> case (reads $ (unpack s'_arr7N)) of
                         ((x_arr7O, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arr7O
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arr7K)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arr7N)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arCMz v_arCMA
             -> case fromPersistValue v_arCMA of
                  Left e_arCMB -> Left e_arCMB
                  Right s'_arCMC
                    -> case (reads $ (unpack s'_arCMC)) of
                         ((x_arCMD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arCMD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arCMz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arCMC)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arCU4 v_arCU5
             -> case fromPersistValue v_arCU5 of
                  Left e_arCU6 -> Left e_arCU6
                  Right s'_arCU7
                    -> case (reads $ (unpack s'_arCU7)) of
                         ((x_arCU8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arCU8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arCU4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arCU7)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arD2g v_arD2h
             -> case fromPersistValue v_arD2h of
                  Left e_arD2i -> Left e_arD2i
                  Right s'_arD2j
                    -> case (reads $ (unpack s'_arD2j)) of
                         ((x_arD2k, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arD2k
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arD2g)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arD2j)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arDnq v_arDnr
             -> case fromPersistValue v_arDnr of
                  Left e_arDns -> Left e_arDns
                  Right s'_arDnt
                    -> case (reads $ (unpack s'_arDnt)) of
                         ((x_arDnu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arDnu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arDnq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arDnt)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arDuV v_arDuW
             -> case fromPersistValue v_arDuW of
                  Left e_arDuX -> Left e_arDuX
                  Right s'_arDuY
                    -> case (reads $ (unpack s'_arDuY)) of
                         ((x_arDuZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arDuZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arDuV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arDuY)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arDD7 v_arDD8
             -> case fromPersistValue v_arDD8 of
                  Left e_arDD9 -> Left e_arDD9
                  Right s'_arDDa
                    -> case (reads $ (unpack s'_arDDa)) of
                         ((x_arDDb, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arDDb
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arDD7)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arDDa)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arPhW v_arPhX
             -> case fromPersistValue v_arPhX of
                  Left e_arPhY -> Left e_arPhY
                  Right s'_arPhZ
                    -> case (reads $ (unpack s'_arPhZ)) of
                         ((x_arPi0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arPi0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arPhW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arPhZ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arPpr v_arPps
             -> case fromPersistValue v_arPps of
                  Left e_arPpt -> Left e_arPpt
                  Right s'_arPpu
                    -> case (reads $ (unpack s'_arPpu)) of
                         ((x_arPpv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arPpv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arPpr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arPpu)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arPxD v_arPxE
             -> case fromPersistValue v_arPxE of
                  Left e_arPxF -> Left e_arPxF
                  Right s'_arPxG
                    -> case (reads $ (unpack s'_arPxG)) of
                         ((x_arPxH, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arPxH
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arPxD)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arPxG)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arPSN v_arPSO
             -> case fromPersistValue v_arPSO of
                  Left e_arPSP -> Left e_arPSP
                  Right s'_arPSQ
                    -> case (reads $ (unpack s'_arPSQ)) of
                         ((x_arPSR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arPSR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arPSN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arPSQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arQ0i v_arQ0j
             -> case fromPersistValue v_arQ0j of
                  Left e_arQ0k -> Left e_arQ0k
                  Right s'_arQ0l
                    -> case (reads $ (unpack s'_arQ0l)) of
                         ((x_arQ0m, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arQ0m
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arQ0i)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arQ0l)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_arQ8u v_arQ8v
             -> case fromPersistValue v_arQ8v of
                  Left e_arQ8w -> Left e_arQ8w
                  Right s'_arQ8x
                    -> case (reads $ (unpack s'_arQ8x)) of
                         ((x_arQ8y, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_arQ8y
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_arQ8u)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_arQ8x)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as1Nj v_as1Nk
             -> case fromPersistValue v_as1Nk of
                  Left e_as1Nl -> Left e_as1Nl
                  Right s'_as1Nm
                    -> case (reads $ (unpack s'_as1Nm)) of
                         ((x_as1Nn, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as1Nn
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as1Nj)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as1Nm)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as1UO v_as1UP
             -> case fromPersistValue v_as1UP of
                  Left e_as1UQ -> Left e_as1UQ
                  Right s'_as1UR
                    -> case (reads $ (unpack s'_as1UR)) of
                         ((x_as1US, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as1US
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as1UO)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as1UR)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as230 v_as231
             -> case fromPersistValue v_as231 of
                  Left e_as232 -> Left e_as232
                  Right s'_as233
                    -> case (reads $ (unpack s'_as233)) of
                         ((x_as234, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as234
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as230)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as233)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as2oa v_as2ob
             -> case fromPersistValue v_as2ob of
                  Left e_as2oc -> Left e_as2oc
                  Right s'_as2od
                    -> case (reads $ (unpack s'_as2od)) of
                         ((x_as2oe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as2oe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as2oa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as2od)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as2vF v_as2vG
             -> case fromPersistValue v_as2vG of
                  Left e_as2vH -> Left e_as2vH
                  Right s'_as2vI
                    -> case (reads $ (unpack s'_as2vI)) of
                         ((x_as2vJ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as2vJ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as2vF)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as2vI)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_as2DR v_as2DS
             -> case fromPersistValue v_as2DS of
                  Left e_as2DT -> Left e_as2DT
                  Right s'_as2DU
                    -> case (reads $ (unpack s'_as2DU)) of
                         ((x_as2DV, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_as2DV
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_as2DR)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_as2DU)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aseiG v_aseiH
             -> case fromPersistValue v_aseiH of
                  Left e_aseiI -> Left e_aseiI
                  Right s'_aseiJ
                    -> case (reads $ (unpack s'_aseiJ)) of
                         ((x_aseiK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aseiK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aseiG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aseiJ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aseqb v_aseqc
             -> case fromPersistValue v_aseqc of
                  Left e_aseqd -> Left e_aseqd
                  Right s'_aseqe
                    -> case (reads $ (unpack s'_aseqe)) of
                         ((x_aseqf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aseqf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aseqb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aseqe)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aseyn v_aseyo
             -> case fromPersistValue v_aseyo of
                  Left e_aseyp -> Left e_aseyp
                  Right s'_aseyq
                    -> case (reads $ (unpack s'_aseyq)) of
                         ((x_aseyr, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aseyr
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aseyn)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aseyq)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_aseTx v_aseTy
             -> case fromPersistValue v_aseTy of
                  Left e_aseTz -> Left e_aseTz
                  Right s'_aseTA
                    -> case (reads $ (unpack s'_aseTA)) of
                         ((x_aseTB, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_aseTB
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_aseTx)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_aseTA)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asf12 v_asf13
             -> case fromPersistValue v_asf13 of
                  Left e_asf14 -> Left e_asf14
                  Right s'_asf15
                    -> case (reads $ (unpack s'_asf15)) of
                         ((x_asf16, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asf16
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asf12)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asf15)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asf9e v_asf9f
             -> case fromPersistValue v_asf9f of
                  Left e_asf9g -> Left e_asf9g
                  Right s'_asf9h
                    -> case (reads $ (unpack s'_asf9h)) of
                         ((x_asf9i, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asf9i
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asf9e)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asf9h)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asqO3 v_asqO4
             -> case fromPersistValue v_asqO4 of
                  Left e_asqO5 -> Left e_asqO5
                  Right s'_asqO6
                    -> case (reads $ (unpack s'_asqO6)) of
                         ((x_asqO7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asqO7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asqO3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asqO6)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asqVy v_asqVz
             -> case fromPersistValue v_asqVz of
                  Left e_asqVA -> Left e_asqVA
                  Right s'_asqVB
                    -> case (reads $ (unpack s'_asqVB)) of
                         ((x_asqVC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asqVC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asqVy)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asqVB)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asr3K v_asr3L
             -> case fromPersistValue v_asr3L of
                  Left e_asr3M -> Left e_asr3M
                  Right s'_asr3N
                    -> case (reads $ (unpack s'_asr3N)) of
                         ((x_asr3O, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asr3O
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asr3K)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asr3N)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asroU v_asroV
             -> case fromPersistValue v_asroV of
                  Left e_asroW -> Left e_asroW
                  Right s'_asroX
                    -> case (reads $ (unpack s'_asroX)) of
                         ((x_asroY, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asroY
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asroU)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asroX)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asrwp v_asrwq
             -> case fromPersistValue v_asrwq of
                  Left e_asrwr -> Left e_asrwr
                  Right s'_asrws
                    -> case (reads $ (unpack s'_asrws)) of
                         ((x_asrwt, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asrwt
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asrwp)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asrws)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asrEB v_asrEC
             -> case fromPersistValue v_asrEC of
                  Left e_asrED -> Left e_asrED
                  Right s'_asrEE
                    -> case (reads $ (unpack s'_asrEE)) of
                         ((x_asrEF, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asrEF
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asrEB)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asrEE)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asD2e v_asD2f
             -> case fromPersistValue v_asD2f of
                  Left e_asD2g -> Left e_asD2g
                  Right s'_asD2h
                    -> case (reads $ (unpack s'_asD2h)) of
                         ((x_asD2i, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asD2i
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asD2e)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asD2h)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asD9J v_asD9K
             -> case fromPersistValue v_asD9K of
                  Left e_asD9L -> Left e_asD9L
                  Right s'_asD9M
                    -> case (reads $ (unpack s'_asD9M)) of
                         ((x_asD9N, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asD9N
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asD9J)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asD9M)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asDhV v_asDhW
             -> case fromPersistValue v_asDhW of
                  Left e_asDhX -> Left e_asDhX
                  Right s'_asDhY
                    -> case (reads $ (unpack s'_asDhY)) of
                         ((x_asDhZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asDhZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asDhV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asDhY)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asDCt v_asDCu
             -> case fromPersistValue v_asDCu of
                  Left e_asDCv -> Left e_asDCv
                  Right s'_asDCw
                    -> case (reads $ (unpack s'_asDCw)) of
                         ((x_asDCx, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asDCx
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asDCt)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asDCw)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asDJY v_asDJZ
             -> case fromPersistValue v_asDJZ of
                  Left e_asDK0 -> Left e_asDK0
                  Right s'_asDK1
                    -> case (reads $ (unpack s'_asDK1)) of
                         ((x_asDK2, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asDK2
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asDJY)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asDK1)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asDSa v_asDSb
             -> case fromPersistValue v_asDSb of
                  Left e_asDSc -> Left e_asDSc
                  Right s'_asDSd
                    -> case (reads $ (unpack s'_asDSd)) of
                         ((x_asDSe, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asDSe
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asDSa)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asDSd)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asPfN v_asPfO
             -> case fromPersistValue v_asPfO of
                  Left e_asPfP -> Left e_asPfP
                  Right s'_asPfQ
                    -> case (reads $ (unpack s'_asPfQ)) of
                         ((x_asPfR, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asPfR
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asPfN)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asPfQ)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asPni v_asPnj
             -> case fromPersistValue v_asPnj of
                  Left e_asPnk -> Left e_asPnk
                  Right s'_asPnl
                    -> case (reads $ (unpack s'_asPnl)) of
                         ((x_asPnm, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asPnm
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asPni)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asPnl)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asPvu v_asPvv
             -> case fromPersistValue v_asPvv of
                  Left e_asPvw -> Left e_asPvw
                  Right s'_asPvx
                    -> case (reads $ (unpack s'_asPvx)) of
                         ((x_asPvy, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asPvy
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asPvu)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asPvx)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asPQb v_asPQc
             -> case fromPersistValue v_asPQc of
                  Left e_asPQd -> Left e_asPQd
                  Right s'_asPQe
                    -> case (reads $ (unpack s'_asPQe)) of
                         ((x_asPQf, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asPQf
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asPQb)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asPQe)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asPXG v_asPXH
             -> case fromPersistValue v_asPXH of
                  Left e_asPXI -> Left e_asPXI
                  Right s'_asPXJ
                    -> case (reads $ (unpack s'_asPXJ)) of
                         ((x_asPXK, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asPXK
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asPXG)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asPXJ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_asQ5S v_asQ5T
             -> case fromPersistValue v_asQ5T of
                  Left e_asQ5U -> Left e_asQ5U
                  Right s'_asQ5V
                    -> case (reads $ (unpack s'_asQ5V)) of
                         ((x_asQ5W, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_asQ5W
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_asQ5S)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_asQ5V)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_at1KH v_at1KI
             -> case fromPersistValue v_at1KI of
                  Left e_at1KJ -> Left e_at1KJ
                  Right s'_at1KK
                    -> case (reads $ (unpack s'_at1KK)) of
                         ((x_at1KL, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_at1KL
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_at1KH)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_at1KK)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_at1Sc v_at1Sd
             -> case fromPersistValue v_at1Sd of
                  Left e_at1Se -> Left e_at1Se
                  Right s'_at1Sf
                    -> case (reads $ (unpack s'_at1Sf)) of
                         ((x_at1Sg, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_at1Sg
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_at1Sc)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_at1Sf)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_at20o v_at20p
             -> case fromPersistValue v_at20p of
                  Left e_at20q -> Left e_at20q
                  Right s'_at20r
                    -> case (reads $ (unpack s'_at20r)) of
                         ((x_at20s, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_at20s
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_at20o)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_at20r)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_at2ly v_at2lz
             -> case fromPersistValue v_at2lz of
                  Left e_at2lA -> Left e_at2lA
                  Right s'_at2lB
                    -> case (reads $ (unpack s'_at2lB)) of
                         ((x_at2lC, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_at2lC
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_at2ly)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_at2lB)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_at2t3 v_at2t4
             -> case fromPersistValue v_at2t4 of
                  Left e_at2t5 -> Left e_at2t5
                  Right s'_at2t6
                    -> case (reads $ (unpack s'_at2t6)) of
                         ((x_at2t7, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_at2t7
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_at2t3)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_at2t6)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_at2Bf v_at2Bg
             -> case fromPersistValue v_at2Bg of
                  Left e_at2Bh -> Left e_at2Bh
                  Right s'_at2Bi
                    -> case (reads $ (unpack s'_at2Bi)) of
                         ((x_at2Bj, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_at2Bj
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_at2Bf)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_at2Bi)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ateg4 v_ateg5
             -> case fromPersistValue v_ateg5 of
                  Left e_ateg6 -> Left e_ateg6
                  Right s'_ateg7
                    -> case (reads $ (unpack s'_ateg7)) of
                         ((x_ateg8, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ateg8
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ateg4)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ateg7)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atenz v_atenA
             -> case fromPersistValue v_atenA of
                  Left e_atenB -> Left e_atenB
                  Right s'_atenC
                    -> case (reads $ (unpack s'_atenC)) of
                         ((x_atenD, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atenD
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atenz)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atenC)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atevL v_atevM
             -> case fromPersistValue v_atevM of
                  Left e_atevN -> Left e_atevN
                  Right s'_atevO
                    -> case (reads $ (unpack s'_atevO)) of
                         ((x_atevP, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atevP
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atevL)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atevO)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ateQV v_ateQW
             -> case fromPersistValue v_ateQW of
                  Left e_ateQX -> Left e_ateQX
                  Right s'_ateQY
                    -> case (reads $ (unpack s'_ateQY)) of
                         ((x_ateQZ, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ateQZ
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ateQV)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ateQY)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_ateYq v_ateYr
             -> case fromPersistValue v_ateYr of
                  Left e_ateYs -> Left e_ateYs
                  Right s'_ateYt
                    -> case (reads $ (unpack s'_ateYt)) of
                         ((x_ateYu, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_ateYu
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_ateYq)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_ateYt)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atf6C v_atf6D
             -> case fromPersistValue v_atf6D of
                  Left e_atf6E -> Left e_atf6E
                  Right s'_atf6F
                    -> case (reads $ (unpack s'_atf6F)) of
                         ((x_atf6G, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atf6G
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atf6C)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atf6F)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:29:1-27: Splicing declarations
    derivePersistField "Gender"
  ======>
    instance PersistField Gender where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atqLr v_atqLs
             -> case fromPersistValue v_atqLs of
                  Left e_atqLt -> Left e_atqLt
                  Right s'_atqLu
                    -> case (reads $ (unpack s'_atqLu)) of
                         ((x_atqLv, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atqLv
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atqLr)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atqLu)))))
            "Gender"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql Gender where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:39:1-36: Splicing declarations
    derivePersistField "QuestionOptions"
  ======>
    instance PersistField QuestionOptions where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atqSW v_atqSX
             -> case fromPersistValue v_atqSX of
                  Left e_atqSY -> Left e_atqSY
                  Right s'_atqSZ
                    -> case (reads $ (unpack s'_atqSZ)) of
                         ((x_atqT0, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atqT0
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atqSW)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atqSZ)))))
            "QuestionOptions"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionOptions where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
/home/nikita/Projects/labs/Databases/Course-Project/Server/src/Model/Types.hs:49:1-35: Splicing declarations
    derivePersistField "QuestionAnswer"
  ======>
    instance PersistField QuestionAnswer where
      toPersistValue = (PersistText . (pack . show))
      fromPersistValue
        = (\ dt_atr18 v_atr19
             -> case fromPersistValue v_atr19 of
                  Left e_atr1a -> Left e_atr1a
                  Right s'_atr1b
                    -> case (reads $ (unpack s'_atr1b)) of
                         ((x_atr1c, _) ghc-prim-0.5.1.1:GHC.Types.: _) -> Right x_atr1c
                         ghc-prim-0.5.1.1:GHC.Types.[]
                           -> (Left
                                 $ ((pack "Invalid ")
                                      Database.Persist.TH.++
                                        ((pack dt_atr18)
                                           Database.Persist.TH.++
                                             ((pack ": ") Database.Persist.TH.++ s'_atr1b)))))
            "QuestionAnswer"
    instance persistent-2.8.1:Database.Persist.Sql.Class.PersistFieldSql QuestionAnswer where
      persistent-2.8.1:Database.Persist.Sql.Class.sqlType _ = SqlString
